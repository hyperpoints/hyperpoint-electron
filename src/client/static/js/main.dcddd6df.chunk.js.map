{"version":3,"sources":["resources/help.png","utils/history.js","api/instance.js","api/redux/actions/nodeActions.js","api/redux/actions/types.js","api/redux/actions/authActions.js","api/redux/actions/userActions.js","api/redux/actions/associationActions.js","api/redux/actions/componentActions.js","api/redux/actions/portActions.js","api/redux/actions/fileActions.js","components/layouts/Login.js","components/layouts/ForgotPassword.js","components/elements/Spinner.js","components/elements/MainSider.js","utils/inputValidation.js","components/elements/IOBar.js","components/elements/node/NodeCardHeaderFull.js","components/elements/node/NodeCardHeader.js","types/render/core/Text.js","types/render/core/Image.js","types/render/core/Url.js","types/render/core/File.js","types/render/core/Audio.js","types/render/core/Package.js","types/render/core/Zip.js","types/render/core/Collection.js","types/render/core/User.js","types/render/NodeRenderer.js","components/elements/node/NodeCard.js","components/elements/association/AssociationLink.js","components/elements/association/AssociationLinkList.js","components/elements/association/AssociationSider.js","components/elements/node/NodeList.js","components/layouts/Home.js","components/layouts/Profile.js","components/layouts/Options.js","components/elements/MainContent.js","components/layouts/Activity.js","components/elements/association/AssociationList.js","components/QuillEditor/QuillEditor.js","api/redux/reducers/associationReducer.js","api/redux/actions/textActions.js","components/elements/MainFooter.js","components/layouts/Collections.js","components/layouts/CreateAccount.js","components/elements/node/NodeCardFull.js","components/layouts/AssociationBrowser.js","components/layouts/GraphBrowser.js","api/redux/actions/graphActions.js","components/layouts/Help.js","components/elements/node/PinList.js","components/elements/PinHeader.js","components/layouts/Pins.js","components/App.js","api/redux/reducers/authReducer.js","api/redux/reducers/nodeReducer.js","api/redux/reducers/componentReducer.js","api/redux/reducers/graphReducer.js","index.js","api/redux/reducers/index.js","resources/synthona-logo.png","resources/cloud9.png"],"names":["module","exports","createBrowserHistory","CancelToken","axios","source","create","baseURL","withCredentials","cancelToken","token","fetchNodes","query","dispatch","a","type","instance","get","params","page","searchQuery","pinned","response","payload","data","history","push","searchNodes","message","error","updateNode","node","patch","uuid","hidden","searchable","name","preview","result","console","log","createNode","file","delta","Delta","insert","content","JSON","stringify","put","isFile","linkedNode","status","createUrlNode","path","markNodeView","setActiveNode","clearActiveNode","signOut","success","fetchUserByUsername","username","user","fetchAssociationLinkList","nodeUUID","fetchAssociations","updateLinkStrength","nodeA","nodeB","showComponent","hideComponent","generateInstanceExport","createFileNode","fileData","FormData","append","headers","Content","Footer","Login","getUsername","onSubmit","values","setSubmitting","props","signIn","document","title","className","initialValues","email","password","confirmPassword","validationSchema","this","isSubmitting","role","aria-label","style","paddingRight","placeholder","component","disabled","to","Component","Yup","shape","required","min","connect","state","isSignedIn","auth","formValues","localStorage","setItem","displayName","ForgotPassword","forgotPassword","newPassword","confirmNewPassword","oneOf","window","location","replace","Spinner","height","display","justifyContent","alignItems","size","Item","MainSider","signOutHandler","toggleSignoutModal","showSignoutModal","setState","body","removeProperty","renderDrawerClasses","animate","visible","mainSider","width","mask","showMask","placement","closable","onClose","e","mode","defaultSelectedKeys","src","avatar","defaultAvatar","icon","verticalAlign","marginTop","objectFit","theme","margin","onClick","centered","onOk","okType","okText","onCancel","components","componentList","validUrl","value","URL","_","isImageUrl","url","match","Header","Option","IOBar","toggleInputMode","inputMode","modeIcon","nodeTypes","toggleMainSider","commandHandler","input","createNodeHandler","activeNode","selectLocalFile","createElement","setAttribute","click","onchange","files","renderSelectBefore","showSearch","showArrow","onChange","createType","queryType","marginRight","onPressEnter","event","maxLength","target","defaultValue","addonBefore","nodes","NodeCardHeaderFull","saveName","updateActiveNode","nodeData","toggleDeleteModal","showDeleteModal","deleteHandler","deleting","deleteNode","toggleExportModal","showExportModal","exportHandler","generateExportByUUID","toggleUrlPreviewImageModal","showUrlPreviewImageModal","setUrlPreviewImage","toggleHidden","hiddenIcon","toggleSearchable","searchableIcon","togglePinned","pinnedState","renderTitle","editable","onBlur","autoFocus","onKeyPress","key","onFocus","select","onDoubleClick","preventDefault","renderContextualButtons","metadata","importing","expanded","mouseEnterDelay","removeSynthonaImportsByPackage","unpackSynthonaImport","renderExportButton","open","afterClose","getSelection","removeAllRanges","delete","NodeCardHeader","marginLeft","fontSize","textAlign","padding","Text","element","handleClick","handleAssociatonClick","renderNode","Image","renderHeader","onContextMenu","alt","minHeight","Url","renderPreview","color","href","rel","wordBreak","File","Audio","backgroundColor","borderRadius","controls","handleLinkClick","Package","Zip","Collection","onCollectionClick","previewCount","parse","length","nodeCard","User","defaultHeader","NodeRenderer","handleNodeClick","linkedNodeUUID","siderNodeUUID","siderUUID","toggleHeader","showHeader","NodeCard","renderNodeCard","AssociationLink","handleDeleteAssociation","association","activeNodeUUID","deleteAssociationLink","pathname","includes","removeFromAssociationList","renderAssociationLink","mouseLeaveDelay","deletedUUID","AssociationLinkList","loadMore","renderAssociationLinkList","list","associations","map","renderLoadMoreButton","listLength","totalItems","listStyle","id","associationLinkList","associationLinkListPage","totalLinkListItems","AssociationSider","createAssociationHandler","nodeToAssociate","siderNode","associationSiderData","autocompleteValues","forEach","nodeUUIDToAssociate","createAssociation","autocompleteOptions","inputText","renderAutocompleteValues","associationAutocomplete","newValues","hideInfoSider","renderContent","documentElement","cssText","onSelect","associatedNode","associated","NodeList","infiniteScroll","endReached","isFetching","topOfPage","windowHeight","innerHeight","offsetHeight","html","docHeight","Math","max","scrollHeight","clientHeight","windowBottom","pageYOffset","renderNodeList","nodeList","addEventListener","removeEventListener","totalNodes","Home","renderMainSider","scrollTo","top","behavior","Profile","toggleAvatarModal","avatarModal","initializeFromUrlParams","initialized","bio","header","nodeId","marginBottom","draggable","viewBox","d","footer","Options","updatePassword","togglePasswordModal","changePassword","handleClearNodes","toggleDeleteNodesModal","clearAllNodes","showPasswordModal","showDeleteNodesModal","passwordModal","oldPassword","deleteAllNodesModal","passwordValue","deleteNodesValidation","setAvatar","test","updateUserAvatar","setHeader","updateUserHeader","renderDisplayName","saveDisplayName","updateUserInfo","renderBio","saveBio","renderUsername","saveUsername","updateUsername","renderEmail","saveEmail","updateEmail","regenerateCollectionPreviews","updatedUser","imageData","MainContent","children","Activity","AssociationList","currentListLength","renderNodes","associationList","renderList","associationListPage","totalAssociationListItems","CustomClipboard","left","pageXOffset","defaultPrevented","quill","isEnabled","range","retain","index","container","scrollTop","toString","focus","setTimeout","selection","update","Quill","sources","SILENT","concat","convert","updateContents","USER","setSelection","bounds","getBounds","scrollingContainer","import","register","newAssociationList","QuillEditor","ref","componentDidUpdate","querySelectorAll","tool","stopPropagation","textUUID","initializing","text","getItem","readOnly","regeneratePreview","textValue","getEditor","clear","expandHandler","removeItem","exitHandler","getText","substring","processTextNode","selectLocalImage","insertEmbed","RegExp","matcherImageHandler","image","modules","toolbar","font","indent","background","align","script","handlers","expand","exit","clipboard","matchVisual","matchers","allowedFormats","handleChange","bind","overflow","editor","getContents","fullDelta","editTextNode","isLoading","formats","MainFooter","Collections","CreateAccount","createAccount","paddingLeft","NodeCardFull","AssociationBrowser","regenerateCollectionPreview","collectionNode","i","err","paddingTop","isDeleting","GraphBrowser","fetchGraphData","anchorNode","graphData","renderGraph","renderAssociationSider","associationSider","renderAssociationList","zoomed","transform","g","attr","linkData","innerWidth","simulation","forceSimulation","force","forceLink","forceManyBody","strength","forceX","forceY","forceCenter","initialZoom","zoomIdentity","scale","translate","zoomData","zoom","scaleExtent","on","svg","link","selectAll","join","sqrt","call","drag","x","y","raise","active","alphaTarget","restart","fx","fy","graph","loading","Help","position","PinList","renderPinList","PinHeader","Pins","App","isAuth","isAuthenticated","routes","exact","isFetchingAuth","INITIAL_STATE","action","reload","isSaving","nodesArray","Object","splice","some","item","filter","newNodeList","associationLinkListArray","associationsArray","addBackToList","newTotalLinkListItems","newTotalItems","graphNodeList","graphAssociationList","nodeArray","associationArray","reformated","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","authReducer","nodeReducer","componentReducer","associationReducer","graphReducer","applyMiddleware","reduxThunk","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.dcddd6df.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/help.f2efb220.png\";","import { createBrowserHistory } from 'history';\nexport default createBrowserHistory();\n","import axios from 'axios';\nconst CancelToken = axios.CancelToken;\nconst source = CancelToken.source();\nexport default axios.create({\n  baseURL: 'http://localhost:3077',\n  withCredentials: true,\n  cancelToken: source.token,\n});\n","import instance from '../../../api/instance';\nimport history from '../../../utils/history';\nimport {\n  FETCH_NODES,\n  FETCH_NODES_ERROR,\n  FETCH_NODES_SUCCESS,\n  UPDATE_NODE,\n  UPDATE_NODE_SUCCESS,\n  UPDATE_NODE_ERROR,\n  UPDATE_ACTIVE_NODE,\n  UPDATE_ACTIVE_NODE_ERROR,\n  UPDATE_ACTIVE_NODE_SUCCESS,\n  SEARCH_NODES,\n  SEARCH_NODES_ERROR,\n  SEARCH_NODES_SUCCESS,\n  RESET_APP,\n  CREATE_NODE,\n  CREATE_NODE_SUCCESS,\n  CREATE_NODE_ERROR,\n  MARK_NODE_VIEW,\n  MARK_NODE_VIEW_ERROR,\n  MARK_NODE_VIEW_SUCCESS,\n  SET_ACTIVE_NODE,\n  SET_ACTIVE_NODE_SUCCESS,\n  SET_ACTIVE_NODE_ERROR,\n  DELETE_NODE,\n  DELETE_NODE_ERROR,\n  DELETE_NODE_SUCCESS,\n  CLEAR_ACTIVE_NODE,\n} from './types';\nimport { message } from 'antd';\nimport Delta from 'quill-delta';\n\n// fetch a list of nodes\nexport const fetchNodes = (query) => async (dispatch) => {\n  try {\n    dispatch({ type: FETCH_NODES });\n    const response = await instance.get('/node/search', {\n      params: {\n        page: query.page,\n        type: query.type,\n        searchQuery: query.searchQuery,\n        pinned: query.pinned,\n      },\n    });\n    dispatch({ type: FETCH_NODES_SUCCESS, payload: response.data, query });\n  } catch (err) {\n    dispatch({ type: FETCH_NODES_ERROR });\n    dispatch({ type: RESET_APP });\n    // message.error('Could not fetch items', 1);\n    history.push('/');\n  }\n};\n\n// search the database\nexport const searchNodes = (query) => async (dispatch) => {\n  if (query.type === 'all') {\n    query.type = null;\n  }\n  try {\n    dispatch({ type: SEARCH_NODES });\n    const response = await instance.get('/node/search', {\n      params: {\n        page: query.page,\n        type: query.type,\n        searchQuery: query.searchQuery,\n        pinned: query.pinned,\n      },\n    });\n    dispatch({ type: SEARCH_NODES_SUCCESS, payload: response.data, query });\n    history.push('/');\n  } catch (err) {\n    dispatch({ type: SEARCH_NODES_ERROR });\n    dispatch({ type: RESET_APP });\n    message.error('Could not search nodes', 1);\n    history.push('/');\n  }\n};\n\n// update node handler\nexport const updateNode = (node) => async (dispatch) => {\n  dispatch({ type: UPDATE_NODE });\n  try {\n    const result = await instance.patch('/node', {\n      uuid: node.uuid,\n      hidden: node.hidden,\n      searchable: node.searchable,\n      name: node.name,\n      preview: node.preview,\n    });\n    dispatch({\n      type: UPDATE_NODE_SUCCESS,\n      uuid: node.uuid,\n      result: result.data.node,\n    });\n    // if the node has been hidden remove it from the nodelist\n    if (node.hidden === true) {\n      dispatch({ type: DELETE_NODE_SUCCESS, uuid: node.uuid });\n    }\n  } catch (err) {\n    console.log(err);\n    dispatch({ type: UPDATE_NODE_ERROR });\n    message.error('There was a problem saving your changes', 1);\n    history.push('/');\n  }\n};\n\n// special handler for updating the active node\nexport const updateActiveNode = (node) => async (dispatch) => {\n  dispatch({ type: UPDATE_ACTIVE_NODE });\n  try {\n    const result = await instance.patch('/node', {\n      uuid: node.uuid,\n      hidden: node.hidden,\n      searchable: node.searchable,\n      name: node.name,\n      preview: node.preview,\n      pinned: node.pinned,\n    });\n    dispatch({\n      type: UPDATE_ACTIVE_NODE_SUCCESS,\n      uuid: node.uuid,\n      result: result.data.node,\n    });\n    // if the node has been hidden remove it from the nodelist\n    if (node.hidden === true) {\n      dispatch({ type: DELETE_NODE_SUCCESS, uuid: node.uuid });\n    }\n  } catch (err) {\n    console.log(err);\n    dispatch({ type: UPDATE_ACTIVE_NODE_ERROR });\n    message.error('There was a problem saving your changes', 1);\n    history.push('/');\n  }\n};\n\nexport const createNode = (node, file) => async (dispatch) => {\n  dispatch({ type: CREATE_NODE });\n  // set content to empty quill delta for text node\n  if (node.type === 'text') {\n    const delta = new Delta();\n    delta.insert(node.name);\n    node.content = JSON.stringify(delta);\n  }\n  try {\n    const response = await instance.put('/node', {\n      isFile: node.isFile,\n      type: node.type,\n      name: node.name,\n      preview: node.preview,\n      content: node.content,\n      linkedNode: node.linkedNode,\n    });\n    dispatch({\n      type: CREATE_NODE_SUCCESS,\n      payload: response.data.node,\n    });\n    if (response.status === 200 && node.type === 'text') {\n      // if successfully created, redirect the user to the edit node page\n      history.push('/edit/text/' + response.data.node.uuid);\n    }\n  } catch (err) {\n    dispatch({ type: CREATE_NODE_ERROR });\n    message.error('Could not create new item', 1);\n    history.push('/');\n  }\n};\n\nexport const createUrlNode = (node) => async (dispatch) => {\n  console.log('create url node');\n  dispatch({ type: CREATE_NODE });\n  try {\n    const response = await instance.put('/url', {\n      isFile: node.isFile,\n      type: node.type,\n      name: node.name,\n      preview: node.preview,\n      path: node.path,\n      content: node.content,\n      linkedNode: node.linkedNode,\n    });\n    console.log(response.data);\n    dispatch({\n      type: CREATE_NODE_SUCCESS,\n      payload: response.data.node,\n    });\n  } catch (err) {\n    dispatch({ type: CREATE_NODE_ERROR });\n    message.error('Could not create new item', 1);\n    history.push('/');\n  }\n};\n\nexport const markNodeView = (node) => async (dispatch) => {\n  dispatch({ type: MARK_NODE_VIEW });\n  try {\n    await instance.patch('/node/viewed', {\n      uuid: node.uuid,\n    });\n    dispatch({ type: MARK_NODE_VIEW_SUCCESS, node });\n  } catch (err) {\n    dispatch({ type: MARK_NODE_VIEW_ERROR });\n    message.error('Could not mark node view', 1);\n    history.push('/');\n  }\n};\n\n// set active node\nexport const setActiveNode = (uuid) => async (dispatch) => {\n  dispatch({ type: SET_ACTIVE_NODE });\n  try {\n    const response = await instance.get('/node', {\n      params: { uuid },\n    });\n    dispatch({ type: SET_ACTIVE_NODE_SUCCESS, payload: response.data });\n  } catch (err) {\n    dispatch({ type: SET_ACTIVE_NODE_ERROR });\n    history.push('/');\n    message.error('Could not retrieve values', 1);\n  }\n};\n\nexport const clearActiveNode = () => {\n  return {\n    type: CLEAR_ACTIVE_NODE,\n  };\n};\n\n// delete text node handler\nexport const deleteNode = (uuid) => async (dispatch) => {\n  dispatch({ type: DELETE_NODE });\n  try {\n    const response = await instance.delete(`/node`, { params: { uuid } });\n    if (response.status === 200) {\n      history.push('/');\n      dispatch({ type: DELETE_NODE_SUCCESS, uuid: uuid });\n      message.success('successfully deleted', 1);\n    }\n  } catch (err) {\n    dispatch({ type: DELETE_NODE_ERROR });\n    message.error('There was a problem deleting the node', 1);\n  }\n};\n\n//regenerate collection previews\nexport const regenerateCollectionPreviews = () => async (dispatch) => {\n  try {\n    await instance.patch(`/collection/regenerate`);\n  } catch (err) {\n    message.error('There was a problem regenerating the collection previews', 1);\n  }\n};\n\n// clear all nodes\nexport const clearAllNodes = (formValues) => async (dispatch) => {\n  try {\n    const response = await instance.patch('/user/clear', {\n      password: formValues.passwordValue,\n    });\n    if (response.status === 200) {\n      history.push('/');\n      message.success('successfully deleted all your data :)', 3);\n    }\n  } catch (err) {\n    console.log(err);\n    message.error('There was a problem, please try again', 1);\n  }\n};\n","export const RESET_APP = 'RESET_APP';\n// modal actions\nexport const SHOW_COMPONENT = 'SHOW_COMPONENT';\nexport const HIDE_COMPONENT = 'HIDE_COMPONENT';\n// sign in\nexport const CREATE_ACCOUNT = 'CREATE_ACCOUNT';\nexport const CREATE_ACCOUNT_SUCCESS = 'CREATE_ACCOUNT_SUCCESS';\nexport const CREATE_ACCOUNT_ERROR = 'CREATE_ACCOUNT_ERROR';\n// sign in\nexport const SIGN_IN = 'SIGN_IN';\nexport const SIGN_IN_SUCCESS = 'SIGN_IN_SUCCESS';\nexport const SIGN_IN_ERROR = 'SIGN_IN_ERROR';\n// sign out\nexport const SIGN_OUT = 'SIGN_OUT';\nexport const SIGN_OUT_ERROR = 'SIGN_OUT_ERROR';\n// refresh auth\nexport const REFRESH_AUTH = 'REFRESH_AUTH';\nexport const REFRESH_AUTH_SUCCESS = 'REFRESH_AUTH_SUCCESS';\nexport const REFRESH_AUTH_ERROR = 'REFRESH_AUTH_ERROR';\n// create node\nexport const CREATE_NODE = 'CREATE_NODE';\nexport const CREATE_NODE_SUCCESS = 'CREATE_NODE_SUCCESS';\nexport const CREATE_NODE_ERROR = 'CREATE_NODE_ERROR';\n// fetch nodes\nexport const FETCH_NODES = 'FETCH_NODES';\nexport const FETCH_NODES_SUCCESS = 'FETCH_NODES_SUCCESS';\nexport const FETCH_NODES_ERROR = 'FETCH_NODES_ERROR';\n// search nodes\nexport const SEARCH_NODES = 'SEARCH_NODES';\nexport const SEARCH_NODES_SUCCESS = 'SEARCH_NODES_SUCCESS';\nexport const SEARCH_NODES_ERROR = 'SEARCH_NODES_ERROR';\n// update node\nexport const UPDATE_NODE = 'UPDATE_NODE';\nexport const UPDATE_NODE_SUCCESS = 'UPDATE_NODE_SUCCESS';\nexport const UPDATE_NODE_ERROR = 'UPDATE_NODE_ERROR';\n// update active node\nexport const UPDATE_ACTIVE_NODE = 'UPDATE_ACTIVE_NODE';\nexport const UPDATE_ACTIVE_NODE_ERROR = 'UPDATE_ACTIVE_NODE_ERROR';\nexport const UPDATE_ACTIVE_NODE_SUCCESS = 'UPDATE_ACTIVE_NODE_SUCCESS';\n// mark node view\nexport const MARK_NODE_VIEW = 'MARK_NODE_VIEW';\nexport const MARK_NODE_VIEW_SUCCESS = 'MARK_NODE_VIEW_SUCCESS';\nexport const MARK_NODE_VIEW_ERROR = 'MARK_NODE_VIEW_ERROR';\n// edit text node\nexport const EDIT_TEXT_NODE = 'EDIT_TEXT_NODE';\nexport const EDIT_TEXT_NODE_SUCCESS = 'EDIT_TEXT_NODE_SUCCESS';\nexport const EDIT_TEXT_NODE_ERROR = 'EDIT_TEXT_NODE_ERROR';\n// process text node\nexport const PROCESS_TEXT_NODE = 'PROCESS_TEXT_NODE';\nexport const PROCESS_TEXT_NODE_SUCCESS = 'PROCESS_TEXT_NODE_SUCCESS';\nexport const PROCESS_TEXT_NODE_ERROR = 'PROCESS_TEXT_NODE_ERROR';\n// create image node\nexport const CREATE_FILE_NODE = 'CREATE_FILE_NODE';\nexport const CREATE_FILE_NODE_SUCCESS = ' CREATE_FILE_NODE_SUCCESS';\nexport const CREATE_FILE_NODE_ERROR = 'CREATE_FILE_NODE_ERROR';\n// fetch user node\nexport const FETCH_USER_NODE = 'FETCH_USER_NODE';\nexport const FETCH_USER_NODE_SUCCESS = 'FETCH_USER_NODE_SUCCESS';\nexport const FETCH_USER_NODE_ERROR = 'FETCH_USER_NODE_ERROR';\n// update user node\nexport const UPDATE_USER_NODE = 'UPDATE_USER_NODE';\nexport const UPDATE_USER_NODE_SUCCESS = 'UPDATE_USER_NODE_SUCCESS';\nexport const UPDATE_USER_NODE_ERROR = 'UPDATE_USER_NODE_ERROR';\n// update user avatar\nexport const UPDATE_USER_AVATAR = 'UPDATE_USER_AVATAR';\nexport const UPDATE_USER_AVATAR_SUCCESS = 'UPDATE_USER_AVATAR_SUCCESS';\nexport const UPDATE_USER_AVATAR_ERROR = 'UPDATE_USER_NODE_ERROR';\n// update user header image\nexport const UPDATE_USER_HEADER = 'UPDATE_USER_HEADER';\nexport const UPDATE_USER_HEADER_SUCCESS = 'UPDATE_USER_HEADER_SUCCESS';\nexport const UPDATE_USER_HEADER_ERROR = 'UPDATE_USER_HEADER_ERROR';\n// create associations\nexport const CREATE_ASSOCIATION = 'CREATE_ASSOCIATION';\nexport const CREATE_ASSOCIATION_SUCCESS = 'CREATE_ASSOCIATION_SUCCESS';\nexport const CREATE_ASSOCIATION_ERROR = 'CREATE_ASSOCIATION_ERROR';\n// fetch associations\nexport const FETCH_ASSOCIATIONS = 'FETCH_ASSOCIATIONS';\nexport const FETCH_ASSOCIATIONS_SUCCESS = 'FETCH_ASSOCIATIONS_SUCCESS';\nexport const FETCH_ASSOCIATIONS_ERROR = 'FETCH_ASSOCIATIONS_ERROR';\n// reset association list\nexport const RESET_ASSOCIATIONS = 'RESET_ASSOCIATIONS';\n// fetch association link list\nexport const FETCH_ASSOCIATION_LINK_LIST = 'FETCH_ASSOCIATIONS_LINK_LIST';\nexport const FETCH_ASSOCIATION_LINK_LIST_SUCCESS = 'FETCH_ASSOCIATIONS_LINK_LIST_SUCCESS';\nexport const FETCH_ASSOCIATION_LINK_LIST_ERROR = 'FETCH_ASSOCIATIONS_LINK_LIST_ERROR';\n// reset association link list\nexport const RESET_ASSOCIATION_LINK_LIST = 'RESET_ASSOCIATION_LINK_LIST';\n// set active node\nexport const SET_ACTIVE_NODE = 'SET_ACTIVE_NODE';\nexport const SET_ACTIVE_NODE_SUCCESS = 'SET_ACTIVE_NODE_SUCCESS';\nexport const SET_ACTIVE_NODE_ERROR = 'SET_ACTIVE_NODE_ERROR';\n// clear active node\nexport const CLEAR_ACTIVE_NODE = 'CLEAR_ACTIVE_NODE';\n// delete node\nexport const DELETE_NODE = 'DELETE_NODE';\nexport const DELETE_NODE_SUCCESS = 'DELETE_NODE_SUCCESS';\nexport const DELETE_NODE_ERROR = 'DELETE_NODE_ERROR';\n// remove from association list\nexport const REMOVE_FROM_ASSOCIATION_LIST = 'REMOVE_FROM_ASSOCIATION_LIST';\n// delete association link\nexport const DELETE_ASSOCIATION_LINK = 'DELETE_ASSOCIATION_LINK';\nexport const DELETE_ASSOCIATION_LINK_SUCCESS = 'DELETE_ASSOCIATION_LINK_SUCCESS';\nexport const DELETE_ASSOCIATION_LINK_ERROR = 'DELETE_ASSOCIATION_LINK_ERROR';\n// generate instance export\nexport const GENERATE_EXPORT = 'GENERATE_EXPORT';\nexport const GENERATE_EXPORT_ERROR = 'GENERATE_EXPORT_ERROR';\nexport const GENERATE_EXPORT_SUCCESS = 'GENERATE_EXPORT_SUCCESS';\n// fetch graph nodes\nexport const FETCH_GRAPH_DATA = 'FETCH_GRAPH_DATA';\nexport const FETCH_GRAPH_DATA_ERROR = 'FETCH_GRAPH_DATA_ERROR';\nexport const FETCH_GRAPH_DATA_SUCCESS = 'FETCH_GRAPH_DATA_SUCCESS';\n","import instance from '../../../api/instance';\nimport history from '../../../utils/history';\nimport {\n  CREATE_ACCOUNT,\n  CREATE_ACCOUNT_SUCCESS,\n  CREATE_ACCOUNT_ERROR,\n  SIGN_IN,\n  SIGN_IN_SUCCESS,\n  SIGN_IN_ERROR,\n  SIGN_OUT,\n  SIGN_OUT_ERROR,\n  REFRESH_AUTH,\n  REFRESH_AUTH_SUCCESS,\n  REFRESH_AUTH_ERROR,\n  RESET_APP,\n} from './types';\nimport { message } from 'antd';\n\n// Create Account Action handler\nexport const createAccount = (formValues) => async (dispatch) => {\n  dispatch({ type: CREATE_ACCOUNT });\n  try {\n    const response = await instance.put('/auth/signup', formValues);\n    localStorage.setItem('displayName', response.data.displayName);\n    dispatch({ type: CREATE_ACCOUNT_SUCCESS, payload: response.data });\n    history.push('/');\n  } catch (err) {\n    dispatch({ type: CREATE_ACCOUNT_ERROR });\n    message.error('There was a problem creating the account', 1);\n    history.push('/');\n  }\n};\n\n// Sign In Action handler\nexport const signIn = (formValues) => async (dispatch) => {\n  dispatch({ type: SIGN_IN });\n  try {\n    const response = await instance.put('/auth/login', formValues);\n    localStorage.setItem('displayName', response.data.displayName);\n    dispatch({ type: SIGN_IN_SUCCESS, payload: response.data });\n  } catch (err) {\n    dispatch({ type: SIGN_IN_ERROR });\n    message.error('There was a problem signing in', 1);\n    history.push('/');\n  }\n};\n\n// Sign Out Action Handler\nexport const signOut = () => async (dispatch) => {\n  dispatch({ type: SIGN_OUT });\n  try {\n    await instance.get('/auth/signout');\n    dispatch({ type: RESET_APP });\n    message.success('Signed Out', 1);\n    // send page redirect for the user\n    history.push('/');\n  } catch (err) {\n    dispatch({ type: SIGN_OUT_ERROR });\n    message.error('There was a problem signing out', 1);\n  }\n};\n\nexport const changePassword = (formValues) => async (dispatch) => {\n  try {\n    const response = await instance.patch('/auth/password', {\n      oldPassword: formValues.oldPassword,\n      newPassword: formValues.newPassword,\n    });\n    if (response.status === 200) {\n      message.success('changed password', 1);\n    }\n  } catch (err) {\n    message.error('Could not update password', 1);\n  }\n};\n\nexport const forgotPassword = (formValues) => async (dispatch) => {\n  try {\n    const response = await instance.put('/auth/forgot-password', {\n      email: formValues.email,\n      newPassword: formValues.newPassword,\n      confirmNewPassword: formValues.confirmNewPassword,\n    });\n    if (response.status === 200) {\n      window.location.replace('/');\n    }\n  } catch (err) {\n    message.error('something went wrong', 1);\n  }\n};\n\nexport const isAuthenticated = () => async (dispatch) => {\n  try {\n    dispatch({ type: REFRESH_AUTH });\n    const response = await instance.get('/auth');\n    dispatch({ type: REFRESH_AUTH_SUCCESS, payload: response.data });\n  } catch (err) {\n    dispatch({ type: REFRESH_AUTH_ERROR });\n  }\n};\n","import instance from '../../../api/instance';\n// import history from '../history';\nimport {\n  FETCH_USER_NODE,\n  UPDATE_USER_NODE,\n  UPDATE_USER_NODE_ERROR,\n  UPDATE_USER_NODE_SUCCESS,\n  UPDATE_USER_AVATAR,\n  UPDATE_USER_AVATAR_SUCCESS,\n  UPDATE_USER_AVATAR_ERROR,\n  UPDATE_USER_HEADER,\n  UPDATE_USER_HEADER_SUCCESS,\n  UPDATE_USER_HEADER_ERROR,\n} from './types';\nimport { message } from 'antd';\n\n// get user by username handler\nexport const fetchUserByUsername = (username) => async (dispatch) => {\n  dispatch({ type: FETCH_USER_NODE });\n  try {\n    const response = await instance.get('/user/username', { params: { username } });\n    const user = response.data.user;\n    return user;\n    // TODO: once i add users a node type on the homepage, is when i should be adding this reducer\n    // dispatch({ type: FETCH_TEXT_NODE_SUCCESS, payload: response.data });\n  } catch (err) {\n    // dispatch({ type: FETCH_TEXT_NODE_ERROR });\n    message.error('Could not fetch user', 1);\n    // history.push('/');\n  }\n};\n\n// get user by username handler\n// export const fetchUserByEmail = email => async dispatch => {\n//   dispatch({ type: FETCH_USER_NODE });\n//   try {\n//     const response = await instance.get('/user/username', { params: { email } });\n//     const user = response.data.user;\n//     return user;\n//     // TODO: once i add users a node type on the homepage, is when i should be adding this reducer\n//     // dispatch({ type: FETCH_TEXT_NODE_SUCCESS, payload: response.data });\n//   } catch (err) {\n//     // dispatch({ type: FETCH_TEXT_NODE_ERROR });\n//     message.error('Could not fetch user', 1);\n//     // history.push('/');\n//   }\n// };\n\n// update user by username\nexport const updateUserInfo = (user) => async (dispatch) => {\n  dispatch({ type: UPDATE_USER_NODE });\n  try {\n    const response = await instance.patch('/user/info', {\n      username: user.username,\n      bio: user.bio,\n      displayName: user.displayName,\n    });\n    const updatedUser = response.data.user;\n    dispatch({ type: UPDATE_USER_NODE_SUCCESS, user: updatedUser });\n    return updatedUser;\n  } catch (err) {\n    dispatch({ type: UPDATE_USER_NODE_ERROR });\n    message.error('Could not update user', 1);\n  }\n};\n\n// update username\nexport const updateUsername = (username) => async (dispatch) => {\n  dispatch({ type: UPDATE_USER_NODE });\n  try {\n    const response = await instance.patch('/user/username', {\n      username: username,\n    });\n    const updatedUser = response.data.user;\n    dispatch({ type: UPDATE_USER_NODE_SUCCESS, user: updatedUser });\n    return updatedUser;\n  } catch (err) {\n    dispatch({ type: UPDATE_USER_NODE_ERROR });\n    message.error('Could not update user', 1);\n  }\n};\n\n// update user by username\nexport const updateEmail = (email) => async (dispatch) => {\n  dispatch({ type: UPDATE_USER_NODE });\n  try {\n    const response = await instance.patch('/user/email', {\n      email: email,\n    });\n    const updatedUser = response.data.user;\n    dispatch({ type: UPDATE_USER_NODE_SUCCESS, user: updatedUser });\n    return updatedUser;\n  } catch (err) {\n    dispatch({ type: UPDATE_USER_NODE_ERROR });\n    message.error('Could not update user', 1);\n  }\n};\n\n// update user avatar\nexport const updateUserAvatar = (file) => async (dispatch) => {\n  dispatch({ type: UPDATE_USER_AVATAR });\n  try {\n    // create image FormData\n    const imageData = new FormData();\n    imageData.append('image', file);\n    // send the request\n    const response = await instance.patch('/user/avatar', imageData, {\n      headers: { 'Content-Type': 'multipart/form-data' },\n    });\n    // if it's sucessful dispatch the success action\n    if (response.status === 200) {\n      dispatch({ type: UPDATE_USER_AVATAR_SUCCESS, url: response.data.url });\n      // return the image URL for immediate use\n      return response.data.url;\n    } else {\n      message.error('There was a problem uploading the image', 1);\n    }\n  } catch (err) {\n    dispatch({ type: UPDATE_USER_AVATAR_ERROR });\n    message.error('There was a problem uploading the image', 1);\n  }\n};\n\nexport const updateUserHeader = (file) => async (dispatch) => {\n  dispatch({ type: UPDATE_USER_HEADER });\n  try {\n    // create image FormData\n    const imageData = new FormData();\n    imageData.append('image', file);\n    // send the request\n    const response = await instance.patch('/user/header', imageData, {\n      headers: { 'Content-Type': 'multipart/form-data' },\n    });\n    // if it's sucessful dispatch the success action\n    if (response.status === 200) {\n      dispatch({ type: UPDATE_USER_HEADER_SUCCESS, url: response.data.url });\n      // return the image URL for immediate use\n      return response.data.url;\n    } else {\n      message.error('There was a problem uploading the image', 1);\n    }\n  } catch (err) {\n    dispatch({ type: UPDATE_USER_HEADER_ERROR });\n    message.error('There was a problem uploading the image', 1);\n  }\n};\n","import instance from '../../../api/instance';\nimport history from '../../../utils/history';\nimport {\n  CREATE_ASSOCIATION,\n  CREATE_ASSOCIATION_ERROR,\n  CREATE_ASSOCIATION_SUCCESS,\n  FETCH_ASSOCIATION_LINK_LIST,\n  FETCH_ASSOCIATION_LINK_LIST_ERROR,\n  FETCH_ASSOCIATION_LINK_LIST_SUCCESS,\n  RESET_ASSOCIATION_LINK_LIST,\n  FETCH_ASSOCIATIONS,\n  FETCH_ASSOCIATIONS_ERROR,\n  FETCH_ASSOCIATIONS_SUCCESS,\n  RESET_ASSOCIATIONS,\n  REMOVE_FROM_ASSOCIATION_LIST,\n  DELETE_ASSOCIATION_LINK,\n  DELETE_ASSOCIATION_LINK_SUCCESS,\n  DELETE_ASSOCIATION_LINK_ERROR,\n  // RESET_APP\n} from './types';\nimport { message } from 'antd';\n\n// fetch associations for associationLinklist\nexport const fetchAssociationLinkList = (query) => async (dispatch) => {\n  try {\n    if (!query.page) {\n      dispatch({ type: RESET_ASSOCIATION_LINK_LIST });\n      query.page = 1;\n    }\n    dispatch({ type: FETCH_ASSOCIATION_LINK_LIST });\n    const response = await instance.get('/association', {\n      params: { nodeUUID: query.nodeUUID, page: query.page },\n    });\n    dispatch({\n      type: FETCH_ASSOCIATION_LINK_LIST_SUCCESS,\n      payload: response.data,\n      nodeUUID: query.nodeUUID,\n      page: query.page,\n    });\n  } catch (err) {\n    dispatch({ type: FETCH_ASSOCIATION_LINK_LIST_ERROR });\n    message.error('Could not fetch items', 1);\n    history.push('/');\n  }\n};\n\n// fetch associations for associationList\nexport const fetchAssociations = (query) => async (dispatch) => {\n  try {\n    if (!query.page) {\n      dispatch({ type: RESET_ASSOCIATIONS });\n      query.page = 1;\n    }\n    dispatch({ type: FETCH_ASSOCIATIONS });\n    const response = await instance.get('/association', {\n      params: { nodeUUID: query.nodeUUID, page: query.page },\n    });\n    dispatch({\n      type: FETCH_ASSOCIATIONS_SUCCESS,\n      payload: response.data,\n      nodeUUID: query.nodeUUID,\n      page: query.page,\n    });\n  } catch (err) {\n    dispatch({ type: FETCH_ASSOCIATIONS_ERROR });\n    message.error('Could not fetch items', 1);\n    history.push('/');\n  }\n};\n\n// create a new association\nexport const createAssociation = (nodeUUID, linkedNodeUUID) => async (dispatch) => {\n  try {\n    dispatch({ type: CREATE_ASSOCIATION });\n    const response = await instance.put('/association', {\n      nodeUUID,\n      linkedNodeUUID,\n    });\n    dispatch({\n      type: CREATE_ASSOCIATION_SUCCESS,\n      associatedNode: response.data.association.associated,\n      nodeUUID,\n    });\n  } catch (err) {\n    dispatch({ type: CREATE_ASSOCIATION_ERROR });\n    message.error('Could not create association', 1);\n    history.push('/');\n  }\n};\n\n// get autocomplete values for association creation\nexport const associationAutocomplete = (query) => async (dispatch) => {\n  try {\n    const response = await instance.get('/association/autocomplete', {\n      params: { searchQuery: query.searchQuery, nodeUUID: query.uuid },\n    });\n    return response.data.nodes;\n  } catch (err) {\n    message.error('Could not search nodes', 1);\n    history.push('/');\n  }\n};\n\n// delete text node handler\nexport const deleteAssociationLink = (nodeA, nodeB) => async (dispatch) => {\n  dispatch({ type: DELETE_ASSOCIATION_LINK });\n  try {\n    const response = await instance.delete(`/association`, { params: { nodeA, nodeB } });\n    if (response.status === 200) {\n      dispatch({ type: DELETE_ASSOCIATION_LINK_SUCCESS, deletedUUID: response.data.deletedUUID });\n    }\n  } catch (err) {\n    dispatch({ type: DELETE_ASSOCIATION_LINK_ERROR });\n    message.error('There was a problem deleting the node', 1);\n  }\n};\n\n// remove from association list\nexport const removeFromAssociationList = (uuid) => {\n  return {\n    type: REMOVE_FROM_ASSOCIATION_LIST,\n    deletedUUID: uuid,\n  };\n};\n\n// update the linkStrength for an association\nexport const updateLinkStrength = (nodeA, nodeB) => async (dispatch) => {\n  try {\n    await instance.put('/association/linkstrength', {\n      nodeA,\n      nodeB,\n    });\n  } catch (err) {\n    message.error('There was a problem with your request', 1);\n  }\n};\n","import { SHOW_COMPONENT, HIDE_COMPONENT } from './types';\n\nexport const showComponent = (type, content) => {\n  return {\n    type: SHOW_COMPONENT,\n    payload: {\n      type: type,\n      content: content,\n    },\n  };\n};\n\nexport const hideComponent = (type) => {\n  return {\n    type: HIDE_COMPONENT,\n    payload: {\n      type: type,\n    },\n  };\n};\n","import instance from '../../../api/instance';\nimport history from '../../../utils/history';\nimport { GENERATE_EXPORT, GENERATE_EXPORT_ERROR, GENERATE_EXPORT_SUCCESS } from './types';\nimport { message } from 'antd';\n\n// export the instance data and get the url of the file\nexport const generateInstanceExport = () => async (dispatch) => {\n  try {\n    dispatch({ type: GENERATE_EXPORT });\n    const response = await instance.put('/port/export/all');\n    if (response.status === 200) {\n      message.success('generating export!', 2);\n      dispatch({ type: GENERATE_EXPORT_SUCCESS, payload: response.data });\n      // redirect\n      history.push('/');\n    }\n  } catch (err) {\n    dispatch({ type: GENERATE_EXPORT_ERROR });\n    message.error('Could not export instance data', 1);\n    history.push('/');\n  }\n};\n\n// generate export based on a node\nexport const generateExportByUUID = (uuid) => async (dispatch) => {\n  try {\n    dispatch({ type: GENERATE_EXPORT });\n    const response = await instance.put('/port/export/', { uuid });\n    if (response.status === 200) {\n      message.success('generating export!', 2);\n      dispatch({ type: GENERATE_EXPORT_SUCCESS, payload: response.data });\n      // redirect\n      history.push('/');\n    }\n  } catch (err) {\n    dispatch({ type: GENERATE_EXPORT_ERROR });\n    message.error('Could not export instance data', 1);\n    history.push('/');\n  }\n};\n\n// export the instance data and get the url of the file\nexport const unpackSynthonaImport = (uuid) => async (dispatch) => {\n  try {\n    const response = await instance.put('/port/import/', { uuid });\n    if (response.status === 200) {\n      message.success('started import process!', 3);\n      history.push('/');\n    }\n  } catch (err) {\n    message.error('Could not import instance data', 1);\n    history.push('/');\n  }\n};\n\nexport const removeSynthonaImportsByPackage = (uuid) => async (dispatch) => {\n  message.success('removing imports...', 1);\n  try {\n    const response = await instance.patch('/port/export/undo/', { uuid });\n    if (response.status === 200) {\n      history.push('/');\n    }\n  } catch (err) {\n    message.error('Could not remove imports for this package', 1);\n    history.push('/');\n  }\n};\n","import instance from '../../instance';\nimport { CREATE_FILE_NODE, CREATE_FILE_NODE_SUCCESS, CREATE_FILE_NODE_ERROR } from './types';\nimport { message } from 'antd';\n\nexport const createFileNode = (file, name, linkedNode) => async (dispatch) => {\n  dispatch({ type: CREATE_FILE_NODE });\n  try {\n    // create image FormData\n    const fileData = new FormData();\n    fileData.append('image', file);\n    if (name) {\n      fileData.append('name', name);\n    }\n    if (linkedNode) {\n      fileData.append('linkedNode', linkedNode);\n    }\n    // send the request\n    const response = await instance.put('/file', fileData, {\n      headers: { 'Content-Type': 'multipart/form-data' },\n    });\n    // if it's sucessful dispatch the success action\n    if (response.status === 200) {\n      dispatch({ type: CREATE_FILE_NODE_SUCCESS, payload: response.data.node });\n      // return the image URL for immediate use\n      return response.data.node.preview;\n    } else {\n      message.error('There was a problem inserting the file', 1);\n    }\n  } catch (err) {\n    dispatch({ type: CREATE_FILE_NODE_ERROR });\n    message.error('There was a problem inserting the file', 1);\n  }\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Layout, Card } from 'antd';\n// custom code\nimport { signIn } from '../../api/redux/actions';\nimport './css/Login.less';\n\n// destructure antd\nconst { Content, Footer } = Layout;\n\nclass Login extends Component {\n  componentDidMount() {\n    document.title = 'synthona';\n  }\n\n  getUsername = () => {\n    // const username = localStorage.getItem('displayName');\n    // if (username) {\n    //   return username;\n    // } else {\n    //   return 'synthona';\n    // }\n    return 'synthona';\n  };\n\n  onSubmit = (values, { setSubmitting }) => {\n    setSubmitting(false);\n    this.props.signIn(values);\n  };\n\n  render() {\n    return (\n      <Layout className='login-layout'>\n        <Content className='login-content'>\n          <Card className='login-card'>\n            <Formik\n              initialValues={{ email: '', password: '', confirmPassword: '' }}\n              validationSchema={validationSchema}\n              onSubmit={this.onSubmit}\n            >\n              {({ isSubmitting }) => (\n                <Form className='login-form'>\n                  <h1 className='login-title'>\n                    <span\n                      role='img'\n                      aria-label='jsx-a11y/accessible-emoji'\n                      style={{ paddingRight: '0.5rem' }}\n                    >\n                      {' '}\n                      ✨\n                    </span>\n                    synthona\n                    <span\n                      role='img'\n                      aria-label='jsx-a11y/accessible-emoji'\n                      style={{ paddingRight: '0.5rem' }}\n                    >\n                      {'  '}✨\n                    </span>\n                  </h1>\n                  <Field type='email' name='email' placeholder='email' className='login-field' />\n                  <ErrorMessage name='email' component='div' className='login-error' />\n                  <Field\n                    type='password'\n                    name='password'\n                    placeholder='password'\n                    className='login-field'\n                  />\n                  <ErrorMessage name='password' component='div' className='login-error' />\n                  <ErrorMessage name='confirmPassword' component='div' className='login-error' />\n                  <button type='submit' disabled={isSubmitting} className='login-submit'>\n                    login\n                  </button>\n                  <Link to='/create-account' className='login-signup'>\n                    create account\n                  </Link>\n                </Form>\n              )}\n            </Formik>\n            <div className='login-after-card'>\n              <Link to='/forgot-password' className='login-forgot-password'>\n                lost password\n              </Link>\n            </div>\n          </Card>\n        </Content>\n        <Footer />\n      </Layout>\n    );\n  }\n}\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().required().email('E-mail is not valid!'),\n  password: Yup.string().required().min(5, 'Password has to be longer than 6 characters!'),\n});\n\nconst mapStateToProps = (state) => {\n  return { isSignedIn: state.auth.isSignedIn };\n};\n\nexport default connect(mapStateToProps, { signIn })(Login);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Layout, Card } from 'antd';\n// custom code\nimport { forgotPassword } from '../../api/redux/actions';\nimport './css/Login.less';\n\n// destructure antd\nconst { Content, Footer } = Layout;\n\nclass ForgotPassword extends Component {\n  componentDidMount() {\n    document.title = 'forgot password';\n  }\n\n  onSubmit = (values, { setSubmitting }) => {\n    setSubmitting(false);\n    this.props.forgotPassword(values);\n  };\n\n  render() {\n    return (\n      <Layout className='login-layout'>\n        <Content className='login-content'>\n          <Card className='login-card'>\n            <Formik\n              initialValues={{ email: '', password: '', confirmPassword: '' }}\n              validationSchema={validationSchema}\n              onSubmit={this.onSubmit}\n            >\n              {({ isSubmitting }) => (\n                <Form className='login-form'>\n                  <h1 className='login-title'>\n                    {' '}\n                    <span\n                      role='img'\n                      aria-label='jsx-a11y/accessible-emoji'\n                      style={{ paddingRight: '0.5rem' }}\n                    >\n                      {' '}\n                      ✨\n                    </span>\n                    lost password{' '}\n                    <span\n                      role='img'\n                      aria-label='jsx-a11y/accessible-emoji'\n                      style={{ paddingRight: '0.5rem' }}\n                    >\n                      {' '}\n                      ✨\n                    </span>\n                  </h1>\n                  <Field type='email' name='email' placeholder='email' className='login-field' />\n                  <ErrorMessage name='email' component='div' className='login-error' />\n                  <Field\n                    type='password'\n                    name='newPassword'\n                    placeholder='new password'\n                    className='login-field'\n                  />\n                  <ErrorMessage name='newPassword' component='div' className='login-error' />\n                  <Field\n                    type='password'\n                    name='confirmNewPassword'\n                    placeholder='confirm new password'\n                    className='login-field'\n                  />\n                  <ErrorMessage name='confirmNewPassword' component='div' className='login-error' />\n                  <button type='submit' disabled={isSubmitting} className='login-submit'>\n                    reset\n                  </button>\n                  <Link to='/' className='login-signup'>\n                    back to login\n                  </Link>\n                </Form>\n              )}\n            </Formik>\n          </Card>\n        </Content>\n        <Footer />\n      </Layout>\n    );\n  }\n}\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().required().email('E-mail is not valid!'),\n  newPassword: Yup.string().required('new password is required'),\n  confirmNewPassword: Yup.string()\n    .required('please confirm new password')\n    .oneOf([Yup.ref('newPassword')], \"Your passwords don't match\"),\n});\n\nconst mapStateToProps = (state) => {\n  return { isSignedIn: state.auth.isSignedIn };\n};\n\nexport default connect(mapStateToProps, { forgotPassword })(ForgotPassword);\n","import React from 'react';\nimport { Layout } from 'antd';\nimport { Spin } from 'antd';\n\nconst Spinner = (props) => {\n  return (\n    <Layout>\n      <Spin\n        style={{\n          height: '100vh',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n        className='loading-spinner'\n        size='large'\n      ></Spin>\n    </Layout>\n  );\n};\n\nexport default Spinner;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Menu, Avatar, Modal, Drawer, Icon } from 'antd';\nimport {\n  signOut,\n  hideComponent,\n  generateInstanceExport,\n  clearActiveNode,\n} from '../../api/redux/actions';\n// images\nimport defaultAvatar from '../../resources/synthona-logo.png';\n// custom code\nimport './css/MainSider.less';\nimport Spinner from './Spinner';\n// destructure antd components\nconst { Item } = Menu;\n\nclass MainSider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSignoutModal: null,\n      visible: false,\n    };\n  }\n\n  signOutHandler = () => {\n    this.props.signOut();\n  };\n\n  // show modal to confirm deletion\n  toggleSignoutModal = () => {\n    if (this.state.showSignoutModal) {\n      this.setState({ showSignoutModal: false });\n      // temporary fix to remove overflow property being set on body by antd\n      document.body.style.removeProperty('overflow');\n    } else {\n      this.setState({ showSignoutModal: true });\n    }\n  };\n\n  renderDrawerClasses = () => {\n    if (this.props.animate === false) {\n      return 'page-sider no-animation';\n    } else {\n      return 'page-sider';\n    }\n  };\n\n  render() {\n    if (this.props.mainSider === null) {\n      return <Spinner></Spinner>;\n    }\n\n    return (\n      <div className='sider-container'>\n        <Drawer\n          className={this.renderDrawerClasses()}\n          width='200px'\n          mask={this.props.showMask}\n          placement='left'\n          closable={false}\n          onClose={(e) => this.props.hideComponent('mainSider')}\n          visible={this.props.mainSider ? this.props.mainSider.visible : false}\n        >\n          <Menu mode='vertical' defaultSelectedKeys={['1']} className='sider-menu'>\n            <Item>\n              <Link to={`/profile/${this.props.user.username}`}>\n                <Avatar\n                  className='nav-avatar'\n                  src={this.props.user.avatar || defaultAvatar}\n                  icon='user'\n                  style={{\n                    display: 'inline-block',\n                    verticalAlign: 'middle',\n                    marginTop: '0.8rem',\n                    width: '2.5rem',\n                    height: '2.5rem',\n                    // border: '0.1rem solid #272727',\n                    objectFit: 'contain',\n                  }}\n                />\n              </Link>\n            </Item>\n            <Item className='sider-menu-item sider-title'>\n              <Link to={`/profile/${this.props.user.username}`}>\n                {/*  <b>@{this.props.user.username}</b>*/}\n                <Icon type={'sketch'} theme='outlined' style={{ margin: '0' }} /> <b>Profile</b>\n              </Link>\n            </Item>\n            <Item className='sider-menu-item'>\n              <Link to={`/`} onClick={(e) => this.props.hideComponent('mainSider')}>\n                Explore\n              </Link>\n            </Item>\n            <Item className='sider-menu-item'>\n              <Link to={`/pins`} onClick={(e) => this.props.hideComponent('mainSider')}>\n                Starboard\n              </Link>\n            </Item>\n            <Item className='sider-menu-item'>\n              <Link\n                to={`/graph`}\n                onClick={(e) => {\n                  this.props.clearActiveNode();\n                  this.props.hideComponent('mainSider');\n                }}\n              >\n                Constellation\n              </Link>\n            </Item>\n            {/*<Item className='sider-menu-item'>\n              <Link to='/' onClick={(e) => this.props.hideComponent('mainSider')}>\n                Nodes\n              </Link>\n            </Item>\n            <Item className='sider-menu-item'>\n              <Link to='/' onClick={(e) => this.props.hideComponent('mainSider')}>\n                Map\n              </Link>\n            </Item>\n            <Item className='sider-menu-item'>\n              <Link to='/' onClick={(e) => this.props.hideComponent('mainSider')}>\n                Chat\n              </Link>\n                </Item>  */}\n            <Item className='sider-menu-item'>\n              <Link to={`/edit/profile/`}>Options</Link>\n            </Item>\n            <Item className='sider-menu-item'>\n              <Link to='/help' onClick={(e) => this.props.hideComponent('mainSider')}>\n                Help\n              </Link>\n            </Item>\n            <Item className='sider-menu-item'>\n              <Link to='#' onClick={this.toggleSignoutModal}>\n                Sign Out\n              </Link>\n            </Item>\n          </Menu>\n        </Drawer>\n        {/* </Sider> */}\n        <Modal\n          title={this.props.user.displayName}\n          visible={this.state.showSignoutModal}\n          className='signout-modal'\n          centered\n          onOk={this.signOutHandler}\n          okType='primary'\n          okText='Sign Out'\n          closable={false}\n          onCancel={this.toggleSignoutModal}\n        >\n          <p>Are you sure you want to sign out?</p>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { user: state.auth.user, mainSider: state.components.componentList['mainSider'] };\n};\n\nexport default connect(mapStateToProps, {\n  signOut,\n  hideComponent,\n  generateInstanceExport,\n  clearActiveNode,\n})(MainSider);\n","export const validUrl = (value) => {\n  try {\n    new URL(value);\n  } catch (_) {\n    return false;\n  }\n  return true;\n};\n\nexport const isImageUrl = (url) => {\n  return url.match(/\\..+(jpeg|jpg|gif|png)/) != null;\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport history from '../../utils/history';\nimport { Link } from 'react-router-dom';\nimport { Layout, Button, Input, Select, Icon, message } from 'antd';\n// custom code\nimport { validUrl, isImageUrl } from '../../utils/inputValidation';\nimport './css/IOBar.less';\nimport {\n  signOut,\n  createFileNode,\n  createUrlNode,\n  createNode,\n  searchNodes,\n  showComponent,\n  hideComponent,\n} from '../../api/redux/actions';\n// destructure antd components\nconst { Header } = Layout;\nconst { Option } = Select;\n\nclass IOBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: '',\n      nodeTypes: this.props.query.type || 'all',\n      createType: null,\n      queryType: null,\n      inputMode: 'query',\n      modeIcon: 'search',\n      placeholder: 'query',\n    };\n  }\n  // show modal to confirm deletion\n  toggleInputMode = () => {\n    if (this.state.inputMode === 'query') {\n      this.setState({\n        inputMode: 'create',\n        modeIcon: 'plus',\n        placeholder: 'create',\n        nodeTypes: 'text',\n      });\n    } else {\n      this.setState({\n        inputMode: 'query',\n        modeIcon: 'search',\n        placeholder: 'query',\n        nodeTypes: 'all',\n      });\n    }\n  };\n\n  toggleMainSider = async () => {\n    // await this.props.showComponent('mainSider');\n    if (this.props.mainSider) {\n      this.props.hideComponent('mainSider');\n    } else {\n      this.props.showComponent('mainSider');\n    }\n  };\n\n  // handle text input\n  commandHandler = () => {\n    switch (this.state.inputMode) {\n      case 'query':\n        return this.props.searchNodes({\n          searchQuery: this.state.input,\n          type: this.state.nodeTypes,\n        });\n      case 'create':\n        return this.createNodeHandler();\n      default:\n        return;\n    }\n  };\n  // handle the creation of different node types\n  createNodeHandler = () => {\n    var linkedNode;\n    if (this.props.activeNode) {\n      linkedNode = JSON.stringify(this.props.activeNode);\n    }\n    switch (this.state.nodeTypes) {\n      case 'text':\n        this.props.createNode({\n          isFile: false,\n          type: 'text',\n          name: this.state.input,\n          preview: '',\n          linkedNode,\n        });\n        // clear the input bar\n        this.setState({ input: '' });\n        // redirect\n        history.push('/');\n        break;\n      // case 'image':\n      //   this.selectLocalImage(linkedNode);\n      //   break;\n      case 'file':\n        this.selectLocalFile(linkedNode);\n        break;\n      case 'url':\n        // if the URL is an image add an image node\n        if (isImageUrl(this.state.input)) {\n          this.props.createNode({\n            isFile: false,\n            type: 'image',\n            name: this.state.input,\n            preview: this.state.input,\n            content: this.state.input,\n            linkedNode,\n          });\n          this.setState({ input: '' });\n          // otherwise add a regular URL\n        } else if (validUrl(this.state.input)) {\n          this.props.createUrlNode({\n            isFile: false,\n            type: 'url',\n            name: this.state.input,\n            preview: this.state.input,\n            path: this.state.input,\n            content: this.state.input,\n            linkedNode,\n          });\n          // clear the input bar\n          this.setState({ input: '' });\n        } else {\n          message.error('You must enter a valid URL', 1);\n        }\n        // redirect\n        history.push('/');\n        break;\n      case 'collection':\n        this.props.createNode({\n          isFile: false,\n          type: 'collection',\n          name: this.state.input,\n          preview: '',\n          content: this.state.input,\n          linkedNode,\n        });\n        // clear the input bar\n        this.setState({ input: '' });\n        // redirect\n        history.push('/');\n        break;\n      default:\n        return;\n    }\n  };\n\n  // select an image.\n  selectLocalFile = (linkedNode) => {\n    const input = document.createElement('input');\n    input.setAttribute('type', 'file');\n    input.click();\n    // Listen for uploading local file, then save to server\n    input.onchange = async () => {\n      const file = input.files[0];\n      await this.props.createFileNode(file, this.state.input, linkedNode);\n      // clear the input bar\n      this.setState({ input: '' });\n      history.push('/');\n    };\n  };\n\n  // include an \"all\" option for queries\n  renderSelectBefore = () => {\n    if (this.state.inputMode === 'query') {\n      return (\n        <Select\n          showSearch\n          showArrow={false}\n          value={this.state.nodeTypes}\n          onChange={(value) => this.setState({ nodeTypes: value })}\n        >\n          <Option value='all'>all</Option>\n          <Option value='url'>urls</Option>\n          <Option value='text'>text</Option>\n          <Option value='audio'>audio</Option>\n          <Option value='file'>file</Option>\n          <Option value='image'>images</Option>\n          <Option value='collection'>collections</Option>\n        </Select>\n      );\n    } else {\n      // exclude \"all\" option for creating nodes\n      return (\n        <Select\n          showSearch\n          showArrow={false}\n          value={this.state.nodeTypes}\n          onChange={(value) => this.setState({ nodeTypes: value })}\n        >\n          <Option value='text'>text</Option>\n          <Option value='url'>url</Option>\n          <Option value='file'>file</Option>\n          <Option value='collection'>collection</Option>\n        </Select>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Header className='page-header'>\n          <ul className='nav-list'>\n            <li className='nav-item io-sider-button' style={{ marginRight: '0' }}>\n              <Button type='default' shape='circle' onClick={(e) => this.toggleMainSider()}>\n                <Icon type={'bars'} theme='outlined' />\n              </Button>\n            </li>\n            <li className='nav-item io-sider-button' style={{ marginRight: '0.4rem' }}>\n              <Link type='default' to={`/graph`}>\n                <Icon\n                  type={'deployment-unit'}\n                  theme='outlined'\n                  // style={{ color: '#ec486c' }}\n                />\n              </Link>\n            </li>\n            <li className='nav-item io-sider-button' style={{ marginRight: '0.5rem' }}>\n              <Link type='default' to={`/`}>\n                <Icon\n                  type={'home'}\n                  theme='outlined'\n                  // style={{ color: '#3ce458' }}\n                />\n              </Link>\n            </li>\n            <li className='nav-item io-sider-button' style={{ marginRight: '0.1rem' }}>\n              <Link type='default' to={`/pins`} style={{ marginRight: '0.3rem' }}>\n                <Icon\n                  type={'star'}\n                  theme='outlined'\n                  // style={{ color: 'yellow' }}\n                />\n              </Link>\n            </li>\n            <li className='nav-item create-node-button'>\n              <Button type='default' shape='circle' onClick={(e) => this.toggleInputMode()}>\n                <Icon type={this.state.modeIcon} theme='outlined' />\n              </Button>\n            </li>\n            <li className='nav-search'>\n              <Input\n                onPressEnter={(value, event) => this.commandHandler()}\n                maxLength={500}\n                value={this.state.input}\n                onChange={(e) => this.setState({ input: e.target.value })}\n                defaultValue={this.props.query.searchQuery || ''}\n                placeholder={this.state.placeholder}\n                addonBefore={this.renderSelectBefore()}\n                className='nav-search-input'\n              />\n            </li>\n          </ul>\n        </Header>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.auth.user,\n    query: state.nodes.query,\n    mainSider: state.components.componentList['mainSider'],\n    activeNode: state.nodes.activeNode,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signOut,\n  searchNodes,\n  createNode,\n  createFileNode,\n  createUrlNode,\n  showComponent,\n  hideComponent,\n})(IOBar);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Icon, Modal, Tooltip, message } from 'antd';\nimport { validUrl, isImageUrl } from '../../../utils/inputValidation';\nimport {\n  showComponent,\n  unpackSynthonaImport,\n  updateActiveNode,\n  deleteNode,\n  clearActiveNode,\n  generateExportByUUID,\n  removeSynthonaImportsByPackage,\n} from '../../../api/redux/actions';\n\nclass NodeCardHeaderFull extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.nodeData.name,\n      preview: this.props.nodeData.preview,\n      hidden: this.props.nodeData.hidden,\n      hiddenIcon: 'eye-invisible',\n      searchable: this.props.nodeData.searchable,\n      searchableIcon: 'search',\n      pinned: this.props.nodeData.pinned,\n      pinnedState: 'outlined',\n      editable: false,\n      showDeleteModal: null,\n      showExportModal: null,\n      showUrlPreviewImageModal: null,\n    };\n  }\n\n  componentDidMount() {\n    // set initial hiddens state\n    if (this.props.nodeData.hidden) {\n      this.setState({ hiddenIcon: 'eye-invisible' });\n    } else {\n      this.setState({ hiddenIcon: 'eye' });\n    }\n    // set initial searchable state\n    if (this.props.nodeData.searchable) {\n      this.setState({ searchableIcon: 'search' });\n    } else {\n      this.setState({ searchableIcon: 'key' });\n    }\n    // set initial pinned state\n    if (this.props.nodeData.pinned) {\n      this.setState({ pinnedState: 'filled' });\n    } else {\n      this.setState({ pinnedState: 'outlined' });\n    }\n  }\n\n  // update and save the document name\n  saveName = (name) => {\n    if (this.state.name !== name) {\n      this.props.updateActiveNode({ uuid: this.props.nodeData.uuid, name });\n    }\n    this.setState({ name: name });\n  };\n\n  // show modal to confirm deletion\n  toggleDeleteModal = () => {\n    if (this.state.showDeleteModal) {\n      this.setState({ showDeleteModal: false });\n    } else {\n      this.setState({ showDeleteModal: true });\n    }\n  };\n\n  // delete the node\n  deleteHandler = async () => {\n    this.setState({ showDeleteModal: false });\n    this.setState({ deleting: true });\n    await this.props.deleteNode(this.props.nodeData.uuid);\n    this.props.clearActiveNode();\n  };\n\n  // show confirm export modal\n  toggleExportModal = () => {\n    if (this.state.showExportModal) {\n      this.setState({ showExportModal: false });\n    } else {\n      this.setState({ showExportModal: true });\n    }\n  };\n\n  // delete the node\n  exportHandler = async () => {\n    this.setState({ showExportModal: false });\n    await this.props.generateExportByUUID(this.props.nodeData.uuid);\n  };\n\n  // show modal to confirm deletion\n  toggleUrlPreviewImageModal = () => {\n    if (this.state.showUrlPreviewImageModal) {\n      this.setState({ showUrlPreviewImageModal: false });\n    } else {\n      this.setState({ showUrlPreviewImageModal: true });\n    }\n  };\n\n  // select an image.\n  setUrlPreviewImage = (preview) => {\n    // update the URL\n    if (isImageUrl(preview) && validUrl(preview)) {\n      message.success('updated the preview image');\n      this.toggleUrlPreviewImageModal();\n      this.props.updateActiveNode({ uuid: this.props.nodeData.uuid, preview: preview });\n    }\n  };\n\n  toggleHidden = () => {\n    if (this.state.hidden === true) {\n      this.props.updateActiveNode({ uuid: this.props.nodeData.uuid, hidden: false });\n      this.setState({ hidden: false, hiddenIcon: 'eye' });\n    } else {\n      this.props.updateActiveNode({ uuid: this.props.nodeData.uuid, hidden: true });\n      this.setState({ hidden: true, hiddenIcon: 'eye-invisible' });\n    }\n  };\n\n  toggleSearchable = () => {\n    if (this.state.searchable === true) {\n      this.setState({ searchable: false, searchableIcon: 'key' });\n      this.props.updateActiveNode({ uuid: this.props.nodeData.uuid, searchable: false });\n    } else {\n      this.setState({ searchable: true, searchableIcon: 'search' });\n      this.props.updateActiveNode({ uuid: this.props.nodeData.uuid, searchable: true });\n    }\n  };\n\n  togglePinned = () => {\n    if (this.state.pinned === true) {\n      this.setState({ pinned: false, pinnedState: 'outlined' });\n      this.props.updateActiveNode({ uuid: this.props.nodeData.uuid, pinned: false });\n    } else {\n      this.setState({ pinned: true, pinnedState: 'filled' });\n      this.props.updateActiveNode({ uuid: this.props.nodeData.uuid, pinned: true });\n    }\n  };\n\n  // render the title\n  renderTitle = () => {\n    if (!this.state.editable) {\n      // if it is not editable render the plain title\n      return (\n        <h3\n          className='full-card-title'\n          onDoubleClick={(e) => {\n            e.preventDefault();\n            this.setState({ editable: true });\n          }}\n        >\n          {this.state.name}\n        </h3>\n      );\n    } else {\n      // when title is double clicked render the input field\n      return (\n        <input\n          type='text'\n          className='full-card-title'\n          onBlur={() => this.setState({ editable: null })}\n          maxLength='250'\n          autoFocus\n          placeholder='name'\n          value={this.state.name}\n          onKeyPress={(e) => {\n            // remove input on enter\n            if (e.key === 'Enter') {\n              this.setState({ editable: null });\n            }\n          }}\n          onChange={(e) => {\n            this.saveName(e.target.value);\n          }}\n          onFocus={(e) => {\n            e.target.select();\n          }}\n        ></input>\n      );\n    }\n  };\n\n  // render header buttons for node types which need them\n  // at the moment it's just .synth packages\n  renderContextualButtons = () => {\n    switch (this.props.nodeData.type) {\n      case 'package':\n        if (this.props.nodeData.metadata && this.props.nodeData.metadata.importing) {\n          return <Fragment></Fragment>;\n        } else if (this.props.nodeData.metadata && this.props.nodeData.metadata.expanded) {\n          return (\n            <Tooltip title={'undo import'} mouseEnterDelay={1.1}>\n              <li>\n                <button\n                  onClick={(e) => {\n                    // show the modal\n                    this.props.removeSynthonaImportsByPackage(this.props.nodeData.uuid);\n                  }}\n                >\n                  <Icon type={'undo'} theme='outlined' className='full-card-button' />\n                </button>\n              </li>\n            </Tooltip>\n          );\n        } else {\n          return (\n            <Tooltip title={'unpack'} mouseEnterDelay={1.1}>\n              <li>\n                <button\n                  onClick={(e) => {\n                    // show the modal\n                    this.props.unpackSynthonaImport(this.props.nodeData.uuid);\n                  }}\n                >\n                  <Icon type={'gift'} theme='filled' className='full-card-button' />\n                </button>\n              </li>\n            </Tooltip>\n          );\n        }\n      case 'url':\n        return (\n          <Tooltip title={'replace preview image'} mouseEnterDelay={1.1}>\n            <li>\n              <button\n                onClick={(e) => {\n                  // show the modal\n                  this.toggleUrlPreviewImageModal();\n                }}\n              >\n                <Icon type={'picture'} theme='outlined' className='full-card-button' />\n              </button>\n            </li>\n          </Tooltip>\n        );\n      default:\n        return;\n    }\n  };\n\n  // render the export button on non-package nodes\n  renderExportButton = () => {\n    if (this.props.nodeData.type !== 'package') {\n      return (\n        <Tooltip title={'generate export'} mouseEnterDelay={1.1}>\n          <li>\n            <button\n              onClick={(e) => {\n                this.toggleExportModal();\n              }}\n            >\n              <Icon type={'gift'} theme='outlined' className='full-card-button' />\n            </button>\n          </li>\n        </Tooltip>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div className='full-card-options'>\n        {this.renderTitle()}\n        {/* <p className='full-card-options-date'>{this.props.nodeData.updatedAt}</p> */}\n        <ul className='full-card-buttons-list'>\n          <Tooltip title={'associations'} mouseEnterDelay={1.1}>\n            <li>\n              <button\n                onClick={(e) => {\n                  // show the modal\n                  this.props.showComponent('associationSider', this.props.nodeData);\n                }}\n              >\n                <Icon type={'branches'} theme='outlined' className='full-card-button' />\n              </button>\n            </li>\n          </Tooltip>\n          <Tooltip title={'graph'} mouseEnterDelay={1.1}>\n            <li>\n              <button\n                onClick={(e) => window.location.replace(`/graph/${this.props.nodeData.uuid}`)}\n              >\n                <Icon type={'deployment-unit'} theme='outlined' className='full-card-button' />\n              </button>\n            </li>\n          </Tooltip>\n          <Tooltip title={'pin'} mouseEnterDelay={1.1}>\n            <li>\n              <button onClick={(e) => this.togglePinned()}>\n                <Icon type={'star'} theme={this.state.pinnedState} className='full-card-button' />\n              </button>\n            </li>\n          </Tooltip>\n          {this.renderContextualButtons()}\n          {this.renderExportButton()}\n          <Tooltip\n            title={this.state.hidden ? 'hidden from explore' : 'visible in explore'}\n            mouseEnterDelay={1.1}\n          >\n            <li>\n              <button onClick={(e) => this.toggleHidden()}>\n                <Icon type={this.state.hiddenIcon} theme='outlined' className='full-card-button' />\n              </button>\n            </li>\n          </Tooltip>\n          <Tooltip\n            title={this.state.searchable ? 'searchable' : 'hidden from search'}\n            mouseEnterDelay={1.1}\n          >\n            <li>\n              <button onClick={(e) => this.toggleSearchable()}>\n                <Icon\n                  type={this.state.searchableIcon}\n                  theme='outlined'\n                  className='full-card-button'\n                />\n              </button>\n            </li>\n          </Tooltip>\n          <Tooltip title={'open in browser'} mouseEnterDelay={1.1}>\n            <li>\n              <button\n                onClick={(e) => window.open(`/associations/${this.props.nodeData.uuid}`, '_blank')}\n              >\n                <Icon type={'global'} theme='outlined' className='full-card-button' />\n              </button>\n            </li>\n          </Tooltip>\n          <Tooltip title={'delete'} mouseEnterDelay={1.1}>\n            <li>\n              <button onClick={(e) => this.toggleDeleteModal()}>\n                <Icon type={'delete'} theme='outlined' className='full-card-button delete' />\n              </button>\n            </li>\n          </Tooltip>\n        </ul>\n        <Modal\n          title='Confirm Deletion'\n          visible={this.state.showDeleteModal}\n          className='delete-modal'\n          centered\n          onOk={this.deleteHandler}\n          afterClose={() => document.body.style.removeProperty('overflow')}\n          okType='danger'\n          okText='Delete'\n          closable={false}\n          onCancel={this.toggleDeleteModal}\n        >\n          <p>\n            Are you sure you want to delete <b>{this.props.nodeData.name || 'untitled'}</b>?\n          </p>\n        </Modal>\n        <Modal\n          title='Confirm Export'\n          visible={this.state.showExportModal}\n          className='delete-modal'\n          centered\n          onOk={this.exportHandler}\n          afterClose={() => document.body.style.removeProperty('overflow')}\n          okText='Generate'\n          closable={false}\n          onCancel={this.toggleExportModal}\n        >\n          <p>\n            Generate export package from <b>{this.props.nodeData.name || 'untitled'}</b>? The export\n            will contain <b>{this.props.nodeData.name || 'untitled'}</b> along with all its\n            associations, and appear in your starboard when it is completed.\n          </p>\n        </Modal>\n        <Modal\n          title='Preview Image'\n          visible={this.state.showUrlPreviewImageModal}\n          className='full-card-modal'\n          centered\n          onOk={(e) => this.setUrlPreviewImage(this.state.preview)}\n          afterClose={() => {\n            document.body.style.removeProperty('overflow');\n          }}\n          okText='save'\n          closable={false}\n          onCancel={(e) => {\n            this.setState({ preview: this.props.nodeData.preview });\n            this.toggleUrlPreviewImageModal();\n            window.getSelection().removeAllRanges();\n          }}\n        >\n          <input\n            type='text'\n            className='full-card-modal-input'\n            autoFocus\n            maxLength='250'\n            onFocus={(e) => {\n              e.target.select();\n            }}\n            placeholder='image URL'\n            value={this.state.preview}\n            onChange={(e) => this.setState({ preview: e.target.value })}\n          ></input>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    nodeData: state.nodes.activeNode,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  showComponent,\n  updateActiveNode,\n  unpackSynthonaImport,\n  deleteNode,\n  clearActiveNode,\n  generateExportByUUID,\n  removeSynthonaImportsByPackage,\n})(NodeCardHeaderFull);\n","import React, { Component } from 'react';\n// import { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Icon } from 'antd';\nimport { markNodeView, showComponent, updateNode } from '../../../api/redux/actions';\n\nclass NodeCardHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.node.name,\n      editable: false,\n    };\n  }\n\n  // render the title\n  renderTitle = () => {\n    if (!this.state.editable) {\n      // if it is not editable render the plain title\n      return (\n        <h3\n          className='nodelist-item-title'\n          onDoubleClick={(e) => {\n            e.preventDefault();\n            this.setState({ editable: true });\n          }}\n        >\n          {this.state.name}\n        </h3>\n      );\n    } else {\n      // when title is double clicked render the input field\n      return (\n        <input\n          type='text'\n          className='nodelist-item-title'\n          onBlur={() => this.setState({ editable: null })}\n          maxLength='250'\n          autoFocus\n          placeholder='name'\n          value={this.state.name}\n          onKeyPress={(e) => {\n            // remove input on enter\n            if (e.key === 'Enter') {\n              this.setState({ editable: null });\n            }\n          }}\n          onChange={(e) => {\n            this.saveName(e.target.value);\n          }}\n          onFocus={(e) => {\n            e.target.select();\n          }}\n        ></input>\n      );\n    }\n  };\n\n  // update and save the document name\n  saveName = (name) => {\n    if (this.state.name !== name) {\n      this.props.updateNode({ uuid: this.props.node.uuid, name });\n      this.props.node.name = name;\n      this.setState({ name: name });\n    }\n  };\n\n  render() {\n    return (\n      <div\n        className='nodelist-options'\n        style={{\n          display: 'flex',\n          width: '100%',\n        }}\n      >\n        {this.renderTitle()}\n        <div className='nodelist-options-buttons' style={{ marginLeft: 'auto' }}>\n          <button onClick={(e) => window.location.replace('/graph/' + this.props.node.uuid)}>\n            <Icon\n              type={'deployment-unit'}\n              theme='outlined'\n              style={{\n                fontSize: '0.9rem',\n                display: 'block',\n                textAlign: 'center',\n                padding: '0',\n              }}\n            />\n          </button>\n          <button onClick={(e) => this.props.markNodeView(this.props.node)}>\n            <Icon\n              type={'bulb'}\n              theme='outlined'\n              style={{\n                fontSize: '0.9rem',\n                display: 'block',\n                textAlign: 'center',\n                padding: '0',\n              }}\n            />\n          </button>\n          <button\n            onClick={(e) => {\n              // set the active node so the modal has the node data\n              // show the modal\n              this.props.showComponent('associationSider', this.props.node);\n            }}\n          >\n            <Icon\n              type={'branches'}\n              theme='outlined'\n              style={{\n                fontSize: '0.9rem',\n                display: 'block',\n                textAlign: 'center',\n                padding: '0',\n              }}\n            />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, {\n  markNodeView,\n  showComponent,\n  updateNode,\n})(NodeCardHeader);\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\n// for now these are in-common between nodes\nimport NodeCardHeaderFull from '../../../components/elements/node/NodeCardHeaderFull';\nimport NodeCardHeader from '../../../components/elements/node/NodeCardHeader';\n\nconst Text = (props) => {\n  const nodeCard = () => {\n    return (\n      <li className='nodelist-item'>\n        <NodeCardHeader node={props.node} />\n        <Link to={`/edit/text/${props.node.uuid}`} onClick={(e) => props.handleClick()}>\n          <p>{props.node.preview}</p>\n        </Link>\n      </li>\n    );\n  };\n\n  // how the node will appear in collections\n  const collectionPreview = () => {\n    return (\n      <Fragment>\n        <p>{props.node.preview}</p>\n      </Fragment>\n    );\n  };\n\n  const fullNode = () => {\n    return (\n      <div className='full-node-item'>\n        <NodeCardHeaderFull />\n        <Link to={`/edit/text/${props.node.uuid}`} /*target='_blank' */>\n          <p>{props.node.preview}</p>\n        </Link>\n      </div>\n    );\n  };\n\n  const associationLink = () => {\n    return (\n      <Link\n        to={`/edit/text/${props.node.uuid}`}\n        onClick={(e) => props.handleAssociatonClick()}\n        // target='_blank'\n      >\n        {props.node.name}\n      </Link>\n    );\n  };\n\n  // render the requested element\n  const renderNode = () => {\n    switch (props.element) {\n      case 'card':\n        return <Fragment>{nodeCard()}</Fragment>;\n      case 'preview':\n        return <Fragment>{collectionPreview()}</Fragment>;\n      case 'full':\n        return <Fragment>{fullNode()}</Fragment>;\n      case 'association-link':\n        return <Fragment>{associationLink()}</Fragment>;\n      default:\n        return;\n    }\n  };\n\n  return <Fragment>{renderNode()}</Fragment>;\n};\n\nexport { Text };\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\n// for now these are in-common between nodes\nimport NodeCardHeaderFull from '../../../components/elements/node/NodeCardHeaderFull';\n\nconst Image = (props) => {\n  const nodeCard = () => {\n    return (\n      <li className='nodelist-item'>\n        {props.renderHeader()}\n        <Link\n          to={`/associations/${props.node.uuid}`}\n          onClick={(e) => {\n            e.preventDefault();\n            props.handleClick();\n            window.location.replace(`/associations/${props.node.uuid}`);\n          }}\n          onContextMenu={(e) => {\n            // e.preventDefault();\n            // props.toggleHeader();\n          }}\n        >\n          <Fragment>\n            <img\n              src={props.node.preview}\n              alt={props.node.name}\n              style={{\n                objectFit: 'cover',\n                minHeight: '100%',\n                width: '100%',\n              }}\n            ></img>\n          </Fragment>\n        </Link>\n      </li>\n    );\n  };\n\n  // how the node will appear in collections\n  const collectionPreview = () => {\n    return (\n      <Fragment>\n        <img\n          src={props.node.preview}\n          alt={props.node.name}\n          style={{\n            objectFit: 'cover',\n            minHeight: '100%',\n            width: '100%',\n          }}\n        ></img>\n      </Fragment>\n    );\n  };\n\n  const fullNode = () => {\n    return (\n      <div className='full-node-item'>\n        <NodeCardHeaderFull />\n        <img src={props.node.preview} alt={props.node.name}></img>\n      </div>\n    );\n  };\n\n  const associationLink = () => {\n    return (\n      <Link\n        to={`/associations/${props.node.uuid}`}\n        onClick={(e) => props.handleAssociatonClick()}\n        // target='_blank'\n      >\n        {props.node.name}\n      </Link>\n    );\n  };\n\n  // render the requested element\n  const renderNode = () => {\n    switch (props.element) {\n      case 'card':\n        return <Fragment>{nodeCard()}</Fragment>;\n      case 'preview':\n        return <Fragment>{collectionPreview()}</Fragment>;\n      case 'full':\n        return <Fragment>{fullNode()}</Fragment>;\n      case 'association-link':\n        return <Fragment>{associationLink()}</Fragment>;\n      default:\n        return;\n    }\n  };\n\n  return <Fragment>{renderNode()}</Fragment>;\n};\n\nexport { Image };\n","import React, { Fragment } from 'react';\nimport { Icon } from 'antd';\n// for now these are in-common between nodes\nimport NodeCardHeaderFull from '../../../components/elements/node/NodeCardHeaderFull';\n\nconst Url = (props) => {\n  const urlIcon = 'bulb';\n\n  const renderPreview = () => {\n    if (props.node.preview) {\n      return (\n        <img\n          src={props.node.preview}\n          alt={props.node.name}\n          style={{\n            objectFit: 'cover',\n            // minHeight: '100%',\n            width: '100%',\n          }}\n        ></img>\n      );\n    } else {\n      return (\n        <Icon\n          type={urlIcon}\n          // type={'star'}\n          theme='outlined'\n          style={{\n            fontSize: '5rem',\n            color: '#b8b8b8',\n            display: 'block',\n            textAlign: 'center',\n            padding: '4.3rem 3.3rem 3.3rem',\n            height: '100%',\n          }}\n        />\n      );\n    }\n  };\n\n  const nodeCard = () => {\n    return (\n      <li className='nodelist-item'>\n        {props.renderHeader()}\n        <a\n          href={`/associations/${props.node.uuid}`}\n          // target='_blank'\n          rel='noopener noreferrer'\n          // onClick={(e) => history.push(`/associations/${props.node.uuid}`)}\n          onClick={(e) => {\n            e.preventDefault();\n            props.handleClick();\n            window.location.replace(`/associations/${props.node.uuid}`);\n          }}\n          onContextMenu={(e) => {\n            // e.preventDefault();\n            // props.toggleHeader();\n          }}\n          style={{ width: '100%' }}\n        >\n          {renderPreview()}\n        </a>\n      </li>\n    );\n  };\n\n  // how the node will appear in collections\n  const collectionPreview = () => {\n    if (props.node.preview) {\n      return (\n        <Fragment>\n          <img\n            src={props.node.preview}\n            alt={props.node.name}\n            style={{\n              objectFit: 'cover',\n              width: '100%',\n            }}\n          ></img>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Icon type={urlIcon} theme='outlined' className='node-card-icon' />\n        </Fragment>\n      );\n    }\n  };\n\n  const fullNode = () => {\n    return (\n      <div className='full-node-item'>\n        <NodeCardHeaderFull />\n        {/* <p>{props.node.preview}</p> */}\n        <a\n          href={props.node.path}\n          target='_blank'\n          rel='noopener noreferrer'\n          // onClick={(e) => props.markNodeView(props.node)}\n          style={{ width: '100%' }}\n        >\n          {renderPreview()}\n        </a>\n      </div>\n    );\n  };\n\n  const associationLink = () => {\n    return (\n      <a\n        href={props.node.path}\n        target='_blank'\n        rel='noopener noreferrer'\n        onClick={(e) => props.handleAssociatonClick()}\n        style={{ wordBreak: 'break-all' }}\n      >\n        {props.node.name}\n      </a>\n    );\n  };\n\n  // render the requested element\n  const renderNode = () => {\n    switch (props.element) {\n      case 'card':\n        return <Fragment>{nodeCard()}</Fragment>;\n      case 'preview':\n        return <Fragment>{collectionPreview()}</Fragment>;\n      case 'full':\n        return <Fragment>{fullNode()}</Fragment>;\n      case 'association-link':\n        return <Fragment>{associationLink()}</Fragment>;\n      default:\n        return;\n    }\n  };\n\n  return <Fragment>{renderNode()}</Fragment>;\n};\n\nexport { Url };\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Icon } from 'antd';\n// for now these are in-common between nodes\nimport NodeCardHeaderFull from '../../../components/elements/node/NodeCardHeaderFull';\nimport NodeCardHeader from '../../../components/elements/node/NodeCardHeader';\n\nconst File = (props) => {\n  const nodeCard = () => {\n    return (\n      <li className='nodelist-item'>\n        <NodeCardHeader node={props.node} />\n        <Link to={`/associations/${props.node.uuid}`} onClick={(e) => props.handleClick()}>\n          <Icon type={'file'} theme='outlined' className='node-card-icon' />\n        </Link>\n      </li>\n    );\n  };\n\n  // how the node will appear in collections\n  const collectionPreview = () => {\n    return (\n      <Fragment>\n        <Icon type={'file'} theme='outlined' className='node-card-icon' />\n      </Fragment>\n    );\n  };\n\n  const fullNode = () => {\n    return (\n      <div className='full-node-item'>\n        <NodeCardHeaderFull />\n        <a\n          href={props.node.preview}\n          target='_blank'\n          rel='noopener noreferrer'\n          style={{ width: '100%' }}\n        >\n          <Icon\n            type={'file'}\n            theme='outlined'\n            style={{\n              fontSize: '5rem',\n              color: '#b8b8b8',\n              display: 'block',\n              textAlign: 'center',\n              padding: '3rem',\n            }}\n          />\n        </a>\n      </div>\n    );\n  };\n\n  const associationLink = () => {\n    return (\n      <Link\n        to={`/associations/${props.node.uuid}`}\n        onClick={(e) => props.handleAssociatonClick()}\n        target='_blank'\n      >\n        {props.node.name}\n      </Link>\n    );\n  };\n\n  // render the requested element\n  const renderNode = () => {\n    switch (props.element) {\n      case 'card':\n        return <Fragment>{nodeCard()}</Fragment>;\n      case 'preview':\n        return <Fragment>{collectionPreview()}</Fragment>;\n      case 'full':\n        return <Fragment>{fullNode()}</Fragment>;\n      case 'association-link':\n        return <Fragment>{associationLink()}</Fragment>;\n      default:\n        return;\n    }\n  };\n\n  return <Fragment>{renderNode()}</Fragment>;\n};\n\nexport { File };\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Icon } from 'antd';\n// for now these are in-common between nodes\nimport NodeCardHeaderFull from '../../../components/elements/node/NodeCardHeaderFull';\nimport NodeCardHeader from '../../../components/elements/node/NodeCardHeader';\n\nconst Audio = (props) => {\n  const nodeCard = () => {\n    return (\n      <li className='nodelist-item'>\n        <NodeCardHeader node={props.node} />\n        <Link to={`/associations/${props.node.uuid}`} onClick={(e) => props.handleClick()}>\n          {/*          <Icon\n            type={'sound'}\n            theme='outlined'\n            className='node-card-icon'\n            style={{ height: '11rem', paddingTop: '3rem' }}\n          /> */}\n          <div className='nodelist-item-audio'></div>\n          <audio\n            style={{\n              textAlign: 'center',\n              backgroundColor: 'white',\n              width: '100%',\n              borderRadius: '0',\n            }}\n            src={props.node.preview}\n            controls\n            type='audio/wav'\n          ></audio>\n        </Link>\n      </li>\n    );\n  };\n\n  // how the node will appear in collections\n  const collectionPreview = () => {\n    return (\n      <Fragment>\n        <Icon type={'sound'} theme='outlined' className='node-card-icon' />\n      </Fragment>\n    );\n  };\n\n  const fullNode = () => {\n    return (\n      <div className='full-node-item'>\n        <NodeCardHeaderFull />\n        <audio\n          style={{\n            textAlign: 'center',\n            backgroundColor: 'white',\n            width: '100%',\n            borderRadius: '0',\n          }}\n          src={props.node.preview}\n          controls\n          type='audio/wav'\n        ></audio>\n        {/*         \n          <a\n          href={props.node.preview}\n          target='_blank'\n          rel='noopener noreferrer'\n          style={{ width: '100%' }}\n        >\n          <Icon\n            type={'sound'}\n            theme='outlined'\n            style={{\n              fontSize: '5rem',\n              color: '#b8b8b8',\n              display: 'block',\n              textAlign: 'center',\n              padding: '3rem',\n            }}\n          />\n        </a>*/}\n      </div>\n    );\n  };\n\n  const associationLink = () => {\n    return (\n      <Link\n        to={`/associations/${props.node.uuid}`}\n        onClick={(e) => this.handleLinkClick()}\n        // target='_blank'\n      >\n        {props.node.name}\n      </Link>\n    );\n  };\n\n  // render the requested element\n  const renderNode = () => {\n    switch (props.element) {\n      case 'card':\n        return <Fragment>{nodeCard()}</Fragment>;\n      case 'preview':\n        return <Fragment>{collectionPreview()}</Fragment>;\n      case 'full':\n        return <Fragment>{fullNode()}</Fragment>;\n      case 'association-link':\n        return <Fragment>{associationLink()}</Fragment>;\n      default:\n        return;\n    }\n  };\n\n  return <Fragment>{renderNode()}</Fragment>;\n};\n\nexport { Audio };\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Icon } from 'antd';\n// for now these are in-common between nodes\nimport NodeCardHeaderFull from '../../../components/elements/node/NodeCardHeaderFull';\nimport NodeCardHeader from '../../../components/elements/node/NodeCardHeader';\n\nconst Package = (props) => {\n  const nodeCard = () => {\n    return (\n      <li className='nodelist-item'>\n        <NodeCardHeader node={props.node} />\n        <Link to={`/associations/${props.node.uuid}`} onClick={(e) => props.handleClick()}>\n          <Icon type={'gift'} theme='outlined' className='node-card-icon' />\n        </Link>\n      </li>\n    );\n  };\n\n  // how the node will appear in collections\n  const collectionPreview = () => {\n    return (\n      <Fragment>\n        <Icon type={'gift'} theme='outlined' className='node-card-icon' />\n      </Fragment>\n    );\n  };\n\n  const fullNode = () => {\n    return (\n      <div className='full-node-item'>\n        <NodeCardHeaderFull />\n        <a\n          href={props.node.preview}\n          // target='_blank'\n          rel='noopener noreferrer'\n          style={{ width: '100%' }}\n        >\n          <Icon\n            type={'gift'}\n            theme='outlined'\n            style={{\n              fontSize: '5rem',\n              color: '#b8b8b8',\n              display: 'block',\n              textAlign: 'center',\n              padding: '3rem',\n            }}\n          />\n        </a>\n      </div>\n    );\n  };\n\n  const associationLink = () => {\n    return (\n      <Link\n        to={`/associations/${props.node.uuid}`}\n        onClick={(e) => props.handleAssociatonClick()}\n        // target='_blank'\n      >\n        {props.node.name}\n      </Link>\n    );\n  };\n\n  // render the requested element\n  const renderNode = () => {\n    switch (props.element) {\n      case 'card':\n        return <Fragment>{nodeCard()}</Fragment>;\n      case 'preview':\n        return <Fragment>{collectionPreview()}</Fragment>;\n      case 'full':\n        return <Fragment>{fullNode()}</Fragment>;\n      case 'association-link':\n        return <Fragment>{associationLink()}</Fragment>;\n      default:\n        return;\n    }\n  };\n\n  return <Fragment>{renderNode()}</Fragment>;\n};\n\nexport { Package };\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Icon } from 'antd';\n// for now these are in-common between nodes\nimport NodeCardHeaderFull from '../../../components/elements/node/NodeCardHeaderFull';\nimport NodeCardHeader from '../../../components/elements/node/NodeCardHeader';\n\nconst Zip = (props) => {\n  const nodeCard = () => {\n    return (\n      <li className='nodelist-item'>\n        <NodeCardHeader node={props.node} />\n        <Link to={`/associations/${props.node.uuid}`} onClick={(e) => props.handleClick()}>\n          <Icon type={'file-zip'} theme='outlined' className='node-card-icon' />\n        </Link>\n      </li>\n    );\n  };\n\n  // how the node will appear in collections\n  const collectionPreview = () => {\n    return (\n      <Fragment>\n        <Icon type={'file-zip'} theme='outlined' className='node-card-icon' />\n      </Fragment>\n    );\n  };\n\n  const fullNode = () => {\n    return (\n      <div className='full-node-item'>\n        <NodeCardHeaderFull />\n        <a\n          href={props.node.preview}\n          target='_blank'\n          rel='noopener noreferrer'\n          style={{ width: '100%' }}\n        >\n          <Icon\n            type={'file-zip'}\n            theme='outlined'\n            style={{\n              fontSize: '5rem',\n              color: '#b8b8b8',\n              display: 'block',\n              textAlign: 'center',\n              padding: '3rem',\n            }}\n          />\n        </a>\n      </div>\n    );\n  };\n\n  const associationLink = () => {\n    return (\n      <Link\n        to={`/associations/${props.node.uuid}`}\n        onClick={(e) => props.handleAssociatonClick()}\n        // target='_blank'\n      >\n        {props.node.name}\n      </Link>\n    );\n  };\n\n  // render the requested element\n  const renderNode = () => {\n    switch (props.element) {\n      case 'card':\n        return <Fragment>{nodeCard()}</Fragment>;\n      case 'preview':\n        return <Fragment>{collectionPreview()}</Fragment>;\n      case 'full':\n        return <Fragment>{fullNode()}</Fragment>;\n      case 'association-link':\n        return <Fragment>{associationLink()}</Fragment>;\n      default:\n        return;\n    }\n  };\n\n  return <Fragment>{renderNode()}</Fragment>;\n};\n\nexport { Zip };\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Icon } from 'antd';\n// custom code\nimport NodeRenderer from '../NodeRenderer';\n// for now these are in-common between nodes\nimport NodeCardHeaderFull from '../../../components/elements/node/NodeCardHeaderFull';\n\nconst Collection = (props) => {\n  const onCollectionContextMenu = (e) => {\n    // e.preventDefault();\n    // props.toggleHeader();\n  };\n\n  const onCollectionClick = (e) => {\n    e.preventDefault();\n    props.handleClick();\n    window.location.replace(`/associations/${props.node.uuid}`);\n  };\n\n  const nodeCard = () => {\n    // create the collection grid\n    var previewCount = 0;\n    var collectionPreview = null;\n    var preview = null;\n    // check if the collection has a preview\n    if (props.node.preview) {\n      preview = JSON.parse(props.node.preview);\n      previewCount = preview.length;\n    }\n    // create the different grid types\n    switch (previewCount) {\n      case 0:\n        collectionPreview = (\n          <li className='nodelist-item'>\n            {props.renderHeader()}\n            <Link\n              to={`/associations/${props.node.uuid}`}\n              onClick={(e) => onCollectionClick(e)}\n              onContextMenu={(e) => onCollectionContextMenu(e)}\n            >\n              <Icon type={'branches'} theme='outlined' className='node-card-icon' />\n            </Link>\n          </li>\n        );\n        return collectionPreview;\n      case 1:\n        collectionPreview = (\n          <li className='nodelist-item'>\n            {props.renderHeader()}\n            <Link\n              to={`/associations/${props.node.uuid}`}\n              onClick={(e) => onCollectionClick(e)}\n              onContextMenu={(e) => onCollectionContextMenu(e)}\n            >\n              <NodeRenderer type={preview[0].type} element={'preview'} node={preview[0]} />\n            </Link>\n          </li>\n        );\n        return collectionPreview;\n      case 2:\n        collectionPreview = (\n          <li className='nodelist-item nodelist-item-collection'>\n            {props.renderHeader()}\n            <Link\n              to={`/associations/${props.node.uuid}`}\n              onClick={(e) => onCollectionClick(e)}\n              onContextMenu={(e) => onCollectionContextMenu(e)}\n            >\n              <ul className='nodelist-collection-grid'>\n                <li className='nodelist-collection-grid-full-width'>\n                  <NodeRenderer type={preview[0].type} element={'preview'} node={preview[0]} />\n                </li>\n                <li className='nodelist-collection-grid-full-width'>\n                  <NodeRenderer type={preview[1].type} element={'preview'} node={preview[1]} />\n                </li>\n              </ul>\n            </Link>\n          </li>\n        );\n        return collectionPreview;\n      case 3:\n        collectionPreview = (\n          <li className='nodelist-item nodelist-item-collection'>\n            {props.renderHeader()}\n            <Link\n              to={`/associations/${props.node.uuid}`}\n              onClick={(e) => onCollectionClick(e)}\n              onContextMenu={(e) => onCollectionContextMenu(e)}\n            >\n              <ul className='nodelist-collection-grid'>\n                <li className='nodelist-collection-grid-full-width'>\n                  <NodeRenderer type={preview[0].type} element={'preview'} node={preview[0]} />\n                </li>\n                <li>\n                  <NodeRenderer type={preview[1].type} element={'preview'} node={preview[1]} />\n                </li>\n                <li>\n                  <NodeRenderer type={preview[2].type} element={'preview'} node={preview[2]} />\n                </li>\n                <li></li>\n              </ul>\n            </Link>\n          </li>\n        );\n        return collectionPreview;\n      case 4:\n        collectionPreview = (\n          <li className='nodelist-item nodelist-item-collection'>\n            {props.renderHeader()}\n            <Link\n              to={`/associations/${props.node.uuid}`}\n              onClick={(e) => onCollectionClick(e)}\n              onContextMenu={(e) => onCollectionContextMenu(e)}\n            >\n              <ul className='nodelist-collection-grid'>\n                <li>\n                  <NodeRenderer type={preview[0].type} element={'preview'} node={preview[0]} />\n                </li>\n                <li>\n                  <NodeRenderer type={preview[1].type} element={'preview'} node={preview[1]} />\n                </li>\n                <li>\n                  <NodeRenderer type={preview[2].type} element={'preview'} node={preview[2]} />\n                </li>\n                <li>\n                  <NodeRenderer type={preview[3].type} element={'preview'} node={preview[3]} />\n                </li>\n              </ul>\n            </Link>\n          </li>\n        );\n        return collectionPreview;\n      default:\n        return;\n    }\n  };\n\n  const fullNode = () => {\n    return (\n      <div className='full-node-item'>\n        <NodeCardHeaderFull />\n      </div>\n    );\n  };\n\n  const associationLink = () => {\n    return (\n      <Link\n        to={`/associations/${props.node.uuid}`}\n        onClick={(e) => props.handleAssociatonClick()}\n        // target='_blank'\n      >\n        {props.node.name}\n      </Link>\n    );\n  };\n\n  // render the requested element\n  const renderNode = () => {\n    switch (props.element) {\n      case 'card':\n        return <Fragment>{nodeCard()}</Fragment>;\n      case 'full':\n        return <Fragment>{fullNode()}</Fragment>;\n      case 'association-link':\n        return <Fragment>{associationLink()}</Fragment>;\n      default:\n        return;\n    }\n  };\n\n  return <Fragment>{renderNode()}</Fragment>;\n};\n\nexport { Collection };\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\n// for now these are in-common between nodes\nimport NodeCardHeaderFull from '../../../components/elements/node/NodeCardHeaderFull';\nimport defaultHeader from '../../../resources/cloud9.png';\n\nconst User = (props) => {\n  const nodeCard = () => {\n    return (\n      <li className='nodelist-item'>\n        {props.renderHeader()}\n        <Link\n          to={`/profile/${props.node.path}`}\n          replace\n          onClick={(e) => {\n            e.preventDefault();\n            props.handleClick();\n            window.location.replace(`/profile/${props.node.path}`);\n          }}\n          onContextMenu={(e) => {\n            // e.preventDefault();\n            // props.toggleHeader();\n          }}\n        >\n          <img\n            src={props.node.preview || defaultHeader}\n            alt={props.node.name}\n            style={{\n              objectFit: 'cover',\n              minHeight: '100%',\n              width: '100%',\n            }}\n          ></img>\n        </Link>\n      </li>\n    );\n  };\n\n  // how the node will appear in collections\n  const collectionPreview = () => {\n    return (\n      <Fragment>\n        <img\n          src={props.node.preview || defaultHeader}\n          alt={props.node.name}\n          style={{\n            objectFit: 'cover',\n            minHeight: '100%',\n            width: '100%',\n          }}\n        ></img>\n      </Fragment>\n    );\n  };\n\n  const fullNode = () => {\n    console.log(props.node);\n    return (\n      <div className='full-node-item'>\n        <NodeCardHeaderFull />\n        <Link to={`/profile/${props.node.path}`} /*target='_blank' */>\n          <p>{props.node.name}</p>\n        </Link>\n      </div>\n    );\n  };\n\n  const associationLink = () => {\n    return (\n      <Link\n        to={`/profile/${props.node.path}`}\n        onClick={(e) => props.handleAssociatonClick()}\n        // target='blank'\n      >\n        {props.node.name}\n      </Link>\n    );\n  };\n\n  // render the requested element\n  const renderNode = () => {\n    switch (props.element) {\n      case 'card':\n        return <Fragment>{nodeCard()}</Fragment>;\n      case 'preview':\n        return <Fragment>{collectionPreview()}</Fragment>;\n      case 'full':\n        return <Fragment>{fullNode()}</Fragment>;\n      case 'association-link':\n        return <Fragment>{associationLink()}</Fragment>;\n      default:\n        return;\n    }\n  };\n\n  return <Fragment>{renderNode()}</Fragment>;\n};\n\nexport { User };\n","// import the default node configurations\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { updateLinkStrength, hideComponent } from '../../api/redux/actions';\nimport { Text, Image, Url, File, Audio, Package, Zip, Collection, User } from './core/index';\nimport NodeCardHeader from '../../components/elements/node/NodeCardHeader';\n\nclass NodeRenderer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showHeader: true,\n    };\n  }\n  // increment linkstrength if there is an activeNode\n  handleNodeClick = () => {\n    const nodeUUID = this.props.node.uuid;\n    if (this.props.activeNode) {\n      const linkedNodeUUID = this.props.activeNode.uuid;\n      // increment the linkStrength on the server\n      this.props.updateLinkStrength(nodeUUID, linkedNodeUUID);\n    }\n  };\n\n  // increment linkstrength on association sider clicks\n  handleAssociatonClick = () => {\n    this.props.hideComponent('associationSider');\n    if (this.props.siderNodeUUID && this.props.node.uuid) {\n      const siderUUID = this.props.siderNodeUUID;\n      const linkedNodeUUID = this.props.node.uuid;\n      // increment the linkStrength on the server\n      this.props.updateLinkStrength(siderUUID, linkedNodeUUID);\n    }\n  };\n\n  toggleHeader = () => {\n    if (this.state.showHeader) {\n      this.setState({ showHeader: false });\n    } else {\n      this.setState({ showHeader: true });\n    }\n  };\n\n  renderHeader = () => {\n    if (this.state.showHeader) {\n      return <NodeCardHeader node={this.props.node} />;\n    } else {\n      return;\n    }\n  };\n\n  renderNode = () => {\n    switch (this.props.type) {\n      case 'text':\n        return (\n          <Text\n            element={this.props.element}\n            node={this.props.node}\n            handleClick={this.handleNodeClick}\n            handleAssociatonClick={this.handleAssociatonClick}\n          />\n        );\n      case 'image':\n        return (\n          <Image\n            element={this.props.element}\n            node={this.props.node}\n            handleClick={this.handleNodeClick}\n            handleAssociatonClick={this.handleAssociatonClick}\n            toggleHeader={this.toggleHeader}\n            renderHeader={this.renderHeader}\n          />\n        );\n      case 'url':\n        return (\n          <Url\n            element={this.props.element}\n            node={this.props.node}\n            handleClick={this.handleNodeClick}\n            handleAssociatonClick={this.handleAssociatonClick}\n            toggleHeader={this.toggleHeader}\n            renderHeader={this.renderHeader}\n          />\n        );\n      case 'file':\n        return (\n          <File\n            element={this.props.element}\n            node={this.props.node}\n            handleClick={this.handleNodeClick}\n            handleAssociatonClick={this.handleAssociatonClick}\n          />\n        );\n      case 'audio':\n        return (\n          <Audio\n            element={this.props.element}\n            node={this.props.node}\n            handleClick={this.handleNodeClick}\n            handleAssociatonClick={this.handleAssociatonClick}\n          />\n        );\n      case 'package':\n        return (\n          <Package\n            element={this.props.element}\n            node={this.props.node}\n            handleClick={this.handleNodeClick}\n            handleAssociatonClick={this.handleAssociatonClick}\n          />\n        );\n      case 'zip':\n        return (\n          <Zip\n            element={this.props.element}\n            node={this.props.node}\n            handleClick={this.handleNodeClick}\n            handleAssociatonClick={this.handleAssociatonClick}\n          />\n        );\n      case 'collection':\n        return (\n          <Collection\n            element={this.props.element}\n            node={this.props.node}\n            handleClick={this.handleNodeClick}\n            handleAssociatonClick={this.handleAssociatonClick}\n            toggleHeader={this.toggleHeader}\n            renderHeader={this.renderHeader}\n          />\n        );\n      case 'user':\n        return (\n          <User\n            element={this.props.element}\n            node={this.props.node}\n            handleClick={this.handleNodeClick}\n            handleAssociatonClick={this.handleAssociatonClick}\n            toggleHeader={this.toggleHeader}\n            renderHeader={this.renderHeader}\n          />\n        );\n      default:\n        return;\n    }\n  };\n\n  render() {\n    return <Fragment>{this.renderNode()}</Fragment>;\n  }\n}\n\nexport default connect(null, { updateLinkStrength, hideComponent })(NodeRenderer);\n","import React from 'react';\n//custom components\nimport NodeRenderer from '../../../types/render/NodeRenderer';\n\nconst NodeCard = (props) => {\n  const renderNodeCard = () => {\n    if (props.node) {\n      return (\n        <NodeRenderer\n          type={props.node.type}\n          element={'card'}\n          node={props.node}\n          activeNode={props.activeNode}\n        />\n      );\n    }\n  };\n\n  return <div>{renderNodeCard()}</div>;\n};\n\nexport default NodeCard;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  hideComponent,\n  deleteAssociationLink,\n  removeFromAssociationList,\n  updateLinkStrength,\n} from '../../../api/redux/actions';\nimport { Button, Tooltip } from 'antd';\nimport './AssociationLinkList.less';\n// node renderer\nimport NodeRenderer from '../../../types/render/NodeRenderer';\n\nclass AssociationLink extends Component {\n  handleDeleteAssociation = () => {\n    // sider node is the the node the sider was opened from\n    var siderNodeUUID = this.props.siderNodeUUID;\n    // linked node is the node from the list, to be un-linked, un-associated\n    var linkedNodeUUID = this.props.association.uuid;\n    // active node is only set when viewing an /association page, the node of the page itself\n    if (this.props.activeNode) {\n      // store the active node\n      var activeNodeUUID = this.props.activeNode.uuid;\n    }\n    // if both have values go ahead and delete the association\n    if (siderNodeUUID && linkedNodeUUID) {\n      this.props.deleteAssociationLink(siderNodeUUID, linkedNodeUUID);\n      // store pathname\n      var pathname = window.location.pathname;\n      // handle removal from association list page if on association page if an associated node was removed\n      if (\n        (pathname.includes('associations') || pathname.includes('/edit/text/')) &&\n        activeNodeUUID &&\n        activeNodeUUID === linkedNodeUUID\n      ) {\n        this.props.removeFromAssociationList(siderNodeUUID);\n        this.props.hideComponent('associationSider');\n      } else if (\n        (pathname.includes('associations') || pathname.includes('/edit/text/')) &&\n        activeNodeUUID &&\n        activeNodeUUID === siderNodeUUID\n      ) {\n        this.props.removeFromAssociationList(linkedNodeUUID);\n      }\n    }\n  };\n\n  // render card types\n  renderAssociationLink = (association) => {\n    return (\n      <li className='association-list-item'>\n        <Tooltip title={association.name} mouseLeaveDelay={0} mouseEnterDelay={0.3}>\n          <Button\n            icon='close'\n            shape='circle'\n            size='small'\n            onClick={(e) => this.handleDeleteAssociation()}\n          />\n          <NodeRenderer\n            type={association.type}\n            element={'association-link'}\n            node={association}\n            siderNodeUUID={this.props.siderNodeUUID}\n          ></NodeRenderer>\n        </Tooltip>\n      </li>\n    );\n  };\n\n  render() {\n    return <div>{this.renderAssociationLink(this.props.association)}</div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    siderNodeUUID: state.components.componentList['associationSider'].content.uuid,\n    activeNode: state.nodes.activeNode,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  hideComponent,\n  deleteAssociationLink,\n  removeFromAssociationList,\n  updateLinkStrength,\n})(AssociationLink);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// custom code\nimport '../node/NodeList.less';\nimport { searchNodes, fetchAssociationLinkList } from '../../../api/redux/actions';\n// import NodeCard from './NodeCard';\nimport Spinner from '../Spinner';\nimport AssociationLink from './AssociationLink';\n\nclass AssociationLinkList extends Component {\n  componentDidMount() {\n    this.props.fetchAssociationLinkList({ nodeUUID: this.props.nodeUUID });\n  }\n\n  loadMore = () => {\n    this.props.fetchAssociationLinkList({\n      nodeUUID: this.props.nodeUUID,\n      page: this.props.page + 1,\n    });\n  };\n\n  renderAssociationLinkList = () => {\n    // go through the list of nodes and render them to the page\n    const list = this.props.associations;\n    // if list exists render the links\n    if (list !== null) {\n      return list.map((association) => {\n        return <AssociationLink key={association.uuid} association={association} />;\n      });\n    } else {\n      return <Spinner></Spinner>;\n    }\n  };\n\n  renderLoadMoreButton = () => {\n    var listLength = this.props.associations.length;\n    // if the total items is more than what is loaded show the load more button\n    if (this.props.totalItems > listLength + 1) {\n      return (\n        <li style={{ listStyle: 'none', marginTop: '0.5rem', textAlign: 'center' }}>\n          <button\n            style={{\n              margin: '1rem 0',\n              width: '90%',\n              backgroundColor: '#272727',\n              color: '#16e998',\n            }}\n            onClick={(e) => this.loadMore()}\n          >\n            load more\n          </button>\n        </li>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <ul id='node-info-list' className='association-list'>\n        {this.renderAssociationLinkList()}\n        {this.renderLoadMoreButton()}\n      </ul>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    associations: state.associations.associationLinkList,\n    page: state.associations.associationLinkListPage,\n    totalItems: state.associations.totalLinkListItems,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  searchNodes,\n  fetchAssociationLinkList,\n})(AssociationLinkList);\n","import React, { Component } from 'react';\n// import { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Drawer, AutoComplete, Tooltip } from 'antd';\nimport {\n  signOut,\n  hideComponent,\n  createAssociation,\n  fetchAssociationLinkList,\n  associationAutocomplete,\n} from '../../../api/redux/actions';\n// custom code\nimport AssociationLinkList from './AssociationLinkList';\n// destructure antd\nconst { Option } = AutoComplete;\n\nclass AssociationSider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      autocompleteOptions: null,\n      autocompleteValues: null,\n      inputText: '',\n    };\n  }\n\n  createAssociationHandler = async (input) => {\n    // get the uuid of the node to be associated\n    const nodeToAssociate = [];\n    var siderNode = this.props.associationSiderData.content;\n    this.state.autocompleteValues.forEach((node) => {\n      if (node.uuid === input) {\n        nodeToAssociate.push(node.uuid);\n      }\n    });\n    const nodeUUIDToAssociate = nodeToAssociate[0];\n    // get this node uuid\n    const nodeUUID = siderNode.uuid;\n    // associate the nodes\n    await this.props.createAssociation(nodeUUID, nodeUUIDToAssociate);\n    this.setState({ autocompleteOptions: [], autocompleteValues: null, inputText: '' });\n    // re-render the autocomplete values so more can be added\n    this.renderAutocompleteValues('');\n  };\n\n  renderAutocompleteValues = async (input) => {\n    var siderNode = this.props.associationSiderData.content;\n    this.setState({ inputText: input });\n    const result = await this.props.associationAutocomplete({\n      searchQuery: input || '',\n      uuid: siderNode.uuid,\n    });\n    if (result) {\n      this.setState({\n        autocompleteValues: result.map((node) => {\n          return node;\n        }),\n      });\n      const newValues = result.map((node) => {\n        return (\n          <Option key={node.uuid}>\n            <Tooltip title={node.name} mouseEnterDelay={0.7} placement={'left'}>\n              {node.name}\n            </Tooltip>\n          </Option>\n        );\n      });\n      this.setState({ autocompleteOptions: newValues });\n    }\n  };\n\n  hideInfoSider = () => {\n    // reset state when the sider is hidden\n    this.setState({ autocompleteOptions: null, autocompleteValues: null, inputText: '' });\n    // hide association sider component\n    this.props.hideComponent('associationSider');\n  };\n\n  renderContent = () => {\n    if (this.props.associationSiderData) {\n      var siderNode = this.props.associationSiderData.content;\n      return (\n        <div className='node-info-sider-container' style={{ textAlign: 'center' }}>\n          <Drawer\n            className='node-info-sider'\n            placement='right'\n            closable={false}\n            title={siderNode.name}\n            onClose={() => {\n              this.hideInfoSider();\n              // temporary fix to remove overflow property being set on body by antd\n              document.documentElement.style.cssText = '';\n            }}\n            visible={this.props.associationSiderData.visible}\n          >\n            {/*  <Link className='node-info-sider-header' to={`/associations/${siderNode.uuid}`}>\n              {siderNode.name}\n            </Link>\n            <p style={{ color: 'white' }}>{siderNode.preview}</p> */}\n            <AutoComplete\n              style={{\n                width: 200,\n              }}\n              placeholder='add association'\n              value={this.state.inputText}\n              onChange={(value) => this.renderAutocompleteValues(value)}\n              onFocus={(value) => this.renderAutocompleteValues(value)}\n              onSelect={(value) => this.createAssociationHandler(value)}\n            >\n              {this.state.autocompleteOptions}\n            </AutoComplete>\n            <br />\n            <AssociationLinkList nodeUUID={siderNode.uuid} />\n          </Drawer>\n        </div>\n      );\n    }\n  };\n\n  render() {\n    return <div>{this.renderContent()}</div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    associationSiderData: state.components.componentList['associationSider'],\n    page: state.associations.associationLinkListPage,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signOut,\n  hideComponent,\n  createAssociation,\n  fetchAssociationLinkList,\n  associationAutocomplete,\n})(AssociationSider);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\n// custom code\nimport './NodeList.less';\nimport { fetchNodes } from '../../../api/redux/actions';\nimport NodeCard from './NodeCard';\nimport AssociationSider from '../association/AssociationSider';\nimport Spinner from '../Spinner';\n// import NodeCardFull from '../node/NodeCardFull';\n\nclass NodeList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      topOfPage: false,\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchNodes({\n      // page: this.props.query.page > 1 ? this.props.query.page - 1 : this.props.query.page,\n      page: 1,\n      type: this.props.query.type,\n      searchQuery: this.props.query.searchQuery,\n    });\n    window.addEventListener('scroll', this.infiniteScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.infiniteScroll);\n  }\n\n  infiniteScroll = (e) => {\n    if (this.endReached() && !this.props.isFetching) {\n      this.setState({ topOfPage: false });\n      // fetch the next page\n      this.props.fetchNodes({\n        page: this.props.query.page + 1,\n        type: this.props.query.type,\n        searchQuery: this.props.query.searchQuery,\n      });\n    }\n  };\n\n  endReached = () => {\n    // window calculations to tell when the user scrolls to the bottom\n    const windowHeight =\n      'innerHeight' in window ? window.innerHeight : document.documentElement.offsetHeight;\n    const body = document.body;\n    const html = document.documentElement;\n    const docHeight = Math.max(\n      body.scrollHeight,\n      body.offsetHeight,\n      html.clientHeight,\n      html.scrollHeight,\n      html.offsetHeight\n    );\n    const windowBottom = windowHeight + window.pageYOffset;\n    // check if the top is reached\n    if (window.pageYOffset < 1 && !this.props.isFetching && !this.state.topOfPage) {\n      this.setState({ topOfPage: true });\n      // at the top of the page, reset the nodelist\n      this.props.fetchNodes({\n        page: 1,\n        type: this.props.query.type,\n        searchQuery: this.props.query.searchQuery,\n      });\n    }\n    // if it's not the top of the page go ahead and fetch more\n    return windowBottom >= docHeight - 733;\n  };\n\n  renderNodeList = () => {\n    // go through the list of nodes and render them to the page\n    const nodeList = this.props.nodes;\n    // if there are nodes go ahead and render\n    if (nodeList !== null) {\n      return nodeList.map((node) => {\n        if (node.uuid) {\n          // return <NodeCardFull key={node.uuid} node={node} />\n          return <NodeCard key={node.uuid} node={node} />;\n        } else {\n          return <Fragment></Fragment>;\n        }\n      });\n    } else {\n      return <Spinner></Spinner>;\n    }\n  };\n\n  render() {\n    return (\n      <div className='nodelist-container'>\n        <ul className='nodelist'>{this.renderNodeList()}</ul>\n        <AssociationSider />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    nodes: state.nodes.nodeList,\n    query: state.nodes.query,\n    totalNodes: state.nodes.totalItems,\n    isFetching: state.nodes.isFetching,\n  };\n};\n\nexport default connect(mapStateToProps, { fetchNodes })(NodeList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Layout } from 'antd';\n// custom code\nimport MainSider from '../elements/MainSider';\nimport IOBar from '../elements/IOBar';\nimport NodeList from '../elements/node/NodeList';\n\nconst { Content } = Layout;\n\nclass Home extends Component {\n  componentDidMount() {\n    document.title = 'home';\n    // temporary fix to undo whatever is setting overflow hidden on-login\n    document.body.style.removeProperty('overflow');\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }\n\n  renderMainSider = () => {\n    if (this.props.mainSider) {\n      return <MainSider />;\n    }\n  };\n\n  render() {\n    return (\n      <Layout className='page-layout'>\n        <Layout>\n          {this.renderMainSider()}\n          <Content style={{ minHeight: '100vh' }}>\n            <IOBar />\n            <div className='list-container'>\n              <NodeList />\n            </div>\n          </Content>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isSignedIn: state.auth.isSignedIn,\n    mainSider: state.components.componentList['mainSider'],\n  };\n};\n\nexport default connect(mapStateToProps)(Home);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Layout, message, Modal } from 'antd';\n// custom code\nimport Spinner from '../elements/Spinner';\nimport {\n  fetchUserByUsername,\n  showComponent,\n  hideComponent,\n  markNodeView,\n} from '../../api/redux/actions';\nimport './css/Profile.less';\nimport NodeList from '../elements/node/NodeList';\nimport MainSider from '../elements/MainSider';\n// import default images\nimport defaultHeader from '../../resources/cloud9.png';\nimport defaultAvatar from '../../resources/synthona-logo.png';\n\nconst { Content } = Layout;\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialized: false,\n      username: '',\n      displayName: '',\n      bio: '',\n      avatar: '',\n      header: '',\n      avatarModal: false,\n    };\n  }\n\n  componentDidMount() {\n    this.props.showComponent('mainSider');\n    document.title = this.props.match.params.username;\n    this.initializeFromUrlParams();\n  }\n\n  componentDidUpdate() {\n    document.body.style.removeProperty('overflow');\n    if (this.state.username !== this.props.match.params.username) {\n      document.title = this.props.match.params.username;\n      this.initializeFromUrlParams();\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.hideComponent('mainSider');\n  }\n\n  toggleAvatarModal = () => {\n    if (this.state.avatarModal === false) {\n      this.setState({ avatarModal: true });\n    } else {\n      this.setState({ avatarModal: false });\n    }\n  };\n\n  // load the text node and set the local id state.\n  initializeFromUrlParams = async () => {\n    // fetch the user info from the server\n    const user = await this.props.fetchUserByUsername(this.props.match.params.username);\n    if (user) {\n      this.setState({\n        initialized: true,\n        username: user.username,\n        displayName: user.displayName,\n        bio: user.bio,\n        avatar: user.avatar,\n        header: user.header,\n      });\n      // mark the profile as viewed\n      this.props.markNodeView({ uuid: user.nodeId });\n      // set the page title\n      document.title = user.displayName;\n    } else {\n      message.error('there was a problem loading the user');\n      this.props.history.push('/');\n    }\n  };\n\n  render() {\n    if (!this.state.initialized) {\n      return (\n        <Layout className='page-layout'>\n          <Layout>\n            <Layout>\n              <Spinner />\n            </Layout>\n          </Layout>\n        </Layout>\n      );\n    }\n\n    return (\n      <div className='profile-container'>\n        <MainSider showMask={false} animate={false} />\n        <Layout>\n          <Content style={{ marginBottom: '0' }} className='Profile'>\n            <div className='profile-card'>\n              <button href={`/profile/${this.state.username}`}>\n                <div className='Profile-header'>\n                  <img src={this.state.header || defaultHeader} alt='example' draggable='false' />\n                </div>\n              </button>\n              {/* <button href={`/profile/${this.state.username}`}> */}\n              <div className='Profile-avatar'>\n                <img\n                  src={this.state.avatar || defaultAvatar}\n                  alt={'profile'}\n                  draggable='false'\n                  onClick={this.toggleAvatarModal}\n                />\n              </div>\n              {/* </button> */}\n              <div className='Profile-info'>\n                <h2 className='Profile-displayName'>\n                  {this.state.displayName}\n                  <div className='verified-sign-container'>\n                    <svg\n                      viewBox='0 0 24 24'\n                      aria-label='Verified account'\n                      className='verified-sign'\n                    >\n                      <g>\n                        <path d='M22.5 12.5c0-1.58-.875-2.95-2.148-3.6.154-.435.238-.905.238-1.4 0-2.21-1.71-3.998-3.818-3.998-.47 0-.92.084-1.336.25C14.818 2.415 13.51 1.5 12 1.5s-2.816.917-3.437 2.25c-.415-.165-.866-.25-1.336-.25-2.11 0-3.818 1.79-3.818 4 0 .494.083.964.237 1.4-1.272.65-2.147 2.018-2.147 3.6 0 1.495.782 2.798 1.942 3.486-.02.17-.032.34-.032.514 0 2.21 1.708 4 3.818 4 .47 0 .92-.086 1.335-.25.62 1.334 1.926 2.25 3.437 2.25 1.512 0 2.818-.916 3.437-2.25.415.163.865.248 1.336.248 2.11 0 3.818-1.79 3.818-4 0-.174-.012-.344-.033-.513 1.158-.687 1.943-1.99 1.943-3.484zm-6.616-3.334l-4.334 6.5c-.145.217-.382.334-.625.334-.143 0-.288-.04-.416-.126l-.115-.094-2.415-2.415c-.293-.293-.293-.768 0-1.06s.768-.294 1.06 0l1.77 1.767 3.825-5.74c.23-.345.696-.436 1.04-.207.346.23.44.696.21 1.04z'></path>\n                      </g>\n                    </svg>\n                  </div>\n                </h2>\n                <i className='Profile-username'>{`@${this.state.username}`}</i>\n                <p className='Profile-bio'>{this.state.bio}</p>\n              </div>\n            </div>\n            <Modal\n              title={this.state.displayName}\n              visible={this.state.avatarModal}\n              className='profile-modal'\n              centered\n              onCancel={this.toggleAvatarModal}\n              closable={false}\n              footer={null}\n              afterClose={() => {\n                // temporary fix to remove overflow property being set on body by antd\n                document.body.style.removeProperty('overflow');\n              }}\n            >\n              <img src={this.state.avatar || defaultAvatar} alt={'avatar'}></img>\n            </Modal>\n            <NodeList />\n          </Content>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { user: state.auth.user };\n};\n\nexport default connect(mapStateToProps, {\n  fetchUserByUsername,\n  showComponent,\n  hideComponent,\n  markNodeView,\n})(Profile);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Layout, message, Icon, Button, Modal } from 'antd';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n// custom code\nimport {\n  fetchUserByUsername,\n  updateUserInfo,\n  updateUserAvatar,\n  updateUserHeader,\n  updateUsername,\n  updateEmail,\n  changePassword,\n  clearAllNodes,\n  showComponent,\n  generateInstanceExport,\n  regenerateCollectionPreviews,\n  hideComponent,\n} from '../../api/redux/actions';\nimport './css/Options.less';\n// import IOBar from '../elements/IOBar';\nimport NodeList from '../elements/node/NodeList';\nimport MainSider from '../elements/MainSider';\n// import default images\nimport defaultHeader from '../../resources/cloud9.png';\nimport defaultAvatar from '../../resources/synthona-logo.png';\n\nconst { Content } = Layout;\n\nclass Options extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showPasswordModal: false,\n      showDeleteNodesModal: false,\n      showExportModal: false,\n      initialized: false,\n      username: '',\n      email: '',\n      displayName: '',\n      bio: '',\n      avatar: '',\n      header: '',\n    };\n  }\n\n  componentDidMount() {\n    this.props.showComponent('mainSider');\n    document.title = `Edit Profile`;\n    // temporary fix to undo whatever is setting overflow hidden on-login\n    document.body.style.removeProperty('overflow');\n    this.initializeFromUrlParams();\n  }\n\n  updatePassword = (values, { setSubmitting }) => {\n    this.togglePasswordModal();\n    setSubmitting(false);\n    this.props.changePassword(values);\n  };\n\n  handleClearNodes = (values, { setSubmitting }) => {\n    this.toggleDeleteNodesModal();\n    setSubmitting(false);\n    this.props.clearAllNodes(values);\n  };\n\n  // show modal to confirm deletion\n  togglePasswordModal = () => {\n    if (this.state.showPasswordModal) {\n      this.setState({ showPasswordModal: false });\n    } else {\n      this.setState({ showPasswordModal: true });\n    }\n  };\n\n  // show modal to confirm deletion\n  toggleDeleteNodesModal = () => {\n    if (this.state.showDeleteNodesModal) {\n      this.setState({ showDeleteNodesModal: false });\n    } else {\n      this.setState({ showDeleteNodesModal: true });\n    }\n  };\n\n  // show confirm export modal\n  toggleExportModal = () => {\n    if (this.state.showExportModal) {\n      this.setState({ showExportModal: false });\n    } else {\n      this.setState({ showExportModal: true });\n    }\n  };\n\n  // delete the node\n  exportHandler = async () => {\n    this.setState({ showExportModal: false });\n    await this.props.generateInstanceExport();\n  };\n\n  passwordModal = () => {\n    return (\n      <Formik\n        initialValues={{ oldPassword: '', newPassword: '', confirmNewPassword: '' }}\n        validationSchema={validationSchema}\n        onSubmit={this.updatePassword}\n        style={{ display: 'inline-block' }}\n      >\n        {({ isSubmitting }) => (\n          <Form className='password-modal-form'>\n            <Field\n              type='password'\n              name='oldPassword'\n              placeholder='old password'\n              className='password-modal-field'\n            />\n            <ErrorMessage name='oldPassword' component='div' />\n            <Field\n              type='password'\n              name='newPassword'\n              placeholder='new password'\n              className='password-modal-field'\n            />\n            <ErrorMessage name='newPassword' component='div' />\n            <Field\n              type='password'\n              name='confirmNewPassword'\n              placeholder='confirm new password'\n              className='password-modal-field'\n            />\n            <ErrorMessage name='confirmNewPassword' component='div' />\n            <button type='submit' disabled={isSubmitting}>\n              change password\n            </button>\n          </Form>\n        )}\n      </Formik>\n    );\n  };\n\n  deleteAllNodesModal = () => {\n    return (\n      <Formik\n        initialValues={{ passwordValue: '', confirmPassword: '' }}\n        validationSchema={deleteNodesValidation}\n        onSubmit={this.handleClearNodes}\n        style={{ display: 'inline-block' }}\n      >\n        {({ isSubmitting }) => (\n          <Form className='password-modal-form'>\n            <p>\n              Are you are you want to delete all nodes and associations for this user? This action\n              is not reversible, it's recommended that u make a backup first.\n            </p>\n            <Field\n              type='password'\n              name='passwordValue'\n              placeholder='password'\n              className='password-modal-field'\n            />\n            <ErrorMessage name='passwordValue' component='div' />\n            <Field\n              type='password'\n              name='confirmPassword'\n              placeholder='confirm password'\n              className='password-modal-field'\n            />\n            <ErrorMessage name='confirmPassword' component='div' />\n            <button\n              type='danger'\n              disabled={isSubmitting}\n              style={{ color: 'white', backgroundColor: 'red' }}\n            >\n              yes, i want to delete all my data\n            </button>\n          </Form>\n        )}\n      </Formik>\n    );\n  };\n\n  // load the profile\n  initializeFromUrlParams = async () => {\n    // fetch the user info from the server\n    const user = await this.props.fetchUserByUsername(this.props.user.username);\n    if (user) {\n      this.setState({\n        initialized: true,\n        username: user.username,\n        email: this.props.user.email,\n        displayName: user.displayName,\n        bio: user.bio,\n        avatar: user.avatar,\n        header: user.header,\n      });\n    } else {\n      message.error('there was a problem loading your profile');\n      this.props.history.push('/');\n    }\n  };\n\n  // select an image.\n  setAvatar = () => {\n    const input = document.createElement('input');\n    input.setAttribute('type', 'file');\n    input.click();\n    // Listen for uploading local image, then save to server\n    input.onchange = async () => {\n      const file = input.files[0];\n      // make sure file is an image\n      if (/^image\\//.test(file.type)) {\n        // save the image to the server\n        const url = await this.props.updateUserAvatar(file);\n        this.setState({ avatar: url });\n      } else {\n        message.error('The file must be an image', 1);\n      }\n    };\n  };\n\n  setHeader = () => {\n    const input = document.createElement('input');\n    input.setAttribute('type', 'file');\n    input.click();\n    // Listen for uploading local image, then save to server\n    input.onchange = async () => {\n      const file = input.files[0];\n      // make sure file is an image\n      if (/^image\\//.test(file.type)) {\n        // save the image to the server\n        const url = await this.props.updateUserHeader(file);\n        this.setState({ header: url });\n      } else {\n        message.error('The file must be an image', 1);\n      }\n    };\n  };\n\n  // render display name\n  renderDisplayName = () => {\n    return (\n      <input\n        type='text'\n        className='Options-display-name'\n        placeholder='Display Name'\n        value={this.state.displayName}\n        onChange={(e) => this.saveDisplayName(e.target.value)}\n      ></input>\n    );\n  };\n\n  // update and save the displayName\n  saveDisplayName = (displayName) => {\n    if (this.state.displayName !== displayName) {\n      this.props.updateUserInfo({\n        username: this.props.user.username,\n        displayName: displayName,\n      });\n      localStorage.setItem('displayName', displayName);\n      document.title = displayName;\n      this.setState({ displayName });\n    }\n  };\n\n  // render the profile bio\n  renderBio = () => {\n    return (\n      <textarea\n        type='text'\n        className='Options-bio'\n        placeholder='Bio'\n        value={this.state.bio}\n        onChange={(e) => this.saveBio(e.target.value)}\n      ></textarea>\n    );\n  };\n\n  // update and save the bio\n  saveBio = (bio) => {\n    if (this.state.bio !== bio) {\n      this.props.updateUserInfo({\n        username: this.props.user.username,\n        bio: bio,\n      });\n      this.setState({ bio });\n    }\n  };\n\n  // render the profile username\n  renderUsername = () => {\n    return (\n      <input\n        type='text'\n        className='Options-standard-input'\n        placeholder='username'\n        value={this.state.username}\n        onChange={(e) => this.saveUsername(e.target.value)}\n      ></input>\n    );\n  };\n\n  // update and save the username\n  saveUsername = (username) => {\n    if (this.state.username !== username) {\n      this.props.updateUsername(username);\n      this.setState({ username });\n    }\n  };\n\n  // render the profile email\n  renderEmail = () => {\n    return (\n      <input\n        type='text'\n        className='Options-standard-input'\n        placeholder='email'\n        value={this.state.email}\n        onChange={(e) => this.saveEmail(e.target.value)}\n      ></input>\n    );\n  };\n\n  // update and save the email\n  saveEmail = (email) => {\n    if (this.state.email !== email) {\n      this.props.updateEmail(email);\n      this.setState({ email });\n    }\n  };\n\n  componentWillUnmount() {\n    // remove any selections on exit\n    window.getSelection().removeAllRanges();\n    // hide mainsider again\n    this.props.hideComponent('mainSider');\n  }\n\n  render() {\n    return (\n      <Layout className='Options-container'>\n        <MainSider showMask={false} animate={false} />\n        <Layout>\n          <Content className='Options'>\n            <div className='Options-card'>\n              <button onClick={this.setHeader}>\n                <div className='Options-header'>\n                  <Icon type='camera' className='Options-header-edit-icon' />\n                  <img src={this.state.header || defaultHeader} alt='example' draggable='false' />\n                </div>\n              </button>\n              <button onClick={this.setAvatar}>\n                <div className='Options-avatar'>\n                  <Icon type='camera' className='Options-avatar-edit-icon' />\n                  <img src={this.state.avatar || defaultAvatar} alt={'profile'} draggable='false' />\n                </div>\n              </button>\n              <div className='Options-info'>\n                <Button\n                  type='default'\n                  style={{\n                    margin: '0 0 10px',\n                    backgroundColor: 'white',\n                    width: '10rem',\n                    padding: '0.5rem',\n                    display: 'inline-block',\n                    textAlign: 'center',\n                  }}\n                  onClick={(e) => {\n                    this.toggleExportModal();\n                    // this.props.generateInstanceExport();\n                  }}\n                >\n                  export all user data\n                </Button>\n                <br />\n                <Button\n                  type='default'\n                  style={{\n                    margin: '0 0 10px',\n                    backgroundColor: 'white',\n                    width: '10rem',\n                    padding: '0.5rem',\n                    display: 'inline-block',\n                    textAlign: 'center',\n                  }}\n                  onClick={(e) => this.togglePasswordModal()}\n                >\n                  change password\n                </Button>\n                <br />\n                <Button\n                  type='default'\n                  style={{\n                    margin: '0 0 10px',\n                    backgroundColor: 'white',\n                    width: '10rem',\n                    padding: '0.5rem',\n                    display: 'inline-block',\n                    textAlign: 'center',\n                  }}\n                  onClick={(e) => {\n                    window.location.replace(`/profile/${this.props.user.username}`);\n                    this.props.regenerateCollectionPreviews();\n                  }}\n                >\n                  regenerate previews\n                </Button>\n                <br />\n                <Button\n                  type='danger'\n                  style={{\n                    margin: '0 0 10px',\n                    backgroundColor: 'red',\n                    width: '10rem',\n                    padding: '0.5rem',\n                    display: 'inline-block',\n                    textAlign: 'center',\n                  }}\n                  onClick={(e) => this.toggleDeleteNodesModal()}\n                >\n                  delete all data\n                </Button>\n                <br />\n                {this.renderDisplayName()}\n                {this.renderUsername()}\n                {this.renderEmail()}\n                {this.renderBio()}\n                <Button\n                  type='default'\n                  style={{\n                    margin: '0 0 10px',\n                    backgroundColor: 'white',\n                    width: '4rem',\n                    display: 'inline-block',\n                    textAlign: 'center',\n                  }}\n                  onClick={(e) => this.props.history.push(`/profile/${this.props.user.username}`)}\n                >\n                  done\n                </Button>\n                <Modal\n                  title='change password'\n                  visible={this.state.showPasswordModal}\n                  className='password-modal'\n                  centered\n                  afterClose={() => document.body.style.removeProperty('overflow')}\n                  footer={null}\n                  closable={false}\n                  onCancel={this.togglePasswordModal}\n                >\n                  {this.passwordModal()}\n                </Modal>\n                <Modal\n                  title='delete all data'\n                  visible={this.state.showDeleteNodesModal}\n                  className='password-modal'\n                  centered\n                  afterClose={() => document.body.style.removeProperty('overflow')}\n                  footer={null}\n                  closable={false}\n                  onCancel={this.toggleDeleteNodesModal}\n                >\n                  {this.deleteAllNodesModal()}\n                </Modal>\n                <Modal\n                  title='Confirm Export'\n                  visible={this.state.showExportModal}\n                  className='delete-modal'\n                  centered\n                  onOk={this.exportHandler}\n                  okText='Generate'\n                  closable={false}\n                  afterClose={() => document.body.style.removeProperty('overflow')}\n                  onCancel={this.toggleExportModal}\n                >\n                  <p>\n                    Generate export package from <b>{this.props.user.displayName || 'untitled'}</b>?\n                    The export will contain the profile picture, header, bio, along with all this\n                    user's nodes & associations, and appear in your starboard when it is completed.\n                    This may take a few minutes.\n                  </p>\n                </Modal>\n              </div>\n            </div>\n            <NodeList />\n          </Content>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nconst validationSchema = Yup.object().shape({\n  oldPassword: Yup.string().required('old password is required'),\n  newPassword: Yup.string()\n    .min(5, 'Password has to be longer than 6 characters!')\n    .required('password is required'),\n  confirmNewPassword: Yup.string()\n    .required('please confirm new password')\n    .oneOf([Yup.ref('newPassword')], \"Your passwords don't match\"),\n});\n\nconst deleteNodesValidation = Yup.object().shape({\n  passwordValue: Yup.string()\n    .min(5, 'Password has to be longer than 6 characters!')\n    .required('password is required'),\n  confirmPassword: Yup.string()\n    .required('please confirm password')\n    .min(5, 'Password has to be longer than 6 characters!')\n    .oneOf([Yup.ref('passwordValue')], \"Your passwords don't match\"),\n});\n\nconst mapStateToProps = (state) => {\n  return { user: state.auth.user };\n};\n\nexport default connect(mapStateToProps, {\n  fetchUserByUsername,\n  updateUserInfo,\n  updateUserAvatar,\n  updateUserHeader,\n  updateUsername,\n  updateEmail,\n  clearAllNodes,\n  changePassword,\n  showComponent,\n  generateInstanceExport,\n  regenerateCollectionPreviews,\n  hideComponent,\n})(Options);\n","import React from 'react';\nimport { Layout } from 'antd';\n// custom code\nimport './css/Page.less';\n// destructure antd components\nconst { Content } = Layout;\n\nconst MainContent = (props) => {\n  return (\n    <Layout className='page-content'>\n      <Content style={{ backgroundColor: '#272727' }}>{props.children}</Content>\n    </Layout>\n  );\n};\n\nexport default MainContent;\n","import React, { Component } from 'react';\nimport { Layout } from 'antd';\n// custom code\nimport '../elements/css/Page.less';\nimport MainContent from '../elements/MainContent';\nimport IOBar from '../elements/IOBar';\nimport MainSider from '../elements/MainSider';\n\nclass Activity extends Component {\n  render() {\n    return (\n      <Layout className='page-layout'>\n        <IOBar />\n        <Layout>\n          <MainSider />\n          <MainContent />\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nexport default Activity;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\n// custom code\nimport '../node/NodeList.less';\nimport { searchNodes, fetchAssociations } from '../../../api/redux/actions';\nimport NodeCard from '../node/NodeCard';\nimport AssociationSider from './AssociationSider';\nimport Spinner from '../Spinner';\n\nclass AssociationList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      topOfPage: false,\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.infiniteScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.infiniteScroll);\n  }\n\n  infiniteScroll = (e) => {\n    var currentListLength = this.props.associations.length;\n    if (\n      this.endReached() &&\n      this.props.activeNode &&\n      currentListLength < this.props.totalNodes &&\n      !this.props.isFetching\n    ) {\n      this.setState({ topOfPage: false });\n      // fetch the next page\n      this.props.fetchAssociations({\n        page: this.props.page + 1,\n        nodeUUID: this.props.activeNode.uuid,\n      });\n    }\n  };\n\n  endReached = () => {\n    // window calculations to tell when the user scrolls to the bottom\n    const windowHeight =\n      'innerHeight' in window ? window.innerHeight : document.documentElement.offsetHeight;\n    const body = document.body;\n    const html = document.documentElement;\n    const docHeight = Math.max(\n      body.scrollHeight,\n      body.offsetHeight,\n      html.clientHeight,\n      html.scrollHeight,\n      html.offsetHeight\n    );\n    const windowBottom = windowHeight + window.pageYOffset;\n    // check if the top is reached\n    if (window.pageYOffset < 1 && !this.props.isFetching && !this.state.topOfPage) {\n      this.setState({ topOfPage: true });\n      // at the top of the page, reset the associationlist\n      this.props.fetchAssociations({\n        page: 1,\n        nodeUUID: this.props.activeNode.uuid,\n      });\n    }\n    // TODO: need to find a way to calculate the \"window top\" as well\n    // so i can decrement the page number when the user scrolls up\n    // this is necessary so redux doesn't have to store everything\n    return windowBottom >= docHeight - 733;\n  };\n\n  renderNodes = () => {\n    // go through the list of nodes and render them to the page\n    const associationList = this.props.associations;\n    // render the association list as cards\n    if (associationList !== null) {\n      return associationList.map((association) => {\n        return (\n          <NodeCard key={association.uuid} node={association} activeNode={this.props.activeNode} />\n        );\n      });\n    } else {\n      return <Spinner></Spinner>;\n    }\n  };\n\n  renderList = () => {\n    if (this.props.totalNodes > 0) {\n      return (\n        <ul style={{ backgroundColor: 'black' }} className='nodelist'>\n          {this.renderNodes()}\n        </ul>\n      );\n    } else if (this.props.totalNodes < 0) {\n      return <Fragment></Fragment>;\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        {this.renderList()}\n        <AssociationSider />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    associations: state.associations.associationList,\n    isFetching: state.associations.isFetching,\n    activeNode: state.nodes.activeNode,\n    page: state.associations.associationListPage,\n    totalNodes: state.associations.totalAssociationListItems,\n  };\n};\n\nexport default connect(mapStateToProps, { searchNodes, fetchAssociations })(AssociationList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ReactQuill, { Quill } from 'react-quill';\nimport Delta from 'quill-delta';\n// import BlotFormatter, { AlignAction, DeleteAction, ImageSpec } from 'quill-blot-formatter';\nimport { Layout, message } from 'antd';\nimport 'react-quill/dist/quill.snow.css';\nimport AssociationList from '../elements/association/AssociationList';\nimport AssociationSider from '../elements/association/AssociationSider';\nimport NodeCardHeaderFull from '../elements/node/NodeCardHeaderFull';\n// custom components\nimport Spinner from '../elements/Spinner';\n// redux handlers\nimport {\n  editTextNode,\n  processTextNode,\n  createFileNode,\n  setActiveNode,\n  updateNode,\n  fetchAssociations,\n  markNodeView,\n} from '../../api/redux/actions';\n// import custom editor css\nimport './QuillEditor.less';\n// destructure antd components\nconst { Content } = Layout;\n\n// register custom clipboard to handle bugs with the way the default one works\nconst Clipboard = Quill.import('modules/clipboard');\n// https://github.com/quilljs/quill/issues/1374\nclass CustomClipboard extends Clipboard {\n  onPaste(e) {\n    // get current page offset before paste\n    const top = window.pageYOffset;\n    const left = window.pageXOffset;\n\n    if (e.defaultPrevented || !this.quill.isEnabled()) return;\n    let range = this.quill.getSelection();\n    let delta = new Delta().retain(range.index);\n    this.container.style.top =\n      (\n        window.pageYOffset ||\n        document.documentElement.scrollTop ||\n        document.body.scrollTop ||\n        0\n      ).toString() + 'px';\n    this.container.focus();\n    setTimeout(() => {\n      this.quill.selection.update(Quill.sources.SILENT);\n      delta = delta.concat(this.convert()).delete(range.length);\n      this.quill.updateContents(delta, Quill.sources.USER);\n      this.quill.setSelection(delta.length() - range.length, Quill.sources.SILENT);\n      let bounds = this.quill.getBounds(delta.length() - range.length, Quill.sources.SILENT);\n      this.quill.scrollingContainer.scrollTop = bounds.top;\n\n      // scroll window to previous position after paste\n      window.scrollTo({ top, left });\n    }, 1);\n  }\n}\n\nQuill.register('modules/clipboard', CustomClipboard, true);\n\nclass QuillEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n      name: '',\n      expanded: localStorage.getItem('expanded'),\n      uuid: null,\n      error: null,\n      initializing: false,\n      readOnly: true,\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  ref = (quill) => {\n    this.quill = quill;\n  };\n\n  componentDidMount() {\n    document.body.style.overflow = 'auto';\n    document.body.style.height = '100%';\n    document.documentElement.style.height = '100%';\n    // prevent quill from jumping to top\n    document.querySelectorAll('.ql-picker').forEach((tool) => {\n      tool.addEventListener('mousedown', function (event) {\n        event.preventDefault();\n        event.stopPropagation();\n      });\n    });\n    // initialize\n    this.initializeFromUrlParams();\n  }\n\n  componentDidUpdate = async () => {\n    // prevent quill from jumping to top\n    document.querySelectorAll('.ql-picker').forEach((tool) => {\n      tool.addEventListener('mousedown', function (event) {\n        event.preventDefault();\n        event.stopPropagation();\n      });\n    });\n    // if the url has changed reload\n    var textUUID = this.props.match.params.uuid;\n    if (this.state.uuid !== textUUID && this.state.initializing === false) {\n      this.setState({\n        text: '',\n        name: '',\n        expanded: localStorage.getItem('expanded'),\n        uuid: null,\n        error: null,\n        initializing: true,\n        readOnly: true,\n      });\n      this.regeneratePreview();\n      this.initializeFromUrlParams();\n    }\n  };\n\n  // load the text node and set the local id state.\n  initializeFromUrlParams = async () => {\n    // scroll to top\n    window.scrollTo({ top: 0 });\n    // check url params\n    var textUUID = this.props.match.params.uuid;\n    // set the local state id equal to the value in the url\n    this.setState({ uuid: textUUID });\n    await this.props.setActiveNode(textUUID);\n    if (this.props.nodeData && this.props.nodeData.content) {\n      // if there is content set the local editor state equal to it\n      document.title = this.props.nodeData.name || 'Untitled';\n      var textValue = JSON.parse(this.props.nodeData.content);\n      this.setState({\n        text: textValue,\n        name: this.props.nodeData.name,\n        initializing: false,\n        readOnly: false,\n      });\n      this.props.markNodeView(this.props.nodeData);\n      // clear undo history to prevent undo from deleting everything\n      const editor = this.quill.getEditor();\n      editor.history.clear();\n      this.props.fetchAssociations({ nodeUUID: textUUID });\n    } else {\n      // if there's no content return an error message\n      this.setState({ error: true });\n      this.props.history.push('/');\n    }\n  };\n\n  // toggle fullscreen\n  expandHandler = () => {\n    if (this.state.expanded === null) {\n      this.setState({ expanded: 'expanded' });\n      localStorage.setItem('expanded', 'expanded');\n    } else {\n      this.setState({ expanded: null });\n      localStorage.removeItem('expanded');\n    }\n  };\n\n  // exit the editor and return to the home screen\n  exitHandler = async () => {\n    // generate the preview and do whatever processing will be\n    // necessary to process the node\n    // TODO: alter this so it stores a condensed version of the document instead of plain text\n    this.regeneratePreview();\n    this.props.history.push('/');\n  };\n\n  regeneratePreview = () => {\n    if (!this.state.deleting && !this.state.error && this.state.uuid !== null) {\n      const previewLength = 500;\n      const editor = this.quill.getEditor();\n      // process the text node\n      const content = editor.getText();\n      const preview = content.substring(0, previewLength);\n      // wait for preview to update before going back to homepage so it will be up to date\n      this.props.processTextNode({ uuid: this.state.uuid, preview });\n    }\n  };\n\n  // select an image.\n  selectLocalImage = () => {\n    const input = document.createElement('input');\n    input.setAttribute('type', 'file');\n    input.setAttribute('accept', ['image/gif', 'image/jpg', 'image/jpeg', 'image/png']);\n    input.click();\n\n    // Listen for uploading local image, then save to server\n    input.onchange = async () => {\n      const file = input.files[0];\n\n      // make sure file is an image\n      if (/^image\\//.test(file.type)) {\n        // save the image to the server\n        const url = await this.props.createFileNode(\n          file,\n          null,\n          JSON.stringify(this.props.nodeData)\n        );\n        // push image url to rich editor.\n        const range = this.quill.getEditor().getSelection();\n        this.quill.getEditor().insertEmbed(range.index, 'image', url);\n      } else {\n        message.error('The file must be an image', 1);\n      }\n    };\n  };\n\n  isImageUrl = (url) => {\n    var expression = /[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)?/gi;\n    var regex = new RegExp(expression);\n    return regex.test(url);\n  };\n\n  // handle pasting of images\n  // these could potentially be stored in a special database table? I'm not sure if\n  // externally linked images would be a node type? I don't see why not. i think they're urls\n  matcherImageHandler = (node, delta) => {\n    const url = node.src;\n    const newDelta = new Delta();\n    return newDelta.insert({ image: url });\n  };\n\n  modules = {\n    toolbar: {\n      container: [\n        [{ header: [1, 2, 3, 4, 5, false] }],\n        [{ font: [] }],\n        [{ indent: '-1' }, { indent: '+1' }],\n        ['bold', 'italic', 'underline', 'strike'],\n        [\n          {\n            color: [\n              '#fff',\n              '#bbbbbb',\n              '#272727',\n              '#a80b44',\n              '#ff0062',\n              '#df1f95',\n              '#9933ff',\n              '#7fba00',\n              '#45d458',\n              '#31d697',\n              '#00a4ef',\n              '#4178df',\n              '#000080',\n              '#56007a',\n              '#007c25',\n              '#e2d58a',\n              '#f8cc52',\n              '#fff12b',\n              '#ff4500',\n              '#f40000',\n              '#a0390d',\n            ],\n          },\n          { background: [] },\n        ],\n        [{ align: null }, { align: 'center' }, { align: 'right' }, { align: 'justify' }],\n        [{ list: 'ordered' }, { list: 'bullet' }],\n        [{ script: 'sub' }, { script: 'super' }], // superscript/subscript\n        ['code-block', 'blockquote'],\n        ['link', 'image', 'video'],\n        ['clean'],\n        ['expand', 'exit'],\n      ],\n      handlers: {\n        expand: this.expandHandler,\n        exit: this.exitHandler,\n        image: this.selectLocalImage,\n      },\n    },\n    clipboard: {\n      matchVisual: false,\n      matchers: [['img', this.matcherImageHandler]],\n    },\n    // blotFormatter: {\n    //   overlay: {\n    //     style: {\n    //       border: '2px solid #41e254',\n    //     },\n    //   },\n    // },\n  };\n\n  allowedFormats = [\n    'header',\n    'font',\n    'indent',\n    'bold',\n    'italic',\n    'underline',\n    'strike',\n    'color',\n    'background',\n    'align',\n    'list',\n    'script',\n    'code-block',\n    'blockquote',\n    'link',\n    'image',\n    'video',\n  ];\n\n  // render the main navbar\n  renderHeader = () => {\n    // Only render the header if the editor is  expanded\n    if (this.state.expanded === null && this.props.nodeData) {\n      return <NodeCardHeaderFull />;\n    }\n  };\n\n  handleChange(content, delta, source, editor) {\n    // Check to see if the document has changed before saving.\n    // TODO: i think this comparison is broken\n    if (editor.getContents() !== this.state.text && this.state.initializing === false) {\n      const fullDelta = JSON.stringify(editor.getContents());\n      this.props.editTextNode({\n        uuid: this.props.match.params.uuid,\n        content: fullDelta,\n      });\n      this.setState({ text: content });\n    }\n  }\n\n  componentWillUnmount() {\n    // clear styles\n    document.body.style.overflow = null;\n    document.body.style.height = null;\n    document.documentElement.style.overflow = null;\n    document.documentElement.style.height = null;\n    window.getSelection().removeAllRanges();\n  }\n\n  render() {\n    if (this.props.isLoading) {\n      return (\n        <Layout className='page-layout'>\n          <Layout>\n            <Layout>\n              {this.renderHeader()}\n              <Spinner />\n            </Layout>\n          </Layout>\n        </Layout>\n      );\n    }\n\n    return (\n      <Layout className='page-layout'>\n        <Content className={'text-editor-content ' + this.state.expanded}>\n          {this.renderHeader()}\n          <ReactQuill\n            value={this.state.text}\n            onChange={this.handleChange}\n            modules={this.modules}\n            ref={this.ref}\n            readOnly={this.state.readOnly}\n            formats={this.allowedFormats}\n            scrollingContainer={'body'}\n          ></ReactQuill>\n          <AssociationSider />\n          <AssociationList />\n        </Content>\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    nodeData: state.nodes.activeNode,\n    isLoading: state.nodes.isFetching,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  editTextNode,\n  processTextNode,\n  createFileNode,\n  updateNode,\n  setActiveNode,\n  fetchAssociations,\n  markNodeView,\n})(QuillEditor);\n","import {\n  FETCH_ASSOCIATION_LINK_LIST,\n  FETCH_ASSOCIATION_LINK_LIST_SUCCESS,\n  FETCH_ASSOCIATION_LINK_LIST_ERROR,\n  RESET_ASSOCIATION_LINK_LIST,\n  CREATE_ASSOCIATION_SUCCESS,\n  CREATE_ASSOCIATION,\n  CREATE_ASSOCIATION_ERROR,\n  FETCH_ASSOCIATIONS,\n  FETCH_ASSOCIATIONS_SUCCESS,\n  FETCH_ASSOCIATIONS_ERROR,\n  RESET_ASSOCIATIONS,\n  MARK_NODE_VIEW,\n  MARK_NODE_VIEW_ERROR,\n  MARK_NODE_VIEW_SUCCESS,\n  DELETE_ASSOCIATION_LINK,\n  DELETE_ASSOCIATION_LINK_ERROR,\n  DELETE_ASSOCIATION_LINK_SUCCESS,\n  REMOVE_FROM_ASSOCIATION_LIST,\n  SET_ACTIVE_NODE,\n  SET_ACTIVE_NODE_ERROR,\n  SET_ACTIVE_NODE_SUCCESS,\n} from '../actions/types';\n\nconst INITIAL_STATE = {\n  isFetching: null,\n  isSaving: null,\n  associationLinkList: [],\n  associationList: [],\n  totalLinkListItems: null,\n  totalAssociationListItems: null,\n  associationListPage: 1,\n  associationLinkListPage: 1,\n  activeNode: null,\n};\n\nlet newAssociationList;\n\n// reducer for content nodes\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case FETCH_ASSOCIATION_LINK_LIST:\n      return { ...state, isFetching: true };\n    case FETCH_ASSOCIATION_LINK_LIST_SUCCESS:\n      // // format the associations data and include new values\n      var associationLinkListArray = [...state.associationLinkList];\n      // update the association link list with the new values\n      Object.values(action.payload.associations).forEach((node) => {\n        if (!associationLinkListArray.some((item) => item.uuid === node.uuid)) {\n          associationLinkListArray.push(node);\n          if (associationLinkListArray.length > 100) {\n            // if the length gets too long free up some memory\n            // associationLinkListArray.splice(0, 2);\n            associationLinkListArray.splice(0, 30);\n            // associationLinkListArray.shift();\n          }\n        }\n      });\n      return {\n        ...state,\n        isFetching: null,\n        totalLinkListItems: action.payload.totalItems,\n        associationLinkList: associationLinkListArray,\n        associationLinkListPage: action.page || 1,\n      };\n    case FETCH_ASSOCIATION_LINK_LIST_ERROR:\n      return { ...state, isFetching: null };\n    case RESET_ASSOCIATION_LINK_LIST:\n      return { ...state, associationLinkList: [] };\n    case FETCH_ASSOCIATIONS:\n      return { ...state, isFetching: true };\n    case FETCH_ASSOCIATIONS_SUCCESS:\n      // format the associations data and include new values\n      var associationsArray = [...state.associationList];\n      // update the association link list with the new values\n      Object.values(action.payload.associations).forEach((node) => {\n        if (!associationsArray.some((item) => item.uuid === node.uuid)) {\n          associationsArray.push(node);\n          if (associationsArray.length > 100) {\n            // if the length gets too long free up some memory\n            // associationLinkListArray.splice(0, 2);\n            // picked a number that is divisible by both 2 and 3\n            associationsArray.splice(0, 30);\n            // associationLinkListArray.shift();\n          }\n        }\n      });\n      return {\n        ...state,\n        isFetching: null,\n        totalAssociationListItems: action.payload.totalItems,\n        associationList: associationsArray,\n        associationListPage: action.page || 1,\n      };\n    case FETCH_ASSOCIATIONS_ERROR:\n      return { ...state, isFetching: null };\n    case RESET_ASSOCIATIONS:\n      return { ...state, associationList: [] };\n    case CREATE_ASSOCIATION:\n      return { ...state, isSaving: true };\n    case CREATE_ASSOCIATION_SUCCESS:\n      // only add the node to the association list if one of the nodes is the activeNode\n      if (\n        state.activeNode &&\n        (action.associatedNode.uuid === state.activeNode.uuid ||\n          action.nodeUUID === state.activeNode.uuid)\n      ) {\n        newAssociationList = [action.associatedNode, ...state.associationList];\n      } else {\n        newAssociationList = [...state.associationList];\n      }\n      return {\n        ...state,\n        isFetching: null,\n        associationLinkList: [action.associatedNode, ...state.associationLinkList],\n        associationList: newAssociationList,\n        totalAssociationListItems: state.totalAssociationListItems + 1,\n      };\n    case CREATE_ASSOCIATION_ERROR:\n      return { ...state, isSaving: null };\n    case MARK_NODE_VIEW:\n      return { ...state, isSaving: true };\n    case MARK_NODE_VIEW_SUCCESS:\n      // only add back to list if the node was already in the list\n      var addBackToList = state.associationList.some((node) => node.uuid === action.node.uuid)\n        ? action.node\n        : false;\n      // use addBackToList to determine what should be returned\n      if (addBackToList) {\n        newAssociationList = [\n          state.associationList.some((node) => node.uuid === action.node.uuid) ? action.node : null,\n          ...state.associationList.filter((node) => node.uuid !== action.node.uuid),\n        ];\n      } else {\n        newAssociationList = [...state.associationList];\n      }\n      return {\n        ...state,\n        isFetching: null,\n        // move the viewed node to the front of the list\n        associationList: newAssociationList,\n      };\n    case MARK_NODE_VIEW_ERROR:\n      return { ...state, isSaving: null };\n    case SET_ACTIVE_NODE:\n      return { ...state, isFetching: true };\n    case SET_ACTIVE_NODE_SUCCESS:\n      return { ...state, isFetching: null, activeNode: action.payload.node };\n    case SET_ACTIVE_NODE_ERROR:\n      return { ...state, isFetching: null };\n    case DELETE_ASSOCIATION_LINK:\n      return { ...state, isSaving: true };\n    case DELETE_ASSOCIATION_LINK_SUCCESS:\n      // update total items\n      var newTotalLinkListItems = state.totalLinkListItems - 1;\n      return {\n        ...state,\n        isSaving: null,\n        associationLinkList: [\n          ...state.associationLinkList.filter((node) => node.uuid !== action.deletedUUID),\n        ],\n        totalLinkListItems: newTotalLinkListItems,\n      };\n    case DELETE_ASSOCIATION_LINK_ERROR:\n      return { ...state, isSaving: null };\n    case REMOVE_FROM_ASSOCIATION_LIST:\n      // update total items\n      var newTotalItems = state.totalAssociationListItems - 1;\n      return {\n        ...state,\n        isSaving: null,\n        associationList: [\n          ...state.associationList.filter((node) => node.uuid !== action.deletedUUID),\n        ],\n        totalAssociationListItems: newTotalItems,\n      };\n    default:\n      return state;\n  }\n};\n","import instance from '../../../api/instance';\nimport history from '../../../utils/history';\nimport {\n  EDIT_TEXT_NODE,\n  EDIT_TEXT_NODE_SUCCESS,\n  EDIT_TEXT_NODE_ERROR,\n  PROCESS_TEXT_NODE,\n  PROCESS_TEXT_NODE_SUCCESS,\n  PROCESS_TEXT_NODE_ERROR,\n} from './types';\nimport { message } from 'antd';\n\n// edit text node handler\nexport const editTextNode = (node) => async (dispatch) => {\n  dispatch({ type: EDIT_TEXT_NODE });\n  try {\n    await instance.patch('/text', {\n      uuid: node.uuid,\n      content: node.content,\n    });\n    dispatch({\n      type: EDIT_TEXT_NODE_SUCCESS,\n      node: node,\n    });\n  } catch (err) {\n    dispatch({ type: EDIT_TEXT_NODE_ERROR });\n    message.error('There was a problem saving your changes', 1);\n    history.push('/');\n  }\n};\n\n// final processing of text node after closing the editor\nexport const processTextNode = (node) => async (dispatch) => {\n  dispatch({ type: PROCESS_TEXT_NODE });\n  try {\n    await instance.patch('/text/process', { uuid: node.uuid, preview: node.preview });\n    dispatch({ type: PROCESS_TEXT_NODE_SUCCESS, node, preview: node.preview });\n  } catch (err) {\n    dispatch({ type: PROCESS_TEXT_NODE_ERROR });\n  }\n};\n","import React from 'react';\nimport { Layout } from 'antd';\n// custom code\nimport './css/Page.less';\n// destructure antd components\nconst { Footer } = Layout;\n\nconst MainFooter = () => {\n  return <Footer className='page-footer' />;\n};\n\nexport default MainFooter;\n","import React, { Component } from 'react';\nimport { Layout } from 'antd';\n// custom code\nimport '../elements/css/Page.less';\nimport MainContent from '../elements/MainContent';\nimport IOBar from '../elements/IOBar';\n// import MainSider from '../elements/MainSider';\nimport MainFooter from '../elements/MainFooter';\n\nclass Collections extends Component {\n  render() {\n    return (\n      <Layout className='page-layout'>\n        <IOBar />\n        <Layout>\n          <MainContent>Collections</MainContent>\n        </Layout>\n        <MainFooter />\n      </Layout>\n    );\n  }\n}\n\nexport default Collections;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Layout, Card } from 'antd';\n// custom code\nimport { createAccount } from '../../api/redux/actions';\nimport './css/Login.less';\n\n// destructure antd\nconst { Content, Footer } = Layout;\n\nclass CreateAccount extends Component {\n  componentDidMount() {\n    document.title = 'Create Account';\n  }\n\n  onSubmit = (values, { setSubmitting }) => {\n    setSubmitting(false);\n    this.props.createAccount(values);\n  };\n\n  render() {\n    return (\n      <Layout className='login-layout'>\n        <Content className='login-content'>\n          <Card className='login-card'>\n            <Formik\n              initialValues={{ email: '', password: '', confirmPassword: '' }}\n              validationSchema={validationSchema}\n              onSubmit={this.onSubmit}\n            >\n              {({ isSubmitting }) => (\n                <Form className='login-form'>\n                  <h1 className='login-title'>\n                    <span\n                      role='img'\n                      aria-label='jsx-a11y/accessible-emoji'\n                      style={{ paddingRight: '0.5rem' }}\n                    >\n                      ✨\n                    </span>\n                    create user\n                    <span\n                      role='img'\n                      aria-label='jsx-a11y/accessible-emoji'\n                      style={{ paddingLeft: '0.5rem' }}\n                    >\n                      ✨\n                    </span>\n                  </h1>\n                  <Field type='email' name='email' placeholder='email' className='login-field' />\n                  <ErrorMessage name='email' component='div' />\n                  <Field\n                    type='username'\n                    name='username'\n                    placeholder='username'\n                    className='login-field'\n                  />\n                  <ErrorMessage name='username' component='div' />\n                  <Field\n                    type='password'\n                    name='password'\n                    placeholder='password'\n                    className='login-field'\n                  />\n                  <ErrorMessage name='password' component='div' />\n                  <Field\n                    type='password'\n                    name='confirmPassword'\n                    placeholder='confirm password'\n                    className='login-field'\n                  />\n                  <ErrorMessage name='confirmPassword' component='div' />\n                  <button type='submit' disabled={isSubmitting} className='login-submit'>\n                    create account\n                  </button>\n                  <Link to='/' style={{ textAlign: 'center' }} className='login-signup'>\n                    back to login\n                  </Link>\n                </Form>\n              )}\n            </Formik>\n          </Card>\n        </Content>\n        <Footer />\n      </Layout>\n    );\n  }\n}\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().email('E-mail is not valid!').required('email is required'),\n  username: Yup.string().required('username is required'),\n  password: Yup.string()\n    .min(5, 'Password has to be longer than 6 characters!')\n    .required('password is required'),\n  confirmPassword: Yup.string()\n    .required('please confirm password')\n    .oneOf([Yup.ref('password')], \"Your passwords don't match\"),\n});\n\nconst mapStateToProps = (state) => {\n  return { isSignedIn: state.auth.isSignedIn };\n};\n\nexport default connect(mapStateToProps, { createAccount })(CreateAccount);\n","import React, { Fragment } from 'react';\n//custom components\nimport NodeRenderer from '../../../types/render/NodeRenderer';\nimport './NodeCardFull.less';\n\nconst NodeCardFull = (props) => {\n  const renderNodeCard = () => {\n    if (props.node) {\n      return <NodeRenderer type={props.node.type} element={'full'} node={props.node} />;\n    }\n  };\n\n  return <Fragment>{renderNodeCard()}</Fragment>;\n};\n\nexport default NodeCardFull;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Layout } from 'antd';\nimport {\n  setActiveNode,\n  clearActiveNode,\n  fetchAssociations,\n  markNodeView,\n  updateNode,\n} from '../../api/redux/actions';\nimport MainSider from '../elements/MainSider';\nimport NodeCardFull from '../elements/node/NodeCardFull';\nimport Spinner from '../elements/Spinner';\nimport IOBar from '../elements/IOBar';\nimport AssociationList from '../elements/association/AssociationList';\nimport { message } from 'antd';\nconst { Content } = Layout;\n\nclass AssociationBrowser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialized: false,\n      uuid: null,\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.initialized) {\n      this.initializeFromUrlParams();\n    }\n  }\n\n  componentDidUpdate() {\n    var uuid = this.props.match.params.uuid;\n    // re-initialize if the URL changes\n    if (this.state.initialized && this.state.uuid !== uuid) {\n      this.setState({ initialized: false });\n      this.initializeFromUrlParams();\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.clearActiveNode();\n  }\n\n  // intialize the association page\n  initializeFromUrlParams = async () => {\n    var uuid = this.props.match.params.uuid;\n    // window.scrollTo({ top: 0, behavior: 'smooth' });\n    window.scrollTo({ top: 0 });\n    await this.props.setActiveNode(uuid);\n    if (this.props.activeNode !== null) {\n      this.props.markNodeView(this.props.activeNode);\n    }\n    // fetch the user info from the server\n    await this.props.fetchAssociations({ nodeUUID: uuid });\n    if (this.props.associations !== null && this.props.activeNode !== null) {\n      this.setState({\n        initialized: true,\n        uuid: uuid,\n      });\n      // update collection preview if necessary\n      if (this.props.activeNode.type && this.props.activeNode.type === 'collection') {\n        this.regenerateCollectionPreview(this.props.activeNode, this.props.associations);\n      }\n      document.title = this.props.activeNode.name;\n    } else {\n      message.error('there was a problem loading the associations');\n      this.props.history.push('/');\n    }\n  };\n\n  regenerateCollectionPreview = async (collectionNode, associationList) => {\n    try {\n      if (collectionNode && associationList) {\n        var i = 0;\n        var node;\n        var preview = [];\n        // get the first 4 non-collection non-user associated nodes and add them to the new preview\n        while (i < associationList.length && preview.length < 4) {\n          node = associationList[i];\n          if (node.type !== 'collection' && node.type !== 'user') {\n            preview.push({\n              type: node.type,\n              preview: node.preview,\n            });\n          }\n          i++;\n        }\n        this.props.updateNode({ uuid: collectionNode.uuid, preview: JSON.stringify(preview) });\n      }\n    } catch (err) {\n      this.props.history.push('/');\n    }\n  };\n\n  renderNode = () => {\n    if (this.state.uuid !== null && this.state.uuid === this.props.activeNode.uuid) {\n      return <NodeCardFull node={this.props.activeNode} />;\n    } else {\n      return <Spinner></Spinner>;\n    }\n  };\n\n  renderMainSider = () => {\n    if (this.props.mainSider) {\n      return <MainSider />;\n    }\n  };\n\n  render() {\n    return (\n      <Layout className='page-layout'>\n        {this.renderMainSider()}\n        <Layout>\n          <Content\n            style={{\n              paddingTop: '0',\n              backgroundColor: 'black',\n              minHeight: '100vh',\n            }}\n          >\n            <IOBar />\n            <div className='list-container'>{this.renderNode()}</div>\n            <AssociationList />\n          </Content>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    associations: state.associations.associationList,\n    isLoading: state.nodes.isFetching,\n    activeNode: state.nodes.activeNode,\n    mainSider: state.components.componentList['mainSider'],\n    isDeleting: state.nodes.isDeleting,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setActiveNode,\n  clearActiveNode,\n  fetchAssociations,\n  markNodeView,\n  updateNode,\n})(AssociationBrowser);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  fetchNodes,\n  fetchAssociations,\n  showComponent,\n  fetchGraphData,\n  setActiveNode,\n} from '../../api/redux/actions';\nimport { Layout, message } from 'antd';\nimport { select, selectAll } from 'd3-selection';\nimport { drag } from 'd3-drag';\nimport { forceSimulation, forceLink, forceManyBody, forceCenter, forceX, forceY } from 'd3-force';\nimport { zoom, zoomIdentity } from 'd3-zoom';\n//custom components\nimport './css/GraphBrowser.less';\nimport MainSider from '../elements/MainSider';\nimport AssociationSider from '../elements/association/AssociationSider';\nimport AssociationList from '../elements/association/AssociationList';\nimport IOBar from '../elements/IOBar';\n// destructure antd layout\nconst { Content } = Layout;\n\nclass GraphBrowser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialized: false,\n      uuid: null,\n    };\n  }\n\n  componentDidMount() {\n    document.title = 'constellation';\n    if (!this.state.initialized) {\n      this.initializeFromUrlParams();\n    }\n  }\n\n  componentDidUpdate() {\n    var uuid = this.props.match.params.uuid;\n    // re-initialize if the URL changes\n    if (this.state.initialized && this.state.uuid !== uuid) {\n      this.setState({ initialized: false });\n      this.initializeFromUrlParams();\n    }\n  }\n\n  // intialize the association page\n  initializeFromUrlParams = async () => {\n    var uuid = this.props.match.params.uuid;\n    // fetch the graph data\n    await this.props.fetchGraphData({\n      anchorNode: uuid,\n      type: this.props.query.type,\n      searchQuery: this.props.query.searchQuery,\n    });\n    // if all that was successful, finish initialization\n    if (this.props.graphData !== null) {\n      this.setState({\n        initialized: true,\n        uuid: uuid,\n      });\n      // render graph\n      this.renderGraph();\n      if (uuid) {\n        await this.props.setActiveNode(uuid);\n        await this.props.fetchAssociations({ nodeUUID: uuid });\n      }\n    } else {\n      message.error('there was a problem loading the data');\n      this.props.history.push('/');\n    }\n  };\n\n  renderMainSider = () => {\n    if (this.props.mainSider) {\n      return <MainSider />;\n    }\n  };\n\n  // renderBackgroundImage = () => {\n  //   if (this.props.graphData) {\n  //     const graphData = this.props.graphData.nodes;\n  //     for (let item of graphData) {\n  //       if (item.type === 'image') {\n  //         // const imageUrl = item.path || item.preview;\n  //         // return { backgroundImage: `url(${imageUrl})` };\n  //         return null;\n  //       }\n  //     }\n  //     // return { backgroundImage: `url(${})` };\n  //     return null;\n  //   }\n  // };\n\n  renderAssociationSider = () => {\n    if (this.props.associationSider) {\n      return <AssociationSider />;\n    }\n  };\n\n  renderAssociationList = () => {\n    if (this.props.associations && this.props.associations.length > 0 && this.props.activeNode) {\n      // let graphData = this.props.graphData;\n      // return (\n      //   <div>\n      //   <NodeCardFull node={this.props.graphData.nodes[0]} />\n      //   <div>\n      // )\n      return <AssociationList />;\n    }\n  };\n\n  renderGraph = async () => {\n    // node data\n    const nodeData = this.props.graphData.nodes;\n    // link data\n    const linkData = this.props.graphData.associations;\n    // width and height\n    const height = window.innerHeight;\n    const width = window.innerWidth;\n    const nodeScale = 17;\n\n    // simulation\n    const simulation = forceSimulation(nodeData)\n      .force(\n        'link',\n        forceLink(linkData)\n          // .distance(0.7)\n          .id((d) => {\n            return d.id;\n          })\n      )\n      .force('charge', forceManyBody().strength(-700000 / nodeData.length))\n      .force('x', forceX())\n      .force('y', forceY())\n      .force('center', forceCenter());\n    // initial zoom\n    // var initialZoom = zoomIdentity.scale(0.55).translate(0, -15);\n    var initialZoom = zoomIdentity.scale(0.17).translate(0, -23);\n    const zoomData = zoom().scaleExtent([0.1, 1.7]).on('zoom', zoomed);\n\n    const svg = select(this.node)\n      .append('svg')\n      .attr('class', 'graph-svg')\n      .attr('viewBox', [-width / 2, -height / 2, width, height]);\n\n    const g = svg.append('g');\n\n    const link = g\n      .append('g')\n      .attr('stroke', 'white')\n      .attr('stroke-opacity', 0.7)\n      .selectAll('line')\n      .data(linkData)\n      .join('line')\n      .attr('class', 'graph-link')\n      .attr('stroke-width', (d) => Math.sqrt(d.value));\n\n    const node = g\n      .append('g')\n      .selectAll('circle')\n      .data(nodeData)\n      .join('g')\n      .call(this.drag(simulation))\n      .append('circle')\n      .on('contextmenu', (e, d) => {\n        e.preventDefault();\n        window.location.replace('/graph/' + d.uuid);\n      })\n      // .on('click', (e, d) => {\n      //   e.preventDefault();\n      //   this.props.showComponent('associationSider', d);\n      // })\n      .on('dblclick', (e, d) => {\n        e.preventDefault();\n        if (d.type === 'text') {\n          window.location.replace('/edit/text/' + d.uuid);\n        } else if (d.type === 'user') {\n          window.location.replace(`/profile/${this.props.user.username}`);\n        } else {\n          window.location.replace('/associations/' + d.uuid);\n        }\n      })\n      .attr('r', nodeScale)\n      // .attr('cursor', 'grab')\n      .attr('cursor', 'none')\n      .attr('fill', '#16e998')\n      .attr('class', 'graph-node');\n\n    const text = selectAll('g g g')\n      .append('text')\n      .text((d) => d.name.substring(0, 100))\n      .attr('font-size', '0.8rem')\n      .attr('cursor', 'grab')\n      // .attr('cursor', 'none')\n      // .attr('stroke', 'white')\n      // .attr('stroke-width', 0.1)\n      .attr('class', 'graph-text');\n    // .call(this.drag(simulation));\n\n    svg.call(zoomData).call(zoomData.transform, initialZoom);\n\n    function zoomed({ transform }) {\n      g.attr('transform', transform);\n    }\n\n    simulation.on('tick', () => {\n      // update link location values\n      link\n        .attr('x1', (d) => d.source.x)\n        .attr('y1', (d) => d.source.y)\n        .attr('x2', (d) => d.target.x)\n        .attr('y2', (d) => d.target.y);\n      // update node location values\n      node.attr('cx', (d) => d.x).attr('cy', (d) => d.y);\n      // update text location values\n      text.attr('x', (d) => d.x + nodeScale).attr('y', (d) => d.y - nodeScale);\n    });\n\n    return svg.node();\n  };\n\n  drag = (simulation) => {\n    function dragstarted(event, d) {\n      // move the dragged item to the top\n      var sel = select(this);\n      sel.raise();\n      // handle updating of coords\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n\n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n\n    function dragended(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n\n    return drag().on('start', dragstarted).on('drag', dragged).on('end', dragended);\n  };\n\n  render() {\n    return (\n      <Layout className='page-layout'>\n        {this.renderMainSider()}\n        {this.renderAssociationSider()}\n        <Layout>\n          <Content\n            style={{\n              paddingTop: '0',\n            }}\n          >\n            {/*  <IOBar />*/}\n            <IOBar />\n            <div\n              className='graph-container'\n              // style={this.renderBackgroundImage()}\n              ref={(node) => (this.node = node)}\n            ></div>\n            {this.renderAssociationList()}\n          </Content>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    associations: state.associations.associationList,\n    user: state.auth.user,\n    activeNode: state.nodes.activeNode,\n    graphData: state.graph.graphData,\n    loading: state.graph.isFetching,\n    associationSider: state.components.componentList['associationSider'],\n    mainSider: state.components.componentList['mainSider'],\n    nodeList: state.nodes.nodeList,\n    query: state.nodes.query,\n    isFetching: state.nodes.isFetching,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchNodes,\n  showComponent,\n  fetchGraphData,\n  fetchAssociations,\n  setActiveNode,\n})(GraphBrowser);\n","import instance from '../../../api/instance';\nimport history from '../../../utils/history';\nimport {\n  FETCH_GRAPH_DATA,\n  FETCH_GRAPH_DATA_ERROR,\n  FETCH_GRAPH_DATA_SUCCESS,\n  RESET_APP,\n} from './types';\nimport { message } from 'antd';\n\n// fetch a list of nodes\nexport const fetchGraphData = (query) => async (dispatch) => {\n  try {\n    dispatch({ type: FETCH_GRAPH_DATA });\n    const response = await instance.get('/node/graph', {\n      params: { anchorNode: query.anchorNode, type: query.type, searchQuery: query.searchQuery },\n    });\n    dispatch({ type: FETCH_GRAPH_DATA_SUCCESS, payload: response.data, query });\n  } catch (err) {\n    dispatch({ type: FETCH_GRAPH_DATA_ERROR });\n    dispatch({ type: RESET_APP });\n    message.error('Could not fetch items', 1);\n    history.push('/');\n  }\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Layout, Icon } from 'antd';\n// custom code\nimport './css/Help.less';\nimport MainSider from '../elements/MainSider';\nimport IOBar from '../elements/IOBar';\nimport defaultHeader from '../../resources/help.png';\n\nconst { Content } = Layout;\n\nclass Help extends Component {\n  componentDidMount() {\n    document.title = 'Help';\n    // temporary fix to undo whatever is setting overflow hidden on-login\n    document.body.style.removeProperty('overflow');\n  }\n\n  renderMainSider = () => {\n    if (this.props.mainSider) {\n      return <MainSider />;\n    }\n  };\n\n  render() {\n    return (\n      <Layout className='page-layout'>\n        <Layout>\n          {this.renderMainSider()}\n          <Content\n            style={{\n              minHeight: '100vh',\n              backgroundColor: '#e0dcc7',\n              textAlign: 'left',\n            }}\n          >\n            <div style={{ position: 'fixed', width: '100%' }}>\n              <IOBar />\n            </div>\n            <img style={{ width: '100%' }} src={defaultHeader} alt='stars'></img>\n            <div className='help-container' style={{ padding: '1.3rem 17rem 1rem' }}>\n              <h2 style={{ fontSize: '2rem' }}>Help Page</h2>\n              <p>\n                Hello there! Welcome to the help page! This is where you can get the help you need,\n                so you can rest easy. Allow me to explain exactly what is going on here. First\n                things first, you are on the help page! It's a nice place to hang out. There's all\n                kinds of wonderful things you learn while you are here!\n              </p>\n              <h2>What is Synthona?</h2>\n              <p>\n                Synthona allows you to create, explore, and share networks made out of content! That\n                might sound confusing but it's really not so bad once you get familiar.{' '}\n                <b>\n                  The good news is that you cannot really mess anything up, Synthona will not make\n                  any changes to any content outside itself{' '}\n                </b>\n                (at least not in this version). Even if you upload a file, Synthona will only make a\n                copy, the original file will still exist on your computer. The worst thing you can\n                do is delete something from Synthona, but that action is clearly marked by a garbage\n                can.\n              </p>\n              <h2>Keyboard Shortcuts</h2>\n              <p>\n                For now the main keyboard shortcuts, which currently only work in the core app (not\n                in tabs you open in your web browser) are as follows:\n              </p>\n              <ul>\n                <li>CMD/CTRL+G - jump to the graph constellation browser</li>\n                <li>CMD/CTRL+H - jump to the home page</li>\n                <li>CMD/CTRL+J - jump to starboard</li>\n                <li>CMD/CTRL+OPTION/ALT+1 - save the current node to the quick menu</li>\n                <li>CMD/CTRL+1 - jump to #1 on the quick menu if you have saved something there</li>\n                <li>Quick-Menu - the quick menu will also work with the number keys 1-9</li>\n              </ul>\n              <h2>What are do all these icons mean?</h2>\n              <p>\n                If you hover over most icons for a couple of seconds a tooltip should show up which\n                explains what the button does, but I've written out a guide here as well so you can\n                be confident of what your clicks will accomplish.\n              </p>\n              <h3>\n                Associations <Icon type={'branches'} theme='outlined' />\n              </h3>\n              <p>\n                This is the associations icon. It mostly appears on node cards in the node explorer.\n                Clicking it will typically bring up a menu which lists the associations for a given\n                node and allows you to add new ones.\n              </p>\n              <Icon type={'branches'} theme='outlined' className='help-icon' />\n              <h3>\n                Light Bulb <Icon type={'bulb'} theme='outlined' />\n              </h3>\n              <p>\n                The light bulb is the universal symbol for having a good idea, which is why it was\n                chosen as the \"good idea\" button. Whenever you click the light bulb icon the node in\n                question will be marked as viewed, bumped, jumped to the top of the page. You can\n                click this button as much as you want and nothing bad will happen!\n              </p>\n              <Icon type={'bulb'} theme='outlined' className='help-icon' />\n              <h3>\n                Graph Icon <Icon type={'deployment-unit'} theme='outlined' />\n              </h3>\n              <p>\n                This icon will take you to the graph constellation browser! I'll explain more about\n                that a little later.\n              </p>\n              <Icon type={'deployment-unit'} theme='outlined' className='help-icon' />\n              <h3>\n                Star <Icon type={'star'} theme='outlined' />\n              </h3>\n              <p>\n                This button will allow you to pin a node to your starboard! The Starboard is a sort\n                of top-level root page, but you can think of it as one of those tackboards you would\n                use pushpins on in real life to hang sticky notes on! Store stuff on the starboard\n                for a short time or a long time, it's up to you!\n              </p>\n              <Icon type={'star'} theme='outlined' className='help-icon' />\n              <h3>\n                Open In Browser <Icon type={'global'} theme='outlined' />\n              </h3>\n              <p>\n                This button will open the active node in your default web browser! This is useful\n                for various reasons, like if you want to run the application in your browser as a\n                tab, if you wanted to save images or files into your downloads folder, or as a way\n                to manage additional synthona tabs.\n              </p>\n              <Icon type={'global'} theme='outlined' className='help-icon' />\n              <h3>\n                Visible <Icon type={'eye'} theme='outlined' />\n              </h3>\n              <p>\n                Clicking this icon allows you to toggle whether a node is visible on the homepage or\n                not. Nodes which are hidden from the homepage will only be accessible through their\n                associations. This allows you to hide content behind other content.\n              </p>\n              <Icon type={'eye'} theme='outlined' className='help-icon' />\n              <h3>\n                Searchable <Icon type={'search'} theme='outlined' />\n              </h3>\n              <p>\n                Clicking this icon allows you to toggle whether a node will appear in a search or\n                not.\n              </p>\n              <Icon type={'search'} theme='outlined' className='help-icon' />\n              <h3>\n                Delete <Icon type={'delete'} theme='outlined' />\n              </h3>\n              <p>\n                This is the garbage can, it lets you put delete nodes from the system! Not bad,\n                pretty good!\n              </p>\n              <Icon type={'delete'} theme='outlined' className='help-icon' />\n              <h3>\n                Synthona Packages <Icon type={'gift'} theme='outlined' />\n              </h3>\n              <p>\n                Synthona packages allow you to share nodes and their associations between computers\n                as <i>.synth</i> files, which can be re-imported by anyone into any synthona\n                instance on any computer. These files are represented within synthona by this{' '}\n                <Icon type={'gift'} theme='outlined' /> icon. If you click this icon on a\n                non-package node in your system, it will generate an export package based on the\n                node you clicked it from. Synthona packages contain the node in question, all the\n                nodes associated with it, and their associations with each other. More specificity\n                in exports is a planned feature for the future as well.\n              </p>\n              <p>\n                If you have created or imported a Synthona package into your Synthona instance, you\n                will see this icon on the package page. Clicking it will \"unpack\" the package,\n                importing all the nodes and associations it contains into your profile. Once you\n                click this, it will be replaced by an \"undo\" <Icon type={'undo'} theme='outlined' />{' '}\n                icon which will allow you to \"repack\" the package. The undo option will delete all\n                the nodes which unpacking created, which makes unpacking a reversible operation. Be\n                warned however! If you have made changes to any of the nodes you imported they will\n                still be removed (at least that's how it works right now).\n              </p>\n              <p>\n                Sythona packages are great for all kinds of things...sharing your thoughts with\n                others, sharing files for a project, sharing photo albums, and more! If you're a\n                developer, you may also be interested to know that these exports are largely just\n                JSON which means you could potentially integrate them with other software.\n              </p>\n              <Icon type={'gift'} theme='outlined' className='help-icon' />\n              <h2>What should I do first?</h2>\n              <p>\n                You can start by uploading or creating some content, you do this by clicking the\n                blue button at the top of the page. This will transform it into a plus sign and put\n                the IO bar into <i>create-mode</i>.\n              </p>\n              <p>\n                From there, to the left of the input field there is a dropdown menu which contains\n                some content types. You can select one of those which will prepare the IO bar to\n                create that content. For most content types you can type a name for the node you're\n                about to create into the input field and it will automatically be added to the\n                generated node. The exception is urls which don't allow a name on creation since you\n                have to paste the url into that space instead. To finish creating a node, hit enter\n                in the input bar or click the button to the right side of the text input. That's it!\n                Now it's in the system.\n              </p>\n              <h2>What are nodes and associations?</h2>\n              <p>\n                Synthona is premised on the idea that all content is a <i>node</i> which can be\n                associated, connected, related, to any other piece of content. A connection between\n                any two pieces of content is called an <i>association</i>. If you understand these\n                two ideas, you understand Synthona! That's all there is to it, the rest is just\n                building on these two assumptions.\n              </p>\n              <h2>The Graph Constellation Browser</h2>\n              <p>\n                The Graph Browser, sometimes known as the Constellation browser, is one way to\n                browse through your nodes and associations! You can get there clicking the \"graph\"\n                icon <Icon type={'deployment-unit'} theme='outlined' /> on any node, on the IO bar,\n                or by clicking the \"graph\" option from the main menu. If you click it from a\n                specific node, you'll see the associations for that node and their relationships to\n                each other displayed. Accessing it from the IO bar or options menu will instead show\n                a list of the most recently accessed nodes! Once you are in the constellation\n                browser you can zoom in and out by scrolling up and down, jump to a node by double\n                clicking it, or jump through the graph browser by right clicking on a node.\n              </p>\n              <h2>How do I edit the name of a node?</h2>\n              <p>If you double click the title it should turn into an editable text field.</p>\n              <h2>\n                Help! I hid a node from both search and the explore page. How do I find it again?\n              </h2>\n              <p>\n                No problem! The way to find your lost node is to set another node, preferably a\n                well-connected one, temporarily to <i>hidden from explore</i> by clicking the{' '}\n                <Icon type={'eye'} theme='outlined' /> icon so it toggles to{' '}\n                <Icon type={'eye-invisible'} theme='outlined' />. Now, from that well-connected node\n                which you've hidden from the explore page, go to add a new association. It is\n                possible to associate hidden nodes to other hidden nodes, and so you should be able\n                to associate to it and find it again that way.\n              </p>\n              <h2>Is my data being backed up anywhere?</h2>\n              <p>\n                Only in the app database which is stored on your computer. If you want to save a\n                copy of your data elsewhere, you can generate manual backups as often as you want\n                through the export functionality. If you go to the options menu there is a button\n                labeled \"export all user data\". This will put all your nodes and associations into a\n                .synth file which will be added to your homepage. You can then click through to\n                download that file. That .synth file containing all your data can be imported back\n                in later, onto a version on another computer, or stored as a backup. Also, although\n                it's not really designed for this, you could break the .synth file open to get at\n                the files themselves. If you need to get at the specific files in there, you can\n                change the file extension from .synth to .zip which should allow your computer to\n                de-compress the archive although some of the files might have...computery...names.\n              </p>\n              <h2>Where is the data stored on my computer?</h2>\n              <p>\n                Your data is stored in your user data folder. This will be different depending on\n                your operating system, but you can see the specific folder by click 'advanced' in\n                the top menu bar and 'view config file'. The folder containing the config file also\n                contains some core app files along with the core 'data' folder and sqlite database.\n                You shouldn't have to ever mess with any of this unless you are a developer or you\n                really know what you are doing, as it is possible to break the app if you start to\n                mess with stuff in there!\n              </p>\n              <h2>What if I have an idea for a change to the app?</h2>\n              <p>\n                Synthona is an open-source project and is licensed under GPLv3 which means if you\n                want to take things into your own hands you're free to fork the project, but I am\n                also more than willing to hear out your concerns and try to implement changes myself\n                if I can or accept pull requests if they fit the project roadmap! There is a very\n                clear vision for where the app is headed, but suggestions are still welcome. The\n                goal here is to make something which benefits as many people as possible. If you're\n                interested in taking a look at the code feel free to check out the project on{' '}\n                <a href='https://www.github.com/synthona' target='_blank' rel='noopener noreferrer'>\n                  github\n                </a>\n                !\n              </p>\n              <h2>I want to financially support development, what should I do?</h2>\n              <p>\n                There is a{' '}\n                <a\n                  href='https://www.patreon.com/synthona'\n                  target='_blank'\n                  rel='noopener noreferrer'\n                >\n                  patreon\n                </a>{' '}\n                and I may add more options in the future, for example I am considering creating an\n                account on{' '}\n                <a href='https://opencollective.com/' target='_blank' rel='noopener noreferrer'>\n                  open-collective\n                </a>{' '}\n                or similar. I have a lot of ideas for improvements to this application including\n                things like P2P features, automatic updates, theme support, plugin support, a lot of\n                other node types, maps, web-features, analytics, social features, 3D features, LAN\n                connections between instances, and so much more, but I can't afford to work on\n                features full time at the moment. This project was originally designed to function\n                as a distrubuted P2P social network and that is not really off the table, but there\n                is still a lot of work to be done before that is possible and funding would allow me\n                to work on that and other features including a phone application. These things are\n                still in the works of course, it's just that with funding we could speed things\n                along!\n              </p>\n              <h2>I have a bug report, feature request, or other inquiry?</h2>\n              <p>\n                Please send an email to{' '}\n                <a\n                  href='mailto:synthona@gmail.com'\n                  target='_blank'\n                  rel='noopener noreferrer'\n                  type='email'\n                >\n                  synthona@gmail.com\n                </a>{' '}\n                or reach out on{' '}\n                <a\n                  href='https://www.twitter.com/synthona'\n                  target='_blank'\n                  rel='noopener noreferrer'\n                >\n                  twitter\n                </a>{' '}\n                and we will get things sorted out as soon as possible!\n              </p>\n            </div>\n          </Content>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isSignedIn: state.auth.isSignedIn,\n    mainSider: state.components.componentList['mainSider'],\n  };\n};\n\nexport default connect(mapStateToProps)(Help);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\n// custom code\nimport './NodeList.less';\nimport { fetchNodes } from '../../../api/redux/actions';\nimport NodeCard from './NodeCard';\nimport AssociationSider from '../association/AssociationSider';\nimport Spinner from '../Spinner';\n\nclass PinList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      topOfPage: false,\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchNodes({\n      page: 1,\n      type: this.props.query.type,\n      searchQuery: this.props.query.searchQuery,\n      pinned: true,\n    });\n    window.addEventListener('scroll', this.infiniteScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.infiniteScroll);\n  }\n\n  infiniteScroll = (e) => {\n    if (this.endReached() && !this.props.isFetching) {\n      this.setState({ topOfPage: false });\n      // fetch the next page\n      this.props.fetchNodes({\n        page: this.props.query.page + 1,\n        type: this.props.query.type,\n        searchQuery: this.props.query.searchQuery,\n        pinned: true,\n      });\n    }\n  };\n\n  endReached = () => {\n    // window calculations to tell when the user scrolls to the bottom\n    const windowHeight =\n      'innerHeight' in window ? window.innerHeight : document.documentElement.offsetHeight;\n    const body = document.body;\n    const html = document.documentElement;\n    const docHeight = Math.max(\n      body.scrollHeight,\n      body.offsetHeight,\n      html.clientHeight,\n      html.scrollHeight,\n      html.offsetHeight\n    );\n    const windowBottom = windowHeight + window.pageYOffset;\n    // check if the top is reached\n    if (window.pageYOffset < 1 && !this.props.isFetching && !this.state.topOfPage) {\n      this.setState({ topOfPage: true });\n      // at the top of the page, reset the nodelist\n      this.props.fetchNodes({\n        page: 1,\n        type: this.props.query.type,\n        searchQuery: this.props.query.searchQuery,\n        pinned: true,\n      });\n    }\n    // if it's not the top of the page go ahead and fetch more\n    return windowBottom >= docHeight - 733;\n  };\n\n  renderPinList = () => {\n    // go through the list of nodes and render them to the page\n    const nodeList = this.props.nodes;\n    // if there are nodes go ahead and render\n    if (nodeList !== null) {\n      return nodeList.map((node) => {\n        if (node.uuid) {\n          // return <NodeCardFull key={node.uuid} node={node} />\n          return <NodeCard key={node.uuid} node={node} />;\n        } else {\n          return <Fragment></Fragment>;\n        }\n      });\n    } else {\n      return <Spinner></Spinner>;\n    }\n  };\n\n  render() {\n    return (\n      <div className='nodelist-container'>\n        <ul className='nodelist'>{this.renderPinList()}</ul>\n        <AssociationSider />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    nodes: state.nodes.nodeList,\n    query: state.nodes.query,\n    totalNodes: state.nodes.totalItems,\n    isFetching: state.nodes.isFetching,\n  };\n};\n\nexport default connect(mapStateToProps, { fetchNodes })(PinList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Layout, Button, Select, Icon } from 'antd';\n// custom code\nimport './css/IOBar.less';\nimport {\n  signOut,\n  createFileNode,\n  createUrlNode,\n  createNode,\n  searchNodes,\n  showComponent,\n  hideComponent,\n} from '../../api/redux/actions';\n// destructure antd components\nconst { Header } = Layout;\nconst { Option } = Select;\n\nclass PinHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: this.props.query.searchQuery || '',\n      nodeTypes: this.props.query.type || 'all',\n    };\n  }\n\n  toggleMainSider = async () => {\n    // await this.props.showComponent('mainSider');\n    if (this.props.mainSider) {\n      this.props.hideComponent('mainSider');\n    } else {\n      this.props.showComponent('mainSider');\n    }\n  };\n\n  // handle text input\n  commandHandler = () => {\n    return this.props.searchNodes({\n      searchQuery: this.state.input,\n      type: this.state.nodeTypes,\n    });\n  };\n\n  // include an \"all\" option for queries\n  renderSelectBefore = () => {\n    return (\n      <Select\n        showSearch\n        showArrow={false}\n        value={this.state.nodeTypes}\n        onChange={(value) => this.setState({ nodeTypes: value })}\n      >\n        <Option value='all'>all</Option>\n        <Option value='url'>urls</Option>\n        <Option value='text'>text</Option>\n        <Option value='file'>file</Option>\n        <Option value='image'>images</Option>\n        <Option value='collection'>collections</Option>\n      </Select>\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <Header className='page-header'>\n          <ul\n            className='nav-list'\n            style={{ width: 'auto', justifyContent: 'left', marginLeft: '1.1rem' }}\n          >\n            <li className='nav-item io-sider-button' style={{ marginRight: '0' }}>\n              <Button type='default' shape='circle' onClick={(e) => this.toggleMainSider()}>\n                <Icon type={'bars'} theme='outlined' />\n              </Button>\n            </li>\n            <li className='nav-item io-sider-button' style={{ marginRight: '0.5rem' }}>\n              <Link type='default' to={`/graph`}>\n                <Icon\n                  type={'deployment-unit'}\n                  theme='outlined'\n                  // style={{ color: '#ec486c' }}\n                />\n              </Link>\n            </li>\n            <li className='nav-item io-sider-button'>\n              <Link type='default' to={`/`}>\n                <Icon\n                  type={'home'}\n                  theme='outlined'\n                  // style={{ color: '#3ce458' }}\n                />\n              </Link>\n            </li>\n            <li className='nav-item'>\n              <p style={{ color: 'grey', paddingLeft: '0.7rem' }}>starboard</p>\n            </li>\n          </ul>\n        </Header>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.auth.user,\n    query: state.nodes.query,\n    mainSider: state.components.componentList['mainSider'],\n    activeNode: state.nodes.activeNode,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signOut,\n  searchNodes,\n  createNode,\n  createFileNode,\n  createUrlNode,\n  showComponent,\n  hideComponent,\n})(PinHeader);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Layout } from 'antd';\n// custom code\nimport MainSider from '../elements/MainSider';\nimport PinList from '../elements/node/PinList';\nimport PinHeader from '../elements/PinHeader';\n// import IOBar from '../elements/IOBar';\n\nconst { Content } = Layout;\n\nclass Pins extends Component {\n  componentDidMount() {\n    document.title = 'pins';\n    // temporary fix to undo whatever is setting overflow hidden on-login\n    document.body.style.removeProperty('overflow');\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }\n\n  renderMainSider = () => {\n    if (this.props.mainSider) {\n      return <MainSider />;\n    }\n  };\n\n  render() {\n    return (\n      <Layout className='page-layout'>\n        <Layout>\n          {this.renderMainSider()}\n          <Content style={{ minHeight: '100vh' }}>\n            <PinHeader />\n            <div className='list-container'>\n              <PinList />\n            </div>\n          </Content>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isSignedIn: state.auth.isSignedIn,\n    mainSider: state.components.componentList['mainSider'],\n  };\n};\n\nexport default connect(mapStateToProps)(Pins);\n","import React, { Component, Fragment } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n// custom code\nimport '../app.less';\nimport { isAuthenticated } from '../api/redux/actions';\n// custom components\nimport Login from './layouts/Login';\nimport ForgotPassword from './layouts/ForgotPassword';\nimport Home from './layouts/Home';\nimport Profile from './layouts/Profile';\nimport Options from './layouts/Options';\nimport Activity from './layouts/Activity';\nimport QuillEditor from './QuillEditor/QuillEditor';\nimport Collections from './layouts/Collections';\nimport Spinner from './elements/Spinner';\nimport CreateAccount from './layouts/CreateAccount';\nimport AssociationBrowser from './layouts/AssociationBrowser';\nimport GraphBrowser from './layouts/GraphBrowser';\nimport Help from './layouts/Help';\nimport Pins from './layouts/Pins';\n\nclass App extends Component {\n  componentDidMount() {\n    if (this.props.isAuth === null) {\n      this.props.isAuthenticated();\n    }\n  }\n  render() {\n    let routes;\n    if (this.props.isAuth) {\n      routes = (\n        <Switch>\n          <Route path='/' exact component={Home} />\n          <Route path='/profile/:username' exact component={Profile} />\n          <Route path='/activity' exact component={Activity} />\n          <Route path='/collections' exact component={Collections} />\n          <Route path='/edit/text/:uuid' exact component={QuillEditor} />\n          <Route path='/edit/profile' exact component={Options} />\n          <Route path='/associations/:uuid' exact component={AssociationBrowser} />\n          <Route path='/graph/:uuid?' exact component={GraphBrowser} />\n          <Route path='/pins' exact component={Pins} />\n          <Route path='/help' exact component={Help} />\n        </Switch>\n      );\n    } else if (this.props.isFetchingAuth) {\n      routes = <Spinner />;\n    } else {\n      routes = (\n        <Switch>\n          <Route path='/' exact component={Login} />\n          <Route path='/create-account' exact component={CreateAccount} />\n          <Route path='/forgot-password' exact component={ForgotPassword} />\n          <Route component={Login} />\n        </Switch>\n      );\n    }\n    return <Fragment>{routes}</Fragment>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.auth.user,\n    isFetchingAuth: state.auth.isFetching,\n    isAuth: state.auth.isAuth,\n  };\n};\n\nexport default connect(mapStateToProps, { isAuthenticated })(App);\n","import {\n  CREATE_ACCOUNT,\n  CREATE_ACCOUNT_SUCCESS,\n  CREATE_ACCOUNT_ERROR,\n  SIGN_IN,\n  SIGN_IN_SUCCESS,\n  SIGN_IN_ERROR,\n  SIGN_OUT,\n  SIGN_OUT_ERROR,\n  REFRESH_AUTH,\n  REFRESH_AUTH_SUCCESS,\n  REFRESH_AUTH_ERROR,\n  UPDATE_USER_NODE,\n  UPDATE_USER_NODE_ERROR,\n  UPDATE_USER_NODE_SUCCESS,\n  UPDATE_USER_AVATAR,\n  UPDATE_USER_AVATAR_SUCCESS,\n  UPDATE_USER_AVATAR_ERROR,\n  UPDATE_USER_HEADER,\n  UPDATE_USER_HEADER_SUCCESS,\n  UPDATE_USER_HEADER_ERROR,\n} from '../actions/types';\n\nconst INITIAL_STATE = {\n  isAuth: null,\n  isFetching: null,\n  user: null,\n};\n\n// reducer for authentication state and user object\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CREATE_ACCOUNT:\n      return { ...state, isFetching: true };\n    case CREATE_ACCOUNT_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        user: action.payload,\n        isAuth: true,\n      };\n    case CREATE_ACCOUNT_ERROR:\n      return { ...state, isFetching: null, user: null, isAuth: false };\n    case SIGN_IN:\n      return { ...state, isFetching: true };\n    case SIGN_IN_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        user: action.payload,\n        isAuth: true,\n      };\n    case SIGN_IN_ERROR:\n      return { ...state, isFetching: null, user: null, isAuth: false };\n    case SIGN_OUT:\n      return { ...state, isFetching: true };\n    case SIGN_OUT_ERROR:\n      return { ...state, isFetching: null };\n    case REFRESH_AUTH:\n      return {\n        ...state,\n        isFetching: true,\n        user: action.payload,\n        isAuth: action.isAuth,\n      };\n    case REFRESH_AUTH_SUCCESS:\n      return { isFetching: null, user: action.payload, isAuth: true };\n    case REFRESH_AUTH_ERROR:\n      return { ...state, isFetching: null, user: null, isAuth: false };\n    case UPDATE_USER_NODE:\n      return { ...state, isFetching: true };\n    case UPDATE_USER_NODE_SUCCESS:\n      return { ...state, isFetching: null, user: action.user };\n    case UPDATE_USER_NODE_ERROR:\n      return { ...state, isFetching: null };\n    case UPDATE_USER_AVATAR:\n      return { ...state, isFetching: true };\n    case UPDATE_USER_AVATAR_SUCCESS:\n      window.location.reload();\n      return { ...state, isFetching: null, user: { ...state.user, avatar: action.url } };\n    case UPDATE_USER_AVATAR_ERROR:\n      return { ...state, isFetching: null };\n    case UPDATE_USER_HEADER:\n      return { ...state, isFetching: true };\n    case UPDATE_USER_HEADER_SUCCESS:\n      window.location.reload();\n      return { ...state, isFetching: null, user: { ...state.user, header: action.url } };\n    case UPDATE_USER_HEADER_ERROR:\n      return { ...state, isFetching: null };\n    default:\n      return state;\n  }\n};\n","import {\n  EDIT_TEXT_NODE,\n  EDIT_TEXT_NODE_SUCCESS,\n  EDIT_TEXT_NODE_ERROR,\n  FETCH_NODES,\n  FETCH_NODES_SUCCESS,\n  FETCH_NODES_ERROR,\n  UPDATE_NODE,\n  UPDATE_NODE_ERROR,\n  UPDATE_NODE_SUCCESS,\n  UPDATE_ACTIVE_NODE,\n  UPDATE_ACTIVE_NODE_ERROR,\n  UPDATE_ACTIVE_NODE_SUCCESS,\n  PROCESS_TEXT_NODE,\n  PROCESS_TEXT_NODE_SUCCESS,\n  PROCESS_TEXT_NODE_ERROR,\n  CREATE_FILE_NODE,\n  CREATE_FILE_NODE_SUCCESS,\n  CREATE_FILE_NODE_ERROR,\n  SEARCH_NODES,\n  SEARCH_NODES_SUCCESS,\n  SEARCH_NODES_ERROR,\n  MARK_NODE_VIEW,\n  MARK_NODE_VIEW_SUCCESS,\n  MARK_NODE_VIEW_ERROR,\n  CREATE_NODE,\n  CREATE_NODE_SUCCESS,\n  CREATE_NODE_ERROR,\n  SET_ACTIVE_NODE,\n  SET_ACTIVE_NODE_SUCCESS,\n  SET_ACTIVE_NODE_ERROR,\n  DELETE_NODE,\n  DELETE_NODE_ERROR,\n  DELETE_NODE_SUCCESS,\n  CLEAR_ACTIVE_NODE,\n  GENERATE_EXPORT,\n  GENERATE_EXPORT_ERROR,\n  GENERATE_EXPORT_SUCCESS,\n} from '../actions/types';\n\nconst INITIAL_STATE = {\n  isFetching: null,\n  isSaving: null,\n  isDeleting: null,\n  nodeList: [],\n  totalItems: null,\n  query: { page: 1 },\n  activeNode: null,\n};\n\n// reducer for content nodes\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case FETCH_NODES:\n      return { ...state, isFetching: true };\n    case FETCH_NODES_SUCCESS:\n      var nodesArray;\n      // reset nodesArray if page number has decreased\n      if (action.query.page > state.query.page) {\n        nodesArray = [...state.nodeList];\n      } else {\n        nodesArray = [];\n      }\n      // update the nodelist with the new values\n      Object.values(action.payload.nodes).forEach((node) => {\n        // if (!nodesArray.some((item) => item.uuid === node.uuid)) {\n        //   nodesArray.push(node);\n        // }\n        nodesArray.push(node);\n      });\n      if (nodesArray.length > 100) {\n        // if the length gets too long free up some memory\n        nodesArray.splice(0, action.payload.nodes.length);\n      }\n      return {\n        ...state,\n        isFetching: null,\n        query: action.query,\n        totalItems: action.payload.totalItems,\n        nodeList: nodesArray,\n      };\n    case FETCH_NODES_ERROR:\n      return { ...state, isFetching: null };\n    case SEARCH_NODES:\n      return { ...state, isFetching: true };\n    case SEARCH_NODES_SUCCESS:\n      nodesArray = [];\n      // update the nodelist with the new values\n      Object.values(action.payload.nodes).forEach((node) => {\n        if (!nodesArray.some((item) => item.uuid === node.uuid)) {\n          nodesArray.push(node);\n        }\n      });\n      if (nodesArray.length > 100) {\n        // if the length gets too long free up some memory\n        nodesArray.splice(0, action.payload.nodes.length);\n      }\n      return {\n        ...state,\n        isFetching: null,\n        query: { page: 1, type: action.query.type, searchQuery: action.query.searchQuery },\n        totalItems: action.payload.totalItems,\n        nodeList: nodesArray,\n      };\n    case SEARCH_NODES_ERROR:\n      return { ...state, isFetching: null };\n    case UPDATE_NODE:\n      return { ...state, isSaving: true };\n    case UPDATE_NODE_ERROR:\n      return { ...state, isSaving: null };\n    case UPDATE_NODE_SUCCESS:\n      return {\n        ...state,\n        isSaving: null,\n        nodeList: state.nodeList.map((node) => {\n          if (node.uuid === action.result.uuid) {\n            node = action.result;\n          }\n          return node;\n        }),\n      };\n    case UPDATE_ACTIVE_NODE:\n      return { ...state, isSaving: true };\n    case UPDATE_ACTIVE_NODE_ERROR:\n      return { ...state, isSaving: null };\n    case UPDATE_ACTIVE_NODE_SUCCESS:\n      return {\n        ...state,\n        isSaving: null,\n        activeNode: action.result.uuid === state.activeNode.uuid ? action.result : state.activeNode,\n        nodeList: state.nodeList.map((node) => {\n          if (node.uuid === action.result.uuid) {\n            node = action.result;\n          }\n          return node;\n        }),\n      };\n    case EDIT_TEXT_NODE:\n      return { ...state, isSaving: true };\n    case EDIT_TEXT_NODE_SUCCESS:\n      return {\n        ...state,\n        isSaving: null,\n        // update the content on the activeNode\n        activeNode: {\n          ...state.activeNode,\n          content: action.node.content,\n        },\n      };\n    case EDIT_TEXT_NODE_ERROR:\n      return { ...state, isSaving: null };\n    case PROCESS_TEXT_NODE:\n      return { ...state, isSaving: true };\n    case PROCESS_TEXT_NODE_SUCCESS:\n      return {\n        ...state,\n        isSaving: null,\n        // update the preview in the nodelist\n        // leave everything else as-is\n        nodeList: state.nodeList.map((node) => {\n          // only update it for the processsed node\n          if (node.uuid === action.node.uuid) {\n            node.preview = action.node.preview;\n          }\n          return node;\n        }),\n      };\n    case PROCESS_TEXT_NODE_ERROR:\n      return { ...state, isSaving: null };\n    case CREATE_FILE_NODE:\n      return { ...state, isSaving: true };\n    case CREATE_FILE_NODE_SUCCESS:\n      return {\n        ...state,\n        isFetching: null,\n        nodeList: [action.payload, ...state.nodeList],\n      };\n    case CREATE_FILE_NODE_ERROR:\n      return { ...state, isSaving: null };\n    case CREATE_NODE:\n      return { ...state, isSaving: true };\n    case CREATE_NODE_SUCCESS:\n      // add new node to list and move to front of node order\n      return {\n        ...state,\n        isFetching: null,\n        nodeList: [\n          action.payload,\n          ...state.nodeList.filter((node) => node.uuid !== action.payload.uuid),\n        ],\n        activeNode: action.payload.node,\n      };\n    case CREATE_NODE_ERROR:\n      return { ...state, isSaving: null };\n    case MARK_NODE_VIEW:\n      return { ...state, isSaving: true };\n    case MARK_NODE_VIEW_SUCCESS:\n      var newNodeList;\n      // only send the node back to the beginning if the user is at the top of the list\n      if (state.nodeList.length < 20) {\n        newNodeList = [\n          action.node,\n          ...state.nodeList.filter((node) => node.uuid !== action.node.uuid),\n        ];\n      } else {\n        // otherwise just make it \"disapear\" to reappaar when they return to the top\n        newNodeList = [...state.nodeList.filter((node) => node.uuid !== action.node.uuid)];\n      }\n      return {\n        ...state,\n        isSaving: null,\n        nodeList: newNodeList,\n      };\n    case MARK_NODE_VIEW_ERROR:\n      return { ...state, isSaving: null };\n    case SET_ACTIVE_NODE:\n      return { ...state, isFetching: true };\n    case SET_ACTIVE_NODE_SUCCESS:\n      return { ...state, isFetching: null, activeNode: action.payload.node };\n    case SET_ACTIVE_NODE_ERROR:\n      return { ...state, isFetching: null };\n    case CLEAR_ACTIVE_NODE:\n      return { ...state, activeNode: null };\n    case DELETE_NODE:\n      return { ...state, isDeleting: true };\n    case DELETE_NODE_SUCCESS:\n      return {\n        ...state,\n        // filter the node out of the list\n        nodeList: [...state.nodeList.filter((node) => node.uuid !== action.uuid)],\n        isDeleting: null,\n      };\n    case DELETE_NODE_ERROR:\n      return { ...state, isDeleting: null };\n    case GENERATE_EXPORT:\n      return { ...state, isSaving: true };\n    case GENERATE_EXPORT_ERROR:\n      return {\n        ...state,\n        isSaving: null,\n      };\n    case GENERATE_EXPORT_SUCCESS:\n      return {\n        ...state,\n        isSaving: null,\n        nodeList: [action.payload, ...state.nodeList],\n        // activeNode: action.payload.node,\n      };\n    default:\n      return state;\n  }\n};\n","import { SHOW_COMPONENT, HIDE_COMPONENT } from '../actions/types';\n\nconst INITIAL_STATE = {\n  componentList: {},\n};\n\n// reducer for UI components which need to store redux state\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SHOW_COMPONENT:\n      return {\n        ...state,\n        componentList: {\n          ...state.componentList,\n          [action.payload.type]: { content: action.payload.content, visible: true },\n        },\n      };\n    case HIDE_COMPONENT:\n      return {\n        ...state,\n        componentList: {\n          ...state.componentList,\n          [action.payload.type]: null,\n        },\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  FETCH_GRAPH_DATA,\n  FETCH_GRAPH_DATA_ERROR,\n  FETCH_GRAPH_DATA_SUCCESS,\n} from '../actions/types';\n\nconst INITIAL_STATE = {\n  isFetching: null,\n  graphNodeList: [],\n  graphAssociationList: [],\n  totalItems: null,\n  query: { page: 1 },\n  activeNode: null,\n  graphData: null,\n};\n\n// reducer for content nodes\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case FETCH_GRAPH_DATA:\n      return { ...state, isFetching: true };\n    case FETCH_GRAPH_DATA_ERROR:\n      return { ...state, isFetching: null };\n    case FETCH_GRAPH_DATA_SUCCESS:\n      // format nodes\n      const nodeArray = [];\n      action.payload.nodes.map((node) => {\n        return nodeArray.push(node);\n      });\n      // format associations\n      const associationArray = [];\n      action.payload.associations.map((association) => {\n        const reformated = { source: association.nodeId, target: association.linkedNode };\n        return associationArray.push(reformated);\n      });\n      return {\n        ...state,\n        isFetching: null,\n        graphData: { nodes: nodeArray, associations: associationArray },\n      };\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\n//custom code\nimport history from './utils/history';\nimport App from './components/App';\nimport reducers from './api/redux/reducers';\n\n// add redux devtools\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n// create store\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(reduxThunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>,\n  document.querySelector('#root')\n);\n","import { RESET_APP } from '../actions/types';\n// custom code\nimport authReducer from './authReducer';\nimport nodeReducer from './nodeReducer';\nimport componentReducer from './componentReducer';\nimport associationReducer from './associationReducer';\nimport graphReducer from './graphReducer';\n\n// custom combineReducers\nexport default (state = {}, action) => {\n  // reset app state if need-be\n  if (action.type === RESET_APP) {\n    state = {};\n  }\n\n  // return other reducers\n  return {\n    auth: authReducer(state.auth, action),\n    nodes: nodeReducer(state.nodes, action),\n    components: componentReducer(state.components, action),\n    associations: associationReducer(state.associations, action),\n    graph: graphReducer(state.graph, action),\n  };\n};\n","module.exports = __webpack_public_path__ + \"static/media/synthona-logo.b740604b.png\";","module.exports = __webpack_public_path__ + \"static/media/cloud9.22dc8cce.png\";"],"sourceRoot":""}